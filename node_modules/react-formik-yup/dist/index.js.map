{"version":3,"file":"index.js","sources":["../src/lib/wizard/Success.jsx","../src/lib/hooks/useWindowSize.jsx","../src/lib/wizard/MinimalProgressBar.jsx","../src/lib/wizard/StepProgressBar.jsx","../src/lib/wizard/ProgressBar.jsx","../src/lib/wizard/ChoiceDialog.jsx","../src/lib/FormWizard.jsx","../src/lib/inputs/GenericInput.jsx","../src/lib/inputs/TextInput.jsx","../src/lib/inputs/textAreaInput.jsx","../src/lib/inputs/DynamicTextInput.jsx","../src/lib/inputs/selectInput.jsx","../src/lib/inputs/CheckboxInput.jsx","../src/lib/FormItem.jsx"],"sourcesContent":["import React from \"react\";\nimport { Grid, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: { minHeight: \"50vh\" }\n}));\nconst Success = ({ title, titleComponent, message, messageComponent }) => {\n  const classes = useStyles();\n  const messageView = () => {\n    if (message) {\n      return (\n        <Grid item component={messageComponent}>\n          {message}\n        </Grid>\n      );\n    }\n    return;\n  };\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item component={titleComponent}>\n        {title}\n      </Grid>\n      {messageView()}\n    </Grid>\n  );\n};\n\nexport default Success;\n","import { useState, useEffect } from \"react\";\n\nexport default function useWindowSize() {\n  const isClient = typeof window === \"object\";\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n\n      height: isClient ? window.innerHeight : undefined\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowSize;\n}\n","import React from \"react\";\nimport { LinearProgress, Grid, Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function MobileProgressBar({ current, total }) {\n  const classes = useStyles();\n  return (\n    <Container>\n      <Grid container justify=\"center\">\n        <Grid item xs={12}>\n          <LinearProgress\n            className={classes.margin}\n            variant=\"determinate\"\n            color=\"primary\"\n            value={(current / total) * 100}\n          />\n        </Grid>\n      </Grid>\n      <Grid container justify=\"flex-end\" alignItems=\"center\">\n        <Grid item>{(current / total) * 100}%</Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Stepper, Step, StepLabel, StepConnector } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst Connector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: \"calc(-50% + 16px)\",\n    right: \"calc(50% + 16px)\"\n  },\n  active: {\n    \"& $line\": {\n      borderColor: \"#784af4\"\n    }\n  },\n  completed: {\n    \"& $line\": {\n      borderColor: \"#784af4\"\n    }\n  },\n  line: {\n    borderColor: \"#eaeaf0\",\n    borderTopWidth: 3,\n    borderRadius: 1\n  }\n})(StepConnector);\n\nexport default function StepProgressBar({ steps, current }) {\n  return (\n    <React.Fragment>\n      <Stepper activeStep={current} alternativeLabel connector={<Connector />}>\n        {steps.map((step, i) => (\n          <Step key={i}>\n            <StepLabel>{step.title}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport useWindowSize from \"../hooks/useWindowSize\";\nimport { Container } from \"@material-ui/core\";\nimport MinimalProgressBar from \"./MinimalProgressBar\";\nimport StepProgressBar from \"./StepProgressBar\";\n\nimport PropTypes from \"prop-types\";\n\nconst ProgressBar = ({ steps, currentStep }) => {\n  const [progressFitsScreen, setProgressFitsScreen] = useState(true);\n  const windowSize = useWindowSize();\n  useEffect(() => {\n    const checkFit = windowSize => {\n      const stepsCount = Object.keys(steps).length;\n      const pixelWidthLimit = 60 * (stepsCount - 1) + 200;\n      if (windowSize.width < pixelWidthLimit) {\n        setProgressFitsScreen(false);\n      } else {\n        setProgressFitsScreen(true);\n      }\n    };\n    checkFit(windowSize);\n  }, [windowSize]);\n  return (\n    <Container style={{ paddingTop: \"40px\" }}>\n      {progressFitsScreen ? (\n        <StepProgressBar current={currentStep} steps={steps} />\n      ) : (\n        <MinimalProgressBar current={currentStep} total={steps.length} />\n      )}\n    </Container>\n  );\n};\n\nProgressBar.propTypes = {\n  steps: PropTypes.array.isRequired,\n  currentStep: PropTypes.number.isRequired\n};\n\nexport default ProgressBar;\n","import React, { useState, useEffect } from \"react\";\n//import { Modal, Button } from \"react-bootstrap\";\nimport {\n  Dialog,\n  Button,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions\n} from \"@material-ui/core\";\n\nfunction ChoiceDialog({\n  modalHeader,\n  messageHeader,\n  message,\n  positiveBtnText,\n  negativeBtnText,\n  handlePositive,\n  handleNegative,\n  ...props\n}) {\n  return (\n    <Dialog\n      {...props}\n      aria-labelledby=\"draft loader\"\n      aria-describedby=\"option to load existing draft\"\n      centered=\"true\"\n    >\n      <DialogTitle id=\"contained-modal-title-vcenter\">\n        {modalHeader}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"dialog-content-text\">\n          {messageHeader}\n        </DialogContentText>\n        <DialogContentText id=\"dialog-content-text\">\n          {message}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"secondary\" onClick={handleNegative}>\n          {negativeBtnText}\n        </Button>\n        <Button color=\"primary\" autoFocus onClick={handlePositive}>\n          {positiveBtnText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\nexport default ChoiceDialog;\n","/* eslint-disable no-undef */\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Success from \"./wizard/Success\";\nimport ProgressBar from \"./wizard/ProgressBar\";\nimport ChoiceDialog from \"./wizard/ChoiceDialog\";\n\nimport PropTypes from \"prop-types\";\n// TODO: Maybe implement a prompt when user navigates away from unsaved form?\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    margin: \"0 auto\",\n    padding: \"0\",\n    [theme.breakpoints.up(\"xs\")]: {\n      width: \"100%\"\n    }\n  }\n}));\n\nexport function FormWizard({\n  formComponents,\n  doSubmit,\n  displayProgress = true,\n  successTitle,\n  successTitleComponent,\n  successMessage,\n  successMessageComponent\n}) {\n  // form\n  const [formState, setFormState] = useState({});\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  // step\n  const [currentStep, setCurrentStep] = useState(0);\n  // modal\n  const [openDialog, setOpenDialog] = useState(false);\n  const [loadDraftData, setLoadDraftData] = useState(false);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    checkDraft();\n  }, []);\n\n  useEffect(() => {\n    if (Object.entries(formState).length !== 0) {\n      saveDraft();\n    }\n  }, [formState]);\n\n  const handleLoadData = () => {\n    if (loadDraftData) {\n      let formDraft = JSON.parse(sessionStorage.getItem(\"recipe_draft\"));\n      setFormState({ ...formDraft[1] });\n      setCurrentStep(formDraft[0]);\n    } else {\n      sessionStorage.removeItem(\"recipe_draft\");\n    }\n  };\n\n  const saveDraft = () => {\n    let formDraft = JSON.stringify([currentStep, formState]);\n    sessionStorage.setItem(\"recipe_draft\", formDraft);\n  };\n  const next = values => {\n    setFormState(prevState => {\n      return { ...prevState, ...values };\n    });\n\n    setCurrentStep(currentStep + 1);\n  };\n\n  const back = (e, values) => {\n    e.preventDefault();\n    setFormState(prevState => {\n      return { ...prevState, ...values };\n    });\n    return setCurrentStep(currentStep - 1);\n  };\n\n  const handleSubmit = () => {\n    // if user is unregistered\n    // cache formState as draft\n    // TODO: accept external handler and optional value to check instead of hardcoded author check\n\n    if (formState.author === \"Unregistered\") {\n      console.log(\"User is unregistered, saving draft\");\n      saveDraft();\n      // test, remove below after testing\n      setSubmitSuccess(true);\n\n      // reroute to register\n    } else {\n      doSubmit(formState);\n      setCurrentStep(formComponents.length);\n      setSubmitSuccess(true);\n    }\n  };\n\n  // Modal\n  const handlePositive = () => {\n    setOpenDialog(false);\n    setLoadDraftData(true);\n  };\n\n  const handleNegative = () => {\n    setOpenDialog(false);\n  };\n\n  const checkDraft = () => {\n    let formDraft = sessionStorage.getItem(\"recipe_draft\");\n    if (formDraft) {\n      setOpenDialog(true);\n    } else {\n      setOpenDialog(false);\n    }\n  };\n\n  // Display forms\n  const displayStep = () => {\n    let stepProps = {\n      next: next,\n      back: back,\n      values: formState,\n      handleSubmit: handleSubmit\n    };\n\n    return (\n      <Grid container direction={\"column\"}>\n        {React.createElement(formComponents[currentStep].component, {\n          ...stepProps\n        })}\n      </Grid>\n    );\n  };\n\n  return (\n    <Container className={classes.formContainer}>\n      <ChoiceDialog\n        open={openDialog}\n        modalHeader={\"Unsubmitted Draft\"}\n        messageHeader={\"Draft Available\"}\n        message={\"A draft has been found, would you like to load it?\"}\n        positiveBtnText={\"Load\"}\n        negativeBtnText={\"Delete\"}\n        handlePositive={handlePositive}\n        handleNegative={handleNegative}\n        onExiting={handleLoadData}\n      />\n      {displayProgress && (\n        <ProgressBar steps={[...formComponents]} currentStep={currentStep} />\n      )}\n      {submitSuccess ? (\n        <Success\n          title={successTitle}\n          titleComponent={successTitleComponent}\n          message={successMessage}\n          messageComponent={successMessageComponent}\n        />\n      ) : (\n        displayStep()\n      )}\n    </Container>\n  );\n}\n\nFormWizard.propTypes = {\n  formComponents: PropTypes.array.isRequired,\n  doSubmit: PropTypes.func.isRequired,\n  displayProgress: PropTypes.bool.isRequired,\n  successTitle: PropTypes.string.isRequired,\n  successTitleComponent: PropTypes.string.isRequired,\n  successMessage: PropTypes.string.isRequired,\n  successMessageComponent: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { Input } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst GenericInput = ({\n  label,\n  error,\n  helpertext,\n  autoComplete = \"off\",\n  onChange,\n  touched,\n  onBlur,\n  value = \"\",\n  ...props\n}) => {\n  return (\n    <React.Fragment>\n      <Input\n        label={label}\n        error={error}\n        autoComplete={autoComplete}\n        aria-label={label + \" Text Input\"}\n        helperText={error ? helpertext : \"\"}\n        onChange={onChange}\n        onBlur={onBlur}\n        value={value}\n        touched={touched.toString()}\n        {...props}\n      />\n    </React.Fragment>\n  );\n};\n\nGenericInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n  touched: PropTypes.object.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  autoComplete: PropTypes.oneOf([\"on\", \"off\"]),\n  helpertext: PropTypes.string,\n  placeholder: PropTypes.string\n};\n\nexport default GenericInput;\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst TextInput = ({\n  label,\n  error,\n  helpertext,\n  autoComplete = \"off\",\n  onChange,\n  touched,\n  onBlur,\n  value = \"\",\n  ...props\n}) => {\n  return (\n    <React.Fragment>\n      <TextField\n        label={label}\n        error={error}\n        autoComplete={autoComplete}\n        aria-label={label + \" Text Input\"}\n        helperText={error ? helpertext : \"\"}\n        onChange={onChange}\n        onBlur={onBlur}\n        value={value}\n        touched={touched.toString()}\n        {...props}\n      />\n    </React.Fragment>\n  );\n};\n\nTextInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: \"text\",\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n  touched: PropTypes.object.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  autoComplete: PropTypes.oneOf([\"on\", \"off\"]),\n  helpertext: PropTypes.string,\n  placeholder: PropTypes.string\n};\n\nexport default TextInput;\n","import React from \"react\";\n\nimport { TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaInput = ({\n  label,\n  error,\n  helpertext,\n  autoComplete = \"off\",\n  touched,\n  ...props\n}) => {\n  return (\n    <React.Fragment>\n      <TextField\n        rows={5}\n        label={label}\n        error={error}\n        multiline={true}\n        autoComplete={autoComplete}\n        aria-label={label + \" Text Input\"}\n        helperText={error ? helpertext : \"\"}\n        touched={touched.toString()}\n        {...props}\n      />\n    </React.Fragment>\n  );\n};\n\nTextAreaInput.propTypes = {\n  type: \"textarea\",\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func.isRequired,\n  error: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  value: PropTypes.object.isRequired,\n  placeholder: PropTypes.string,\n  helpertext: PropTypes.string,\n  autoComplete: PropTypes.string\n};\nexport default TextAreaInput;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  IconButton,\n  Divider,\n  FormHelperText,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  InputAdornment,\n  TextField,\n  Fade,\n  Menu,\n  MenuItem,\n  Typography\n} from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Add, Clear, Done, MoreHoriz } from \"@material-ui/icons\";\nimport PropTypes from \"prop-types\";\nimport { reach } from \"yup\";\n\n// TODO: input and listbox into separate individual components\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  divider: {\n    color: \"black\",\n    height: 40,\n    margin: 5\n  },\n  itemText: { wordWrap: \"break-word\" }\n}));\nconst DynamicTextInput = ({\n  setFieldValue,\n  setFieldError,\n  setFieldTouched,\n  schema,\n  value,\n  touched,\n  handleBlur,\n  variant,\n  ...props\n}) => {\n  const [currentInputValue, setCurrentInputValue] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState();\n  const [optionsMenuIndex, setOptionsMenuIndex] = useState(null);\n  const [isEdit, setIsEdit] = useState(false); // For conditional add/update icon\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const inputEl = useRef(null);\n  const classes = useStyles();\n\n  const handleOptionsClick = (e, index) => {\n    setOptionsMenuIndex(index);\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleOptionsClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleInputSave = e => {\n    e.preventDefault();\n    const newValues = value === undefined ? [] : value;\n    if (!isNaN(currentIndex)) {\n      newValues[currentIndex].value = currentInputValue;\n    } else {\n      newValues.push({ value: currentInputValue });\n    }\n    setCurrentInputValue(\"\");\n    setCurrentIndex(undefined);\n    setIsDisabled(true);\n    setFieldError(props.name, undefined);\n    setFieldValue(props.name, newValues, false);\n    setFieldTouched(props.name, false, false);\n    setIsEdit(false);\n  };\n\n  const handleEdit = (e, index) => {\n    e.preventDefault();\n    handleOptionsClose();\n    setIsEdit(true);\n    setIsDisabled(false);\n    // index of clicked list item\n    setCurrentIndex(index);\n    setCurrentInputValue(value[index].value);\n    setFieldError(props.name, undefined);\n    inputEl.current.focus();\n  };\n\n  const handleRemove = (e, index) => {\n    e.preventDefault();\n    handleOptionsClose();\n    const newValues = value === undefined ? [] : [...value];\n    newValues.splice(index, 1);\n    setCurrentIndex(undefined);\n    setCurrentInputValue(\"\");\n    setFieldTouched(props.name, true, false);\n    setFieldValue(props.name, [...newValues], true);\n    setIsEdit(false);\n  };\n\n  const handleChange = e => {\n    validateInput(e);\n    setCurrentInputValue(e.target.value);\n  };\n\n  // validation used for input\n  const validateInput = e => {\n    let nestedSchema = reach(schema, `${props.name}[].value`);\n    nestedSchema\n      .validate(e.target.value)\n      .then(() => {\n        setFieldError(props.name, undefined);\n        setFieldTouched(props.name, true, false);\n        setIsDisabled(false);\n      })\n      .catch(err => {\n        setFieldError(props.name, err.message);\n        setIsDisabled(true);\n      });\n  };\n\n  const handleKeyPress = e => {\n    if (e.target.name === props.name && e.key === \"Enter\") {\n      if (!isDisabled && touched) {\n        handleInputSave(e);\n      } else {\n        e.preventDefault();\n        setFieldTouched(props.name, true, false);\n      }\n    }\n  };\n\n  const handleCancelClick = e => {\n    e.preventDefault();\n    setIsDisabled(true);\n    setIsEdit(false);\n    setCurrentInputValue(\"\");\n    setCurrentIndex(undefined);\n    setFieldError(props.name, undefined);\n    setFieldTouched(props.name, false, false);\n  };\n\n  const renderListGroup = () => {\n    if (value !== undefined) {\n      return (\n        <React.Fragment>\n          <List>\n            {value &&\n              value.map((item, index) => (\n                <ListItem\n                  button\n                  id={index}\n                  key={index}\n                  selected={currentIndex === index}\n                  onClick={e => {\n                    handleEdit(e, index);\n                  }}\n                  alignItems=\"flex-start\"\n                >\n                  <ListItemText\n                    className={classes.itemText}\n                    primary={index + 1 + \". \" + item.value}\n                  />\n                  <ListItemSecondaryAction>\n                    <IconButton\n                      tabIndex={index}\n                      aria-controls={index + \"-options-menu\"}\n                      aria-haspopup=\"true\"\n                      edge=\"end\"\n                      aria-label={\"item \" + index + \" options\"}\n                      onClick={e => {\n                        handleOptionsClick(e, index);\n                      }}\n                    >\n                      <MoreHoriz />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n          </List>\n          <Menu\n            id={\"list-options-menu\"}\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleOptionsClose}\n            TransitionComponent={Fade}\n          >\n            <MenuItem\n              key=\"edit\"\n              aria-label=\"edit\"\n              onClick={e => {\n                handleEdit(e, optionsMenuIndex);\n              }}\n            >\n              Edit\n            </MenuItem>\n            <MenuItem\n              key=\"delete\"\n              aria-label=\"delete\"\n              onClick={e => {\n                handleRemove(e, optionsMenuIndex);\n              }}\n            >\n              Delete\n            </MenuItem>\n          </Menu>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const renderEditingDisplay = () => {\n    return (\n      <Typography>\n        {!isNaN(currentIndex) && \"Editing: \" + (currentIndex + 1)}\n      </Typography>\n    );\n  };\n  return (\n    <React.Fragment>\n      <TextField\n        className={classes.root}\n        id={props.id}\n        autoComplete=\"off\"\n        aria-label={props.label + \" Input and Edit Field\"}\n        value={currentInputValue}\n        variant={variant}\n        onChange={e => {\n          handleChange(e);\n        }}\n        touched={touched.toString()}\n        onBlur={handleBlur}\n        onKeyPress={e => handleKeyPress(e)}\n        ref={inputEl}\n        {...props}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                onClick={e => handleCancelClick(e)}\n                title={\"Cancel \" + props.label + \" Input\"}\n                aria-label=\"clear input\"\n              >\n                <Clear />\n              </IconButton>\n              <Divider className={classes.divider} orientation=\"vertical\" />\n              <IconButton\n                onClick={e => handleInputSave(e)}\n                title={\"Save \" + props.label + \" Input\"}\n                aria-label=\"add to list\"\n                disabled={isDisabled}\n              >\n                {isEdit ? <Done /> : <Add />}\n              </IconButton>\n            </InputAdornment>\n          )\n        }}\n      />\n      {renderEditingDisplay()}\n      {props.error && <FormHelperText>{props.helpertext}</FormHelperText>}\n      {renderListGroup()}\n    </React.Fragment>\n  );\n};\n\nDynamicTextInput.propTypes = {\n  type: \"dynamictext\",\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  setFieldValue: PropTypes.func.isRequired,\n  setFieldError: PropTypes.func.isRequired,\n  setFieldTouched: PropTypes.func.isRequired,\n  schema: PropTypes.object.isRequired,\n  error: PropTypes.object.isRequired,\n  value: PropTypes.array.isRequired,\n  touched: PropTypes.bool.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  variant: PropTypes.string,\n  placeholder: PropTypes.string,\n  helpertext: PropTypes.string\n};\n\nexport default DynamicTextInput;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Select, InputLabel, FormHelperText } from \"@material-ui/core\";\n\nconst SelectInput = ({\n  type,\n  id,\n  name,\n  label,\n  error,\n  helpertext,\n  touched,\n  ...rest\n}) => {\n  const [items, setItems] = useState([]);\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n\n  useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  useEffect(() => {\n    if (rest.options.length === 1) {\n      setItems(rest.options);\n    } else if (rest.options !== undefined && rest.options !== null) {\n      rest.options.unshift({ label: \"\", value: \"\" });\n      setItems(rest.options);\n    } else {\n      setItems([{ label: \"Loading...\", value: \"\" }]);\n    }\n  }, [rest.options]);\n\n  return (\n    <React.Fragment>\n      <InputLabel disabled={rest.disabled} ref={inputLabel} htmlFor={id}>\n        {label}\n      </InputLabel>\n      <Select\n        native\n        labelWidth={labelWidth}\n        touched={touched.toString()}\n        inputProps={{ id: id, name: name }}\n        {...rest}\n      >\n        {items.map((item, key) => (\n          <option key={key} value={item.value}>\n            {item.label}\n          </option>\n        ))}\n      </Select>\n      {error && <FormHelperText>{helpertext}</FormHelperText>}\n    </React.Fragment>\n  );\n};\n\nSelectInput.propTypes = {\n  type: \"select\",\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func.isRequired,\n  error: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  value: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    })\n  ),\n  helpertext: PropTypes.string,\n  placeholder: PropTypes.string\n};\nexport default SelectInput;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  FormGroup,\n  FormLabel,\n  FormControlLabel,\n  FormHelperText,\n  Checkbox\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst CheckboxInput = ({\n  error,\n  touched,\n  helpertext,\n  options,\n  setFieldValue,\n  setFieldTouched,\n  validateField,\n  value,\n  ...props\n}) => {\n  const [values, setValues] = useState([]);\n\n  useEffect(() => {\n    setValues(value || []);\n  }, []);\n\n  const handleChange = checkName => e => {\n    let tmpArray = [...values];\n    if (e.target.checked) {\n      tmpArray.push(checkName);\n    } else {\n      const idx = tmpArray.indexOf(checkName);\n      tmpArray.splice(idx, 1);\n    }\n    setValues(tmpArray);\n    setFieldTouched(props.name, true);\n    setFieldValue(props.name, tmpArray).then(() => {\n      validateField(props.name);\n    });\n  };\n  return (\n    <React.Fragment>\n      <FormLabel component=\"legend\">{props.label}</FormLabel>\n      <FormGroup row>\n        {options.map((option, key) => (\n          <FormControlLabel\n            key={key}\n            disabled={props.disabled}\n            control={\n              <Checkbox\n                name={option.id}\n                checked={values.includes(option.id)}\n                onChange={handleChange(option.id)}\n                aria-label={option.label + \" Checkbox\"}\n                value={option.id}\n                onBlur={props.handleBlur}\n                touched={touched.toString()}\n                helpertext={error ? helpertext : \"\"}\n              />\n            }\n            label={option.label}\n          />\n        ))}\n      </FormGroup>\n      {error && <FormHelperText>{helpertext}</FormHelperText>}\n    </React.Fragment>\n  );\n};\nCheckboxInput.propTypes = {\n  type: \"text\",\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  validateField: PropTypes.func.isRequired,\n  setFieldValue: PropTypes.func.isRequired,\n  setFieldTouched: PropTypes.func.isRequired,\n  onBlur: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  value: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      label: PropTypes.string\n    })\n  ),\n  helpertext: PropTypes.string,\n  handleBlur: PropTypes.func.isRequired\n};\n\nexport default CheckboxInput;\n","/* eslint-disable handle-callback-err */\nimport React, { useEffect } from \"react\";\nimport { useField, Field } from \"formik\";\nimport PropTypes from \"prop-types\";\n\n// input components\nimport { FormControl } from \"@material-ui/core\";\nimport GenericInput from \"./inputs/GenericInput\";\nimport TextInput from \"./inputs/TextInput\";\nimport TextAreaInput from \"./inputs/textAreaInput\";\nimport DynamicTextInput from \"./inputs/DynamicTextInput\";\nimport SelectInput from \"./inputs/selectInput\";\nimport CheckboxInput from \"./inputs/CheckboxInput\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: \"100px\"\n  }\n}));\n\nconst FormInput = props => {\n  switch (props.type) {\n    case \"checkbox\":\n      return CheckboxInput(props);\n    case \"select\":\n      return SelectInput(props);\n    case \"dynamictext\":\n      return DynamicTextInput(props);\n    case \"textarea\":\n      return TextAreaInput(props);\n    case \"text\":\n    default:\n      return TextInput(props);\n  }\n};\n\nexport const FormItem = ({\n  id,\n  error,\n  touched,\n  label,\n  variant = \"outlined\",\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  const classes = useStyles();\n\n  return (\n    <FormControl\n      fullWidth={true}\n      variant={variant}\n      className={classes.formControl}\n      error={!!(meta.error !== undefined && meta.touched)}\n    >\n      {/* touched must be a boolean for props and changed to string within individual inputs */}\n      {/* Custom inputs in the future may read as boolean, dynamicInputs currently needs this as boolean */}\n      <FormInput\n        id={id}\n        error={!!(meta.error !== undefined && meta.touched)}\n        label={label}\n        helpertext={meta.error ? meta.error : \"\"}\n        touched={meta.touched}\n        value={field.value}\n        variant={variant}\n        {...props}\n      />\n    </FormControl>\n  );\n};\n\nFormItem.propTypes = {\n  type: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  error: PropTypes.string,\n  // touched: PropTypes.bool, // removed, getting weird error between steps\n  variant: PropTypes.string,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  placeHolder: PropTypes.string,\n  options: PropTypes.array // for select and checkbox only\n};\n"],"names":["useStyles","makeStyles","minHeight","Success","title","titleComponent","message","messageComponent","classes","messageView","React","root","useWindowSize","isClient","window","getSize","innerWidth","undefined","innerHeight","useState","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","theme","spacing","MobileProgressBar","current","total","LinearProgress","margin","Connector","withStyles","StepConnector","StepProgressBar","steps","map","step","i","ProgressBar","currentStep","progressFitsScreen","setProgressFitsScreen","checkFit","stepsCount","Object","keys","length","pixelWidthLimit","width","paddingTop","MinimalProgressBar","propTypes","PropTypes","array","isRequired","number","ChoiceDialog","modalHeader","messageHeader","positiveBtnText","negativeBtnText","handlePositive","handleNegative","props","breakpoints","up","FormWizard","formComponents","doSubmit","displayProgress","successTitle","successTitleComponent","successMessage","successMessageComponent","formState","setFormState","submitSuccess","setSubmitSuccess","setCurrentStep","openDialog","setOpenDialog","loadDraftData","setLoadDraftData","entries","handleLoadData","formDraft","JSON","parse","sessionStorage","getItem","removeItem","saveDraft","stringify","setItem","next","prevState","values","back","e","preventDefault","handleSubmit","author","log","checkDraft","displayStep","stepProps","createElement","component","formContainer","func","bool","string","GenericInput","label","error","helpertext","autoComplete","onChange","touched","onBlur","value","Input","toString","object","oneOfType","oneOf","TextInput","TextField","TextAreaInput","wordWrap","DynamicTextInput","setFieldValue","setFieldError","setFieldTouched","schema","handleBlur","variant","currentInputValue","setCurrentInputValue","currentIndex","setCurrentIndex","optionsMenuIndex","setOptionsMenuIndex","isEdit","setIsEdit","isDisabled","setIsDisabled","anchorEl","setAnchorEl","open","Boolean","inputEl","useRef","handleOptionsClick","index","currentTarget","handleOptionsClose","handleInputSave","newValues","isNaN","push","name","handleEdit","focus","handleRemove","splice","handleChange","target","validateInput","nestedSchema","reach","validate","then","catch","err","handleKeyPress","key","handleCancelClick","renderListGroup","item","ListItemText","itemText","MoreHoriz","Fade","renderEditingDisplay","id","Clear","Divider","divider","Done","Add","SelectInput","type","rest","items","setItems","inputLabel","labelWidth","setLabelWidth","offsetWidth","options","unshift","disabled","arrayOf","shape","CheckboxInput","validateField","setValues","tmpArray","checked","checkName","idx","indexOf","option","FormControlLabel","Checkbox","includes","FormInput","FormItem","useField","field","meta","formControl"],"mappings":"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"}