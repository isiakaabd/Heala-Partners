{"ast":null,"code":"var _jsxFileName = \"/home/codabae/Documents/Projects/DDProject/Dproject_Diagnostics/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport { muiTheme } from 'components/muiTheme';\nimport Header from 'components/layouts/Header';\nimport SideMenu from 'components/layouts/SideMenu';\nimport Routes from 'components/routes/Routes';\nimport { useSelector } from 'react-redux';\nimport ScrollToView from 'components/ScrollToView';\nimport Login from 'components/pages/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectionStyles = {\n  paddingLeft: '39rem',\n  paddingRight: '5rem',\n  paddingTop: '12rem',\n  paddingBottom: '5rem',\n  minHeight: '100vh',\n  width: '100%',\n  backgroundColor: '#fbfbfb'\n};\n\nconst App = () => {\n  _s();\n\n  const [selectedMenu, setSelectedMenu] = useState(0);\n  /* The selected SubMenu handles the visibility of the menu's sub. 0 is set as a buffer. so if you want to reset the submenu, just pass in 0 to the setSelectedSubMenu function. 1 is for the dashboard submenu, 2 for Patients and serially like that to the last menu items */\n\n  const [selectedSubMenu, setSelectedSubMenu] = useState(0);\n  const [selectedPatientMenu, setSelectedPatientMenu] = useState(0);\n  const [selectedHcpMenu, setSelectedHcpMenu] = useState(0);\n  const [selectedAppointmentMenu, setSelectedAppointmentMenu] = useState(0);\n  const [waitingListMenu, setWaitingListMenu] = useState(0);\n  const [selectedScopedMenu, setSelectedScopedMenu] = useState(0);\n  const [selectedPendingMenu, setSelectedPendingMenu] = useState(0);\n  const [chatMediaActive, setChatMediaActive] = useState(false);\n  const {\n    isAuthenticated\n  } = useSelector(state => state.auth);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: muiTheme,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [isAuthenticated && !chatMediaActive && /*#__PURE__*/_jsxDEV(Header, {\n          selectedMenu: selectedMenu,\n          selectedPendingMenu: selectedPendingMenu,\n          selectedSubMenu: selectedSubMenu,\n          selectedPatientMenu: selectedPatientMenu,\n          selectedHcpMenu: selectedHcpMenu,\n          selectedAppointmentMenu: selectedAppointmentMenu,\n          waitingListMenu: waitingListMenu,\n          selectedScopedMenu: selectedScopedMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ScrollToView, {\n          children: [!isAuthenticated && /*#__PURE__*/_jsxDEV(Route, {\n            path: ['/', '/login'],\n            render: props => /*#__PURE__*/_jsxDEV(Login, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n            style: {\n              display: isAuthenticated ? 'flex' : chatMediaActive ? 'block' : 'none'\n            },\n            children: [!chatMediaActive && /*#__PURE__*/_jsxDEV(SideMenu, {\n              selectedMenu: selectedMenu,\n              setSelectedMenu: setSelectedMenu,\n              setSelectedSubMenu: setSelectedSubMenu,\n              setWaitingListMenu: setWaitingListMenu,\n              setSelectedAppointmentMenu: setSelectedAppointmentMenu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              style: !chatMediaActive ? sectionStyles : {\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(Routes, {\n                setSelectedMenu: setSelectedMenu,\n                selectedMenu: selectedMenu,\n                selectedSubMenu: selectedSubMenu,\n                setSelectedSubMenu: setSelectedSubMenu,\n                selectedPatientMenu: selectedPatientMenu,\n                setSelectedPatientMenu: setSelectedPatientMenu,\n                selectedHcpMenu: selectedHcpMenu,\n                setSelectedHcpMenu: setSelectedHcpMenu,\n                selectedAppointmentMenu: selectedAppointmentMenu,\n                setSelectedAppointmentMenu: setSelectedAppointmentMenu,\n                waitingListMenu: waitingListMenu,\n                setWaitingListMenu: setWaitingListMenu,\n                chatMediaActive: chatMediaActive,\n                setChatMediaActive: setChatMediaActive,\n                selectedScopedMenu: selectedScopedMenu,\n                setSelectedScopedMenu: setSelectedScopedMenu,\n                setSelectedPendingMenu: setSelectedPendingMenu\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"DoV8FMKq3n48nHmcprqEqQn8w4g=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/codabae/Documents/Projects/DDProject/Dproject_Diagnostics/src/App.js"],"names":["React","useState","ThemeProvider","BrowserRouter","Router","Route","muiTheme","Header","SideMenu","Routes","useSelector","ScrollToView","Login","sectionStyles","paddingLeft","paddingRight","paddingTop","paddingBottom","minHeight","width","backgroundColor","App","selectedMenu","setSelectedMenu","selectedSubMenu","setSelectedSubMenu","selectedPatientMenu","setSelectedPatientMenu","selectedHcpMenu","setSelectedHcpMenu","selectedAppointmentMenu","setSelectedAppointmentMenu","waitingListMenu","setWaitingListMenu","selectedScopedMenu","setSelectedScopedMenu","selectedPendingMenu","setSelectedPendingMenu","chatMediaActive","setChatMediaActive","isAuthenticated","state","auth","props","display"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css'\nimport { muiTheme } from 'components/muiTheme'\nimport Header from 'components/layouts/Header'\nimport SideMenu from 'components/layouts/SideMenu'\nimport Routes from 'components/routes/Routes'\nimport { useSelector } from 'react-redux'\nimport ScrollToView from 'components/ScrollToView'\nimport Login from 'components/pages/Login'\n\nconst sectionStyles = {\n  paddingLeft: '39rem',\n  paddingRight: '5rem',\n  paddingTop: '12rem',\n  paddingBottom: '5rem',\n  minHeight: '100vh',\n  width: '100%',\n  backgroundColor: '#fbfbfb',\n}\n\nconst App = () => {\n  const [selectedMenu, setSelectedMenu] = useState(0)\n  /* The selected SubMenu handles the visibility of the menu's sub. 0 is set as a buffer. so if you want to reset the submenu, just pass in 0 to the setSelectedSubMenu function. 1 is for the dashboard submenu, 2 for Patients and serially like that to the last menu items */\n  const [selectedSubMenu, setSelectedSubMenu] = useState(0)\n  const [selectedPatientMenu, setSelectedPatientMenu] = useState(0)\n  const [selectedHcpMenu, setSelectedHcpMenu] = useState(0)\n  const [selectedAppointmentMenu, setSelectedAppointmentMenu] = useState(0)\n  const [waitingListMenu, setWaitingListMenu] = useState(0)\n  const [selectedScopedMenu, setSelectedScopedMenu] = useState(0)\n  const [selectedPendingMenu, setSelectedPendingMenu] = useState(0)\n  const [chatMediaActive, setChatMediaActive] = useState(false)\n\n  const { isAuthenticated } = useSelector((state) => state.auth)\n\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <Router>\n        <div className=\"container\">\n          {isAuthenticated && !chatMediaActive && (\n            <Header\n              selectedMenu={selectedMenu}\n              selectedPendingMenu={selectedPendingMenu}\n              selectedSubMenu={selectedSubMenu}\n              selectedPatientMenu={selectedPatientMenu}\n              selectedHcpMenu={selectedHcpMenu}\n              selectedAppointmentMenu={selectedAppointmentMenu}\n              waitingListMenu={waitingListMenu}\n              selectedScopedMenu={selectedScopedMenu}\n            />\n          )}\n\n          <ScrollToView>\n            {!isAuthenticated && (\n              <Route\n                path={['/', '/login']}\n                render={(props) => <Login {...props} />}\n              />\n            )}\n\n            <main\n              style={{\n                display: isAuthenticated\n                  ? 'flex'\n                  : chatMediaActive\n                  ? 'block'\n                  : 'none',\n              }}\n            >\n              {!chatMediaActive && (\n                <SideMenu\n                  selectedMenu={selectedMenu}\n                  setSelectedMenu={setSelectedMenu}\n                  setSelectedSubMenu={setSelectedSubMenu}\n                  setWaitingListMenu={setWaitingListMenu}\n                  setSelectedAppointmentMenu={setSelectedAppointmentMenu}\n                />\n              )}\n              <section\n                style={!chatMediaActive ? sectionStyles : { width: '100%' }}\n              >\n                <Routes\n                  setSelectedMenu={setSelectedMenu}\n                  selectedMenu={selectedMenu}\n                  selectedSubMenu={selectedSubMenu}\n                  setSelectedSubMenu={setSelectedSubMenu}\n                  selectedPatientMenu={selectedPatientMenu}\n                  setSelectedPatientMenu={setSelectedPatientMenu}\n                  selectedHcpMenu={selectedHcpMenu}\n                  setSelectedHcpMenu={setSelectedHcpMenu}\n                  selectedAppointmentMenu={selectedAppointmentMenu}\n                  setSelectedAppointmentMenu={setSelectedAppointmentMenu}\n                  waitingListMenu={waitingListMenu}\n                  setWaitingListMenu={setWaitingListMenu}\n                  chatMediaActive={chatMediaActive}\n                  setChatMediaActive={setChatMediaActive}\n                  selectedScopedMenu={selectedScopedMenu}\n                  setSelectedScopedMenu={setSelectedScopedMenu}\n                  setSelectedPendingMenu={setSelectedPendingMenu}\n                />\n              </section>\n            </main>\n          </ScrollToView>\n        </div>\n      </Router>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}