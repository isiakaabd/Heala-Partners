{"ast":null,"code":"var _jsxFileName = \"/home/codabae/Documents/Projects/DDProject/Dproject_Diagnostics/src/components/layouts/HeaderProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport Badge from '@mui/material/Badge';\nimport { makeStyles } from '@mui/styles'; // import { useTheme } from \"@mui/material/styles\";\n\nimport displayPhoto from 'assets/images/avatar.png';\nimport NotificationsActiveIcon from '@mui/icons-material/NotificationsActive';\nimport Notifications from 'components/layouts/Notifications';\nimport IconButton from '@mui/material/IconButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  role: {\n    fontSize: '1.5rem',\n    color: theme.palette.common.lightGrey\n  },\n  name: {\n    fontWeight: 'normal'\n  },\n  notification: {\n    fontSize: '2rem'\n  }\n}));\n\nconst HeaderProfile = () => {\n  _s();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const classes = useStyles();\n\n  function notificationsLabel(count) {\n    if (count === 0) {\n      return 'no notifications';\n    }\n\n    if (count > 99) {\n      return 'more than 99 notifications';\n    }\n\n    return `${count} notifications`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"Display avatar\",\n          src: displayPhoto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          marginRight: '3em',\n          marginLeft: '1em'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.name,\n              children: \"H-Medix\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              className: classes.role,\n              style: {\n                fontWeight: 300\n              },\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": notificationsLabel(1),\n          onClick: event => setAnchorEl(event.currentTarget),\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            badgeContent: 1,\n            color: \"error\",\n            children: /*#__PURE__*/_jsxDEV(NotificationsActiveIcon, {\n              color: \"primary\",\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Notifications, {\n          anchorEl: anchorEl,\n          setAnchorEl: setAnchorEl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeaderProfile, \"rR4YbuwDsNH7kIPxRuzEnRkbEdw=\", false, function () {\n  return [useStyles];\n});\n\n_c = HeaderProfile;\nexport default HeaderProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderProfile\");","map":{"version":3,"sources":["/home/codabae/Documents/Projects/DDProject/Dproject_Diagnostics/src/components/layouts/HeaderProfile.js"],"names":["React","useState","Grid","Avatar","Typography","Badge","makeStyles","displayPhoto","NotificationsActiveIcon","Notifications","IconButton","useStyles","theme","role","fontSize","color","palette","common","lightGrey","name","fontWeight","notification","HeaderProfile","anchorEl","setAnchorEl","classes","notificationsLabel","count","marginRight","marginLeft","event","currentTarget"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Grid from '@mui/material/Grid'\nimport Avatar from '@mui/material/Avatar'\nimport Typography from '@mui/material/Typography'\nimport Badge from '@mui/material/Badge'\nimport { makeStyles } from '@mui/styles'\n// import { useTheme } from \"@mui/material/styles\";\nimport displayPhoto from 'assets/images/avatar.png'\nimport NotificationsActiveIcon from '@mui/icons-material/NotificationsActive'\nimport Notifications from 'components/layouts/Notifications'\nimport IconButton from '@mui/material/IconButton'\n\nconst useStyles = makeStyles((theme) => ({\n  role: {\n    fontSize: '1.5rem',\n    color: theme.palette.common.lightGrey,\n  },\n\n  name: {\n    fontWeight: 'normal',\n  },\n  notification: {\n    fontSize: '2rem',\n  },\n}))\n\nconst HeaderProfile = () => {\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const classes = useStyles()\n\n  function notificationsLabel(count) {\n    if (count === 0) {\n      return 'no notifications'\n    }\n    if (count > 99) {\n      return 'more than 99 notifications'\n    }\n    return `${count} notifications`\n  }\n\n  return (\n    <header>\n      <Grid container alignItems=\"center\">\n        <Grid item>\n          <Avatar alt=\"Display avatar\" src={displayPhoto} />\n        </Grid>\n        <Grid item style={{ marginRight: '3em', marginLeft: '1em' }}>\n          <Grid container direction=\"column\" justifyContent=\"center\">\n            <Grid item>\n              <Typography variant=\"body1\" className={classes.name}>\n                H-Medix\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography\n                variant=\"body2\"\n                className={classes.role}\n                style={{ fontWeight: 300 }}\n              >\n                Admin\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <IconButton\n            aria-label={notificationsLabel(1)}\n            onClick={(event) => setAnchorEl(event.currentTarget)}\n          >\n            <Badge badgeContent={1} color=\"error\">\n              <NotificationsActiveIcon color=\"primary\" fontSize=\"large\" />\n            </Badge>\n          </IconButton>\n          <Notifications anchorEl={anchorEl} setAnchorEl={setAnchorEl} />\n        </Grid>\n      </Grid>\n    </header>\n  )\n}\n\nexport default HeaderProfile\n"]},"metadata":{},"sourceType":"module"}