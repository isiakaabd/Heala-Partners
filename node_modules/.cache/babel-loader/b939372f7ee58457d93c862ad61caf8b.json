{"ast":null,"code":"var _jsxFileName = \"/home/codabae/Documents/Projects/DPProject/Dproject_Pharmacy/src/components/layouts/EnhancedTable.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport EnhancedTableHeader from \"./EnhancedTableHeader\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useSelector } from \"react-redux\";\nimport { useActions } from \"components/hooks/useActions\";\nimport EnhancedTableToolbar from \"./EnhancedTableToolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pagination: {\n    \"& .MuiTablePagination-selectLabel\": {\n      fontSize: \"1.2rem\"\n    },\n    \"& .MuiTablePagination-select\": {\n      fontSize: \"1.2rem\"\n    },\n    \"& .MuiTablePagination-displayedRows\": {\n      fontSize: \"1.2rem\"\n    }\n  },\n  tableToolbar: {\n    \"&.MuiToolbar-root\": {\n      background: \"#eee\"\n    }\n  }\n}));\n\nconst EnhancedTable = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    setPage,\n    setRowsPerPage,\n    setSelectedRows\n  } = useActions();\n  const {\n    page,\n    rowsPerPage,\n    selectedRows\n  } = useSelector(state => state.tables);\n  const {\n    rows,\n    children,\n    headCells,\n    paginationLabel,\n    title,\n    hasCheckbox\n  } = props;\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(selected => selected.id);\n      setSelectedRows(newSelecteds);\n      return;\n    }\n\n    setSelectedRows([]);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }; // Avoid a layout jump when reaching the last page with empty rows.\n\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: \"100%\",\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n        numSelected: selectedRows.length,\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 750\n          },\n          \"aria-labelledby\": \"tableTitle\",\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHeader, {\n            numSelected: selectedRows.length,\n            onSelectAllClick: handleSelectAllClick,\n            rowCount: rows.length,\n            headCells: headCells,\n            hasCheckbox: hasCheckbox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [children, emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: 53 * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        labelRowsPerPage: paginationLabel,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage,\n        className: classes.pagination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EnhancedTable, \"E8E8qkNIQFuBXkIm0SMQXmf2a9M=\", false, function () {\n  return [useStyles, useActions, useSelector];\n});\n\n_c = EnhancedTable;\nEnhancedTable.propTypes = {\n  children: PropTypes.node,\n  rows: PropTypes.array.isRequired,\n  headCells: PropTypes.array.isRequired,\n  paginationLabel: PropTypes.string,\n  title: PropTypes.string,\n  hasCheckbox: PropTypes.bool.isRequired\n};\nexport default EnhancedTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnhancedTable\");","map":{"version":3,"sources":["/home/codabae/Documents/Projects/DPProject/Dproject_Pharmacy/src/components/layouts/EnhancedTable.js"],"names":["React","PropTypes","Box","Table","TableBody","TableCell","TableContainer","EnhancedTableHeader","TablePagination","TableRow","Paper","makeStyles","useSelector","useActions","EnhancedTableToolbar","useStyles","theme","pagination","fontSize","tableToolbar","background","EnhancedTable","props","classes","setPage","setRowsPerPage","setSelectedRows","page","rowsPerPage","selectedRows","state","tables","rows","children","headCells","paginationLabel","title","hasCheckbox","handleSelectAllClick","event","target","checked","newSelecteds","map","selected","id","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","emptyRows","Math","max","length","width","mb","minWidth","height","propTypes","node","array","isRequired","string","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport EnhancedTableHeader from \"./EnhancedTableHeader\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useSelector } from \"react-redux\";\nimport { useActions } from \"components/hooks/useActions\";\nimport EnhancedTableToolbar from \"./EnhancedTableToolbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  pagination: {\n    \"& .MuiTablePagination-selectLabel\": {\n      fontSize: \"1.2rem\",\n    },\n\n    \"& .MuiTablePagination-select\": {\n      fontSize: \"1.2rem\",\n    },\n\n    \"& .MuiTablePagination-displayedRows\": {\n      fontSize: \"1.2rem\",\n    },\n  },\n\n  tableToolbar: {\n    \"&.MuiToolbar-root\": {\n      background: \"#eee\",\n    },\n  },\n}));\n\nconst EnhancedTable = (props) => {\n  const classes = useStyles();\n  const { setPage, setRowsPerPage, setSelectedRows } = useActions();\n  const { page, rowsPerPage, selectedRows } = useSelector((state) => state.tables);\n  const { rows, children, headCells, paginationLabel, title, hasCheckbox } = props;\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((selected) => selected.id);\n      setSelectedRows(newSelecteds);\n      return;\n    }\n    setSelectedRows([]);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selectedRows.length} title={title} />\n\n        <TableContainer>\n          <Table sx={{ minWidth: 750 }} aria-labelledby=\"tableTitle\">\n            <EnhancedTableHeader\n              numSelected={selectedRows.length}\n              onSelectAllClick={handleSelectAllClick}\n              rowCount={rows.length}\n              headCells={headCells}\n              hasCheckbox={hasCheckbox}\n            />\n            <TableBody>\n              {children}\n\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: 53 * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          labelRowsPerPage={paginationLabel}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          className={classes.pagination}\n        />\n      </Paper>\n    </Box>\n  );\n};\n\nEnhancedTable.propTypes = {\n  children: PropTypes.node,\n  rows: PropTypes.array.isRequired,\n  headCells: PropTypes.array.isRequired,\n  paginationLabel: PropTypes.string,\n  title: PropTypes.string,\n  hasCheckbox: PropTypes.bool.isRequired,\n};\n\nexport default EnhancedTable;\n"]},"metadata":{},"sourceType":"module"}