{"ast":null,"code":"var _jsxFileName = \"/home/codabae/Documents/Projects/DDProject/Dproject_Diagnostics/src/components/Utilities/CircularProgress.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport { ReactComponent as Circular } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/circular.svg\";\nimport { CircularProgressbarWithChildren, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CircularProgressBar = ({\n  value,\n  color,\n  height,\n  trailColor,\n  width,\n  strokeLinecap,\n  strokeWidth\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: \"relative\",\n      display: \"inline-flex\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      sx: {\n        height,\n        width\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgressbarWithChildren, {\n        value: value,\n        strokeWidth: strokeWidth ? strokeWidth : 4,\n        styles: buildStyles({\n          pathColor: color,\n          trailColor: trailColor,\n          strokeLinecap: strokeLinecap ? strokeLinecap : \"butt\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        position: \"absolute\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Circular, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = CircularProgressBar;\nCircularProgressBar.propTypes = {\n  value: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  trailColor: PropTypes.string.isRequired,\n  strokeLinecap: PropTypes.string,\n  strokeWidth: PropTypes.number\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CircularProgressBar\");","map":{"version":3,"sources":["/home/codabae/Documents/Projects/DDProject/Dproject_Diagnostics/src/components/Utilities/CircularProgress.js"],"names":["React","PropTypes","Grid","Box","CircularProgressbarWithChildren","buildStyles","CircularProgressBar","value","color","height","trailColor","width","strokeLinecap","strokeWidth","position","display","alignItems","pathColor","top","left","bottom","right","justifyContent","propTypes","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,SAASC,+BAAT,EAA0CC,WAA1C,QAA6D,4BAA7D;AACA,OAAO,4CAAP;;AAEA,OAAO,MAAMC,mBAAmB,GAAG,CAAC;AAClCC,EAAAA,KADkC;AAElCC,EAAAA,KAFkC;AAGlCC,EAAAA,MAHkC;AAIlCC,EAAAA,UAJkC;AAKlCC,EAAAA,KALkC;AAMlCC,EAAAA,aANkC;AAOlCC,EAAAA;AAPkC,CAAD,KAQ7B;AACJ,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,OAAO,EAAE,aAAjC;AAAgDC,MAAAA,UAAU,EAAE;AAA5D,KAAT;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEP,QAAAA,MAAF;AAAUE,QAAAA;AAAV,OAAV;AAAA,6BACE,QAAC,+BAAD;AACE,QAAA,KAAK,EAAEJ,KADT;AAEE,QAAA,WAAW,EAAEM,WAAW,GAAGA,WAAH,GAAiB,CAF3C;AAGE,QAAA,MAAM,EAAER,WAAW,CAAC;AAClBY,UAAAA,SAAS,EAAET,KADO;AAElBE,UAAAA,UAAU,EAAEA,UAFM;AAGlBE,UAAAA,aAAa,EAAEA,aAAa,GAAGA,aAAH,GAAmB;AAH7B,SAAD;AAHrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFM,QAAAA,GAAG,EAAE,CADH;AAEFC,QAAAA,IAAI,EAAE,CAFJ;AAGFC,QAAAA,MAAM,EAAE,CAHN;AAIFC,QAAAA,KAAK,EAAE,CAJL;AAKFP,QAAAA,QAAQ,EAAE,UALR;AAMFC,QAAAA,OAAO,EAAE,MANP;AAOFC,QAAAA,UAAU,EAAE,QAPV;AAQFM,QAAAA,cAAc,EAAE;AARd,OADN;AAAA,6BAYE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAtCM;KAAMhB,mB;AAwCbA,mBAAmB,CAACiB,SAApB,GAAgC;AAC9BhB,EAAAA,KAAK,EAAEN,SAAS,CAACuB,MAAV,CAAiBC,UADM;AAE9BjB,EAAAA,KAAK,EAAEP,SAAS,CAACyB,MAAV,CAAiBD,UAFM;AAG9BhB,EAAAA,MAAM,EAAER,SAAS,CAACyB,MAAV,CAAiBD,UAHK;AAI9Bd,EAAAA,KAAK,EAAEV,SAAS,CAACyB,MAAV,CAAiBD,UAJM;AAK9Bf,EAAAA,UAAU,EAAET,SAAS,CAACyB,MAAV,CAAiBD,UALC;AAM9Bb,EAAAA,aAAa,EAAEX,SAAS,CAACyB,MANK;AAO9Bb,EAAAA,WAAW,EAAEZ,SAAS,CAACuB;AAPO,CAAhC","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport { ReactComponent as Circular } from \"assets/images/circular.svg\";\nimport { CircularProgressbarWithChildren, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nexport const CircularProgressBar = ({\n  value,\n  color,\n  height,\n  trailColor,\n  width,\n  strokeLinecap,\n  strokeWidth,\n}) => {\n  return (\n    <Box sx={{ position: \"relative\", display: \"inline-flex\", alignItems: \"center\" }}>\n      <Grid sx={{ height, width }}>\n        <CircularProgressbarWithChildren\n          value={value}\n          strokeWidth={strokeWidth ? strokeWidth : 4}\n          styles={buildStyles({\n            pathColor: color,\n            trailColor: trailColor,\n            strokeLinecap: strokeLinecap ? strokeLinecap : \"butt\",\n          })}\n        />\n      </Grid>\n      <Box\n        sx={{\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          position: \"absolute\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Circular />\n      </Box>\n    </Box>\n  );\n};\n\nCircularProgressBar.propTypes = {\n  value: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  trailColor: PropTypes.string.isRequired,\n  strokeLinecap: PropTypes.string,\n  strokeWidth: PropTypes.number,\n};\n"]},"metadata":{},"sourceType":"module"}