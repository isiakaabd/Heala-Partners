{"ast":null,"code":"var _jsxFileName = \"/home/codabae/Documents/Projects/DDProject/Dproject_Diagnostics/src/components/pages/ProcessingOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Success from 'components/modals/Success';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Checkbox from '@mui/material/Checkbox';\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@mui/styles';\nimport Modals from 'components/Utilities/Modal';\nimport FormSelect from 'components/Utilities/FormSelect';\nimport Search from 'components/Utilities/Search';\nimport FilterList from 'components/Utilities/FilterList';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport EnhancedTable from 'components/layouts/EnhancedTable';\nimport { hcpsHeadCells } from 'components/Utilities/tableHeaders';\nimport { rows } from 'components/Utilities/DataHeader';\nimport Chip from '@mui/material/Chip';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport Avatar from '@mui/material/Avatar';\nimport displayPhoto from 'assets/images/avatar.png';\nimport { useSelector } from 'react-redux';\nimport { useActions } from 'components/hooks/useActions';\nimport { handleSelectedRows } from 'helpers/selectedRows';\nimport { isSelected } from 'helpers/isSelected';\nimport useFormInput from 'components/hooks/useFormInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dates = ['Hello', 'World', 'Goodbye', 'World'];\nconst specializations = ['Dentistry', 'Pediatry', 'Optometry', 'Pathology'];\nconst hospitals = ['General Hospital, Lekki', 'H-Medix', 'X Lab'];\nconst useStyles = makeStyles(theme => ({\n  searchGrid: {\n    '&.MuiGrid-root': {\n      flex: 1,\n      marginRight: '5rem'\n    }\n  },\n  button: {\n    '&.MuiButton-root': {\n      background: '#fff',\n      color: theme.palette.common.grey,\n      textTransform: 'none',\n      borderRadius: '2rem',\n      display: 'flex',\n      alignItems: 'center',\n      padding: '0.5rem',\n      maxWidth: '12rem',\n      fontSize: '1rem',\n      '&:hover': {\n        background: '#fcfcfc'\n      },\n      '&:active': {\n        background: '#fafafa'\n      },\n      '& .MuiButton-endIcon>*:nth-of-type(1)': {\n        fontSize: '.85rem'\n      },\n      '& .MuiButton-endIcon': {\n        marginLeft: '.2rem',\n        marginTop: '-.2rem'\n      }\n    }\n  },\n  badge: {\n    '&.MuiChip-root': {\n      fontSize: '1.25rem !important',\n      height: '2.7rem',\n      borderRadius: '1.3rem'\n    }\n  },\n  searchFilterBtn: {\n    '&.MuiButton-root': { ...theme.typography.btn,\n      background: theme.palette.common.black,\n      width: '100%'\n    }\n  },\n  chip: {\n    '&.MuiChip-root': {\n      fontSize: '1.25rem',\n      height: '3rem',\n      borderRadius: '1.3rem',\n      background: theme.palette.common.white,\n      color: theme.palette.common.grey,\n      '& .MuiChip-deleteIcon': {\n        color: 'inherit',\n        fontSize: 'inherit'\n      }\n    }\n  },\n  uploadBtn: {\n    '&.MuiButton-root': { ...theme.typography.btn,\n      background: '#f2f2f2',\n      boxShadow: 'none',\n      color: theme.palette.common.black,\n      '&:hover': {\n        background: '#f2f3f3',\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      }\n    }\n  }\n}));\n\nconst ProcessingOrders = ({\n  setSelectedSubMenu,\n  setSelectedHcpMenu\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [searchHcp, setSearchHcp] = useState('');\n  const [openHcpFilter, setOpenHcpFilter] = useState(false);\n  const [modal, setModal] = useState(false);\n\n  const handleDialogClose = () => setModal(false);\n\n  const handleDialogOpen = () => setModal(true);\n\n  const [selectedInput, handleSelectedInput] = useFormInput({\n    date: '',\n    specialization: '',\n    hospital: '',\n    status: ''\n  }); // Add new HCP modals input state\n\n  const {\n    date,\n    specialization,\n    hospital\n  } = selectedInput;\n  const {\n    rowsPerPage,\n    selectedRows,\n    page\n  } = useSelector(state => state.tables);\n  const {\n    setSelectedRows\n  } = useActions();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: classes.searchGrid,\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          value: searchHcp,\n          onChange: e => setSearchHcp(e.target.value),\n          placeholder: \"Type to search referrals...\",\n          height: \"5rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FilterList, {\n          onClick: () => setOpenHcpFilter(true),\n          title: \"Filter referrals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      style: {\n        marginTop: '5rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(EnhancedTable, {\n        headCells: hcpsHeadCells,\n        rows: rows,\n        page: page,\n        paginationLabel: \"Patients per page\",\n        hasCheckbox: true,\n        children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n          const isItemSelected = isSelected(row.id, selectedRows);\n          const labelId = `enhanced-table-checkbox-${index}`;\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            role: \"checkbox\",\n            \"aria-checked\": isItemSelected,\n            tabIndex: -1,\n            selected: isItemSelected,\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              padding: \"checkbox\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                onClick: () => handleSelectedRows(row.id, selectedRows, setSelectedRows),\n                color: \"primary\",\n                checked: isItemSelected,\n                inputProps: {\n                  'aria-labelledby': labelId\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              id: labelId,\n              scope: \"row\",\n              align: \"center\",\n              className: classes.tableCell,\n              children: row.entryDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              className: classes.tableCell,\n              children: row.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              className: classes.tableCell,\n              children: row.medical\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              className: classes.tableCell,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '100%',\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginRight: '1rem'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: `Display Photo of ${row.firstName}`,\n                    src: displayPhoto,\n                    sx: {\n                      width: 24,\n                      height: 24\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: '1.25rem'\n                  },\n                  children: [row.firstName, row.lastName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                label: \"complete order\",\n                variant: \"outlined\",\n                onClick: handleDialogOpen,\n                className: classes.chip,\n                deleteIcon: /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 35\n                }, this),\n                onDelete: () => console.log(' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Success, {\n      open: modal,\n      handleDialogClose: handleDialogClose,\n      title: \"SUCCESSFUL\",\n      btnValue: \"Done\",\n      confirmationMsg: \"Your order has been successful\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modals, {\n      isOpen: openHcpFilter,\n      title: \"Filter\",\n      rowSpacing: 5,\n      handleClose: () => setOpenHcpFilter(false),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    className: classes.FormLabel,\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: /*#__PURE__*/_jsxDEV(FormSelect, {\n                      name: \"date\",\n                      options: dates,\n                      value: date,\n                      onChange: handleSelectedInput,\n                      placeholderText: \"Choose Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    className: classes.FormLabel,\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: /*#__PURE__*/_jsxDEV(FormSelect, {\n                      name: \"Time\",\n                      options: specializations,\n                      value: specialization,\n                      onChange: handleSelectedInput,\n                      placeholderText: \"Select Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            marginBottom: '18rem',\n            marginTop: '3rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    className: classes.FormLabel,\n                    children: \"Order Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    style: {\n                      height: '3rem'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(FormSelect, {\n                      name: \"Order Number\",\n                      options: hospitals,\n                      value: hospital,\n                      onChange: handleSelectedInput,\n                      placeholderText: \"Enter order number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => setOpenHcpFilter(false),\n            type: \"submit\",\n            className: classes.searchFilterBtn,\n            children: \"Apply Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProcessingOrders, \"MZkul+21FPjp5xyrLsdcJtPibUc=\", false, function () {\n  return [useStyles, useFormInput, useSelector, useActions];\n});\n\n_c = ProcessingOrders;\nProcessingOrders.propTypes = {\n  setSelectedSubMenu: PropTypes.func.isRequired,\n  setSelectedHcpMenu: PropTypes.func.isRequired\n};\nexport default ProcessingOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProcessingOrders\");","map":{"version":3,"sources":["/home/codabae/Documents/Projects/DDProject/Dproject_Diagnostics/src/components/pages/ProcessingOrders.js"],"names":["React","useState","Success","PropTypes","Grid","TableRow","TableCell","Checkbox","Button","makeStyles","Modals","FormSelect","Search","FilterList","FormControl","FormLabel","EnhancedTable","hcpsHeadCells","rows","Chip","ArrowForwardIosIcon","Avatar","displayPhoto","useSelector","useActions","handleSelectedRows","isSelected","useFormInput","dates","specializations","hospitals","useStyles","theme","searchGrid","flex","marginRight","button","background","color","palette","common","grey","textTransform","borderRadius","display","alignItems","padding","maxWidth","fontSize","marginLeft","marginTop","badge","height","searchFilterBtn","typography","btn","black","width","chip","white","uploadBtn","boxShadow","ProcessingOrders","setSelectedSubMenu","setSelectedHcpMenu","classes","searchHcp","setSearchHcp","openHcpFilter","setOpenHcpFilter","modal","setModal","handleDialogClose","handleDialogOpen","selectedInput","handleSelectedInput","date","specialization","hospital","status","rowsPerPage","selectedRows","page","state","tables","setSelectedRows","e","target","value","slice","map","row","index","isItemSelected","id","labelId","tableCell","entryDate","time","medical","firstName","lastName","console","log","marginBottom","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Success from 'components/modals/Success'\nimport PropTypes from 'prop-types'\nimport Grid from '@mui/material/Grid'\nimport TableRow from '@mui/material/TableRow'\nimport TableCell from '@mui/material/TableCell'\nimport Checkbox from '@mui/material/Checkbox'\nimport Button from '@mui/material/Button'\nimport { makeStyles } from '@mui/styles'\nimport Modals from 'components/Utilities/Modal'\nimport FormSelect from 'components/Utilities/FormSelect'\nimport Search from 'components/Utilities/Search'\nimport FilterList from 'components/Utilities/FilterList'\nimport FormControl from '@mui/material/FormControl'\nimport FormLabel from '@mui/material/FormLabel'\nimport EnhancedTable from 'components/layouts/EnhancedTable'\nimport { hcpsHeadCells } from 'components/Utilities/tableHeaders'\nimport { rows } from 'components/Utilities/DataHeader'\nimport Chip from '@mui/material/Chip'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos'\nimport Avatar from '@mui/material/Avatar'\nimport displayPhoto from 'assets/images/avatar.png'\nimport { useSelector } from 'react-redux'\nimport { useActions } from 'components/hooks/useActions'\nimport { handleSelectedRows } from 'helpers/selectedRows'\nimport { isSelected } from 'helpers/isSelected'\nimport useFormInput from 'components/hooks/useFormInput'\n\nconst dates = ['Hello', 'World', 'Goodbye', 'World']\nconst specializations = ['Dentistry', 'Pediatry', 'Optometry', 'Pathology']\nconst hospitals = ['General Hospital, Lekki', 'H-Medix', 'X Lab']\n\nconst useStyles = makeStyles((theme) => ({\n  searchGrid: {\n    '&.MuiGrid-root': {\n      flex: 1,\n      marginRight: '5rem',\n    },\n  },\n\n  button: {\n    '&.MuiButton-root': {\n      background: '#fff',\n      color: theme.palette.common.grey,\n      textTransform: 'none',\n      borderRadius: '2rem',\n      display: 'flex',\n      alignItems: 'center',\n      padding: '0.5rem',\n      maxWidth: '12rem',\n      fontSize: '1rem',\n\n      '&:hover': {\n        background: '#fcfcfc',\n      },\n\n      '&:active': {\n        background: '#fafafa',\n      },\n\n      '& .MuiButton-endIcon>*:nth-of-type(1)': {\n        fontSize: '.85rem',\n      },\n\n      '& .MuiButton-endIcon': {\n        marginLeft: '.2rem',\n        marginTop: '-.2rem',\n      },\n    },\n  },\n  badge: {\n    '&.MuiChip-root': {\n      fontSize: '1.25rem !important',\n      height: '2.7rem',\n      borderRadius: '1.3rem',\n    },\n  },\n\n  searchFilterBtn: {\n    '&.MuiButton-root': {\n      ...theme.typography.btn,\n      background: theme.palette.common.black,\n      width: '100%',\n    },\n  },\n  chip: {\n    '&.MuiChip-root': {\n      fontSize: '1.25rem',\n      height: '3rem',\n      borderRadius: '1.3rem',\n      background: theme.palette.common.white,\n      color: theme.palette.common.grey,\n      '& .MuiChip-deleteIcon': {\n        color: 'inherit',\n        fontSize: 'inherit',\n      },\n    },\n  },\n  uploadBtn: {\n    '&.MuiButton-root': {\n      ...theme.typography.btn,\n      background: '#f2f2f2',\n      boxShadow: 'none',\n      color: theme.palette.common.black,\n\n      '&:hover': {\n        background: '#f2f3f3',\n        boxShadow: 'none',\n      },\n\n      '&:active': {\n        boxShadow: 'none',\n      },\n    },\n  },\n}))\n\nconst ProcessingOrders = ({ setSelectedSubMenu, setSelectedHcpMenu }) => {\n  const classes = useStyles()\n\n  const [searchHcp, setSearchHcp] = useState('')\n  const [openHcpFilter, setOpenHcpFilter] = useState(false)\n  const [modal, setModal] = useState(false)\n  const handleDialogClose = () => setModal(false)\n  const handleDialogOpen = () => setModal(true)\n\n  const [selectedInput, handleSelectedInput] = useFormInput({\n    date: '',\n    specialization: '',\n    hospital: '',\n    status: '',\n  })\n\n  // Add new HCP modals input state\n\n  const { date, specialization, hospital } = selectedInput\n\n  const { rowsPerPage, selectedRows, page } = useSelector(\n    (state) => state.tables,\n  )\n  const { setSelectedRows } = useActions()\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item container>\n        <Grid item className={classes.searchGrid}>\n          <Search\n            value={searchHcp}\n            onChange={(e) => setSearchHcp(e.target.value)}\n            placeholder=\"Type to search referrals...\"\n            height=\"5rem\"\n          />\n        </Grid>\n        <Grid item>\n          <FilterList\n            onClick={() => setOpenHcpFilter(true)}\n            title=\"Filter referrals\"\n          />\n        </Grid>\n      </Grid>\n      <Grid item container style={{ marginTop: '5rem' }}>\n        <EnhancedTable\n          headCells={hcpsHeadCells}\n          rows={rows}\n          page={page}\n          paginationLabel=\"Patients per page\"\n          hasCheckbox={true}\n        >\n          {rows\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((row, index) => {\n              const isItemSelected = isSelected(row.id, selectedRows)\n\n              const labelId = `enhanced-table-checkbox-${index}`\n\n              return (\n                <TableRow\n                  hover\n                  role=\"checkbox\"\n                  aria-checked={isItemSelected}\n                  tabIndex={-1}\n                  key={row.id}\n                  selected={isItemSelected}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      onClick={() =>\n                        handleSelectedRows(\n                          row.id,\n                          selectedRows,\n                          setSelectedRows,\n                        )\n                      }\n                      color=\"primary\"\n                      checked={isItemSelected}\n                      inputProps={{\n                        'aria-labelledby': labelId,\n                      }}\n                    />\n                  </TableCell>\n                  <TableCell\n                    id={labelId}\n                    scope=\"row\"\n                    align=\"center\"\n                    className={classes.tableCell}\n                  >\n                    {row.entryDate}\n                  </TableCell>\n                  <TableCell align=\"center\" className={classes.tableCell}>\n                    {row.time}\n                  </TableCell>\n                  <TableCell align=\"center\" className={classes.tableCell}>\n                    {row.medical}\n                  </TableCell>\n                  <TableCell align=\"center\" className={classes.tableCell}>\n                    <div\n                      style={{\n                        height: '100%',\n                        display: 'flex',\n                        alignItems: 'center',\n                      }}\n                    >\n                      <span style={{ marginRight: '1rem' }}>\n                        <Avatar\n                          alt={`Display Photo of ${row.firstName}`}\n                          src={displayPhoto}\n                          sx={{ width: 24, height: 24 }}\n                        />\n                      </span>\n                      <span style={{ fontSize: '1.25rem' }}>\n                        {row.firstName}\n                        {row.lastName}\n                      </span>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      label=\"complete order\"\n                      variant=\"outlined\"\n                      onClick={handleDialogOpen}\n                      className={classes.chip}\n                      deleteIcon={<ArrowForwardIosIcon />}\n                      onDelete={() => console.log(' ')}\n                    />\n                  </TableCell>\n                </TableRow>\n              )\n            })}\n        </EnhancedTable>\n      </Grid>\n      {/* Filter Modal */}\n      <Success\n        open={modal}\n        handleDialogClose={handleDialogClose}\n        title=\"SUCCESSFUL\"\n        btnValue=\"Done\"\n        confirmationMsg=\"Your order has been successful\"\n      />\n      <Modals\n        isOpen={openHcpFilter}\n        title=\"Filter\"\n        rowSpacing={5}\n        handleClose={() => setOpenHcpFilter(false)}\n      >\n        <Grid item container direction=\"column\">\n          <Grid item>\n            <Grid container spacing={2}>\n              <Grid item md>\n                <Grid container direction=\"column\">\n                  <Grid item>\n                    <FormLabel component=\"legend\" className={classes.FormLabel}>\n                      Date\n                    </FormLabel>\n                  </Grid>\n                  <Grid item>\n                    <FormControl fullWidth>\n                      <FormSelect\n                        name=\"date\"\n                        options={dates}\n                        value={date}\n                        onChange={handleSelectedInput}\n                        placeholderText=\"Choose Date\"\n                      />\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item md>\n                <Grid container direction=\"column\">\n                  <Grid item>\n                    <FormLabel component=\"legend\" className={classes.FormLabel}>\n                      Time\n                    </FormLabel>\n                  </Grid>\n                  <Grid item>\n                    <FormControl fullWidth>\n                      <FormSelect\n                        name=\"Time\"\n                        options={specializations}\n                        value={specialization}\n                        onChange={handleSelectedInput}\n                        placeholderText=\"Select Time\"\n                      />\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item style={{ marginBottom: '18rem', marginTop: '3rem' }}>\n            <Grid container spacing={2}>\n              <Grid item md>\n                <Grid container direction=\"column\">\n                  <Grid item>\n                    <FormLabel component=\"legend\" className={classes.FormLabel}>\n                      Order Number\n                    </FormLabel>\n                  </Grid>\n                  <Grid item>\n                    <FormControl fullWidth style={{ height: '3rem' }}>\n                      <FormSelect\n                        name=\"Order Number\"\n                        options={hospitals}\n                        value={hospital}\n                        onChange={handleSelectedInput}\n                        placeholderText=\"Enter order number\"\n                      />\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item md></Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              onClick={() => setOpenHcpFilter(false)}\n              type=\"submit\"\n              className={classes.searchFilterBtn}\n            >\n              Apply Filter\n            </Button>\n          </Grid>\n        </Grid>\n      </Modals>\n    </Grid>\n  )\n}\n\nProcessingOrders.propTypes = {\n  setSelectedSubMenu: PropTypes.func.isRequired,\n  setSelectedHcpMenu: PropTypes.func.isRequired,\n}\n\nexport default ProcessingOrders\n"]},"metadata":{},"sourceType":"module"}