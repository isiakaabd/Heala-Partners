{"ast":null,"code":"var _jsxFileName = \"/home/codabae/Documents/Projects/DPProject/Dproject_Pharmacy/src/components/pages/CancelledOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Chip from '@mui/material/Chip';\nimport Grid from '@mui/material/Grid';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Checkbox from '@mui/material/Checkbox';\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@mui/styles';\nimport Search from 'components/Utilities/Search';\nimport FilterList from 'components/Utilities/FilterList';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormSelect from 'components/Utilities/FormSelect';\nimport useFormInput from 'components/hooks/useFormInput';\nimport { useTheme } from '@mui/material/styles';\nimport EnhancedTable from 'components/layouts/EnhancedTable';\nimport { messagesHeadCells } from 'components/Utilities/tableHeaders';\nimport Avatar from '@mui/material/Avatar';\nimport displayPhoto from 'assets/images/avatar.png';\nimport { useSelector } from 'react-redux';\nimport { useActions } from 'components/hooks/useActions';\nimport { handleSelectedRows } from 'helpers/selectedRows';\nimport { isSelected } from 'helpers/isSelected';\nimport { rows } from 'components/Utilities/DataHeader';\nimport Modals from 'components/Utilities/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  searchGrid: {\n    '&.MuiGrid-root': {\n      flex: 1,\n      marginRight: '5rem'\n    }\n  },\n  actionBtnGrid: {\n    '&.MuiGrid-root': {\n      marginRight: '1.5rem'\n    }\n  },\n  button: {\n    '&.MuiButton-root': {\n      background: '#fff',\n      color: theme.palette.common.grey,\n      textTransform: 'none',\n      borderRadius: '2rem',\n      display: 'flex',\n      alignItems: 'center',\n      padding: '0.5rem',\n      maxWidth: '10rem',\n      fontSize: '.85rem',\n      '&:hover': {\n        background: '#fcfcfc'\n      },\n      '&:active': {\n        background: '#fafafa'\n      },\n      '& .MuiButton-endIcon>*:nth-of-type(1)': {\n        fontSize: '0.85rem'\n      },\n      '& .MuiButton-endIcon': {\n        marginLeft: '.2rem'\n      }\n    }\n  },\n  searchFilterBtn: {\n    '&.MuiButton-root': { ...theme.typography.btn,\n      background: theme.palette.common.black,\n      width: '100%'\n    }\n  },\n  badge: {\n    '&.MuiChip-root': {\n      fontSize: '1.25rem !important',\n      height: '2.7rem',\n      textAlign: 'left',\n      borderRadius: '1.3rem'\n    }\n  },\n  tableBtn: {\n    '&.MuiButton-root': { ...theme.typography.btn,\n      height: '3rem',\n      fontSize: '1.25rem',\n      borderRadius: '2rem',\n      boxShadow: 'none',\n      '&:hover': {\n        '& .MuiButton-endIcon>*:nth-of-type(1)': {\n          color: '#fff'\n        }\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '& .MuiButton-endIcon>*:nth-of-type(1)': {\n        fontSize: '1.5rem'\n      }\n    }\n  },\n  redBtn: {\n    '&.MuiButton-root': {\n      background: theme.palette.common.lightRed,\n      color: theme.palette.common.red,\n      '&:hover': {\n        background: theme.palette.error.light,\n        color: '#fff'\n      }\n    }\n  }\n}));\n\nconst CancelledOrders = ({\n  selectedMenu,\n  selectedSubMenu,\n  setSelectedMenu,\n  setSelectedSubMenu\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const specializations = ['Dentistry', 'Pediatry', 'Optometry', 'Pathology'];\n  const hospitals = ['General Hospital, Lekki', 'H-Medix', 'X Lab'];\n  const dates = ['Hello', 'World', 'Goodbye', 'World'];\n  const [openFilterPartner, setOpenFilterPartner] = useState(false);\n  const [filterSelectInput, handleSelectedInput] = useFormInput({\n    hospitalName: '',\n    date: '',\n    categoryName: ''\n  });\n  const {\n    hospitalName,\n    date,\n    categoryName\n  } = filterSelectInput;\n  const [searchMessage, setSearchMessage] = useState('');\n  const {\n    rowsPerPage,\n    selectedRows,\n    page\n  } = useSelector(state => state.tables);\n  const {\n    setSelectedRows\n  } = useActions();\n  useEffect(() => {\n    setSelectedMenu(5);\n    setSelectedSubMenu(0); //   eslint-disable-next-line\n  }, [selectedMenu, selectedSubMenu]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.searchGrid,\n          children: /*#__PURE__*/_jsxDEV(Search, {\n            value: searchMessage,\n            onChange: e => setSearchMessage(e.target.value),\n            placeholder: \"Type to search Referrals...\",\n            height: \"5rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(FilterList, {\n            onClick: () => setOpenFilterPartner(true),\n            title: \"Filter referrals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        style: {\n          marginTop: '5rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(EnhancedTable, {\n          headCells: messagesHeadCells,\n          rows: rows,\n          page: page,\n          paginationLabel: \"Patients per page\",\n          hasCheckbox: true,\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n            const isItemSelected = isSelected(row.id, selectedRows);\n            const labelId = `enhanced-table-checkbox-${index}`;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              \"aria-checked\": isItemSelected,\n              tabIndex: -1,\n              selected: isItemSelected,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  onClick: () => handleSelectedRows(row.id, selectedRows, setSelectedRows),\n                  color: \"primary\",\n                  checked: isItemSelected,\n                  inputProps: {\n                    'aria-labelledby': labelId\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                id: labelId,\n                scope: \"row\",\n                align: \"center\",\n                className: classes.tableCell,\n                children: row.entryDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                className: classes.tableCell,\n                children: row.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                className: classes.tableCell,\n                children: row.medical\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                className: classes.tableCell,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    height: '100%',\n                    display: 'flex',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginRight: '1rem'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      alt: `Display Photo of ${row.firstName}`,\n                      src: displayPhoto,\n                      sx: {\n                        width: 24,\n                        height: 24\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: '1.25rem'\n                    },\n                    children: [row.firstName, row.lastName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                className: classes.tableCell,\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"completed\",\n                  className: classes.badge,\n                  style: {\n                    background: row.status === 'active' ? theme.palette.common.lightGreen : theme.palette.common.lightRed,\n                    color: row.status === 'active' ? theme.palette.common.green : theme.palette.common.red\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this)]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modals, {\n      isOpen: openFilterPartner,\n      title: \"Filter\",\n      rowSpacing: 5,\n      handleClose: () => setOpenFilterPartner(false),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    className: classes.FormLabel,\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: /*#__PURE__*/_jsxDEV(FormSelect, {\n                      name: \"date\",\n                      options: dates,\n                      value: date,\n                      onChange: handleSelectedInput,\n                      placeholderText: \"Choose Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    className: classes.FormLabel,\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: /*#__PURE__*/_jsxDEV(FormSelect, {\n                      name: \"Time\",\n                      options: specializations,\n                      value: hospitalName,\n                      onChange: handleSelectedInput,\n                      placeholderText: \"Select Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            marginBottom: '18rem',\n            marginTop: '3rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    className: classes.FormLabel,\n                    children: \"Order Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    style: {\n                      height: '3rem'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(FormSelect, {\n                      name: \"Order Number\",\n                      options: hospitals,\n                      value: categoryName,\n                      onChange: handleSelectedInput,\n                      placeholderText: \"Enter order number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => setOpenFilterPartner(false),\n            type: \"submit\",\n            className: classes.searchFilterBtn,\n            children: \"Apply Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CancelledOrders, \"PPFU6viIQaj3AH58XqITi0wfyJY=\", false, function () {\n  return [useStyles, useTheme, useFormInput, useSelector, useActions];\n});\n\n_c = CancelledOrders;\nCancelledOrders.propTypes = {\n  selectedMenu: PropTypes.number.isRequired,\n  selectedSubMenu: PropTypes.number.isRequired,\n  setSelectedMenu: PropTypes.func.isRequired,\n  setSelectedSubMenu: PropTypes.func.isRequired\n};\nexport default CancelledOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"CancelledOrders\");","map":{"version":3,"sources":["/home/codabae/Documents/Projects/DPProject/Dproject_Pharmacy/src/components/pages/CancelledOrders.js"],"names":["React","useState","useEffect","PropTypes","Chip","Grid","TableRow","TableCell","Checkbox","Button","makeStyles","Search","FilterList","FormLabel","FormControl","FormSelect","useFormInput","useTheme","EnhancedTable","messagesHeadCells","Avatar","displayPhoto","useSelector","useActions","handleSelectedRows","isSelected","rows","Modals","useStyles","theme","searchGrid","flex","marginRight","actionBtnGrid","button","background","color","palette","common","grey","textTransform","borderRadius","display","alignItems","padding","maxWidth","fontSize","marginLeft","searchFilterBtn","typography","btn","black","width","badge","height","textAlign","tableBtn","boxShadow","redBtn","lightRed","red","error","light","CancelledOrders","selectedMenu","selectedSubMenu","setSelectedMenu","setSelectedSubMenu","classes","specializations","hospitals","dates","openFilterPartner","setOpenFilterPartner","filterSelectInput","handleSelectedInput","hospitalName","date","categoryName","searchMessage","setSearchMessage","rowsPerPage","selectedRows","page","state","tables","setSelectedRows","e","target","value","marginTop","slice","map","row","index","isItemSelected","id","labelId","tableCell","entryDate","time","medical","firstName","lastName","status","lightGreen","green","marginBottom","propTypes","number","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport Chip from '@mui/material/Chip'\nimport Grid from '@mui/material/Grid'\nimport TableRow from '@mui/material/TableRow'\nimport TableCell from '@mui/material/TableCell'\nimport Checkbox from '@mui/material/Checkbox'\nimport Button from '@mui/material/Button'\nimport { makeStyles } from '@mui/styles'\nimport Search from 'components/Utilities/Search'\nimport FilterList from 'components/Utilities/FilterList'\nimport FormLabel from '@mui/material/FormLabel'\nimport FormControl from '@mui/material/FormControl'\nimport FormSelect from 'components/Utilities/FormSelect'\nimport useFormInput from 'components/hooks/useFormInput'\nimport { useTheme } from '@mui/material/styles'\nimport EnhancedTable from 'components/layouts/EnhancedTable'\nimport { messagesHeadCells } from 'components/Utilities/tableHeaders'\nimport Avatar from '@mui/material/Avatar'\nimport displayPhoto from 'assets/images/avatar.png'\nimport { useSelector } from 'react-redux'\nimport { useActions } from 'components/hooks/useActions'\nimport { handleSelectedRows } from 'helpers/selectedRows'\nimport { isSelected } from 'helpers/isSelected'\nimport { rows } from 'components/Utilities/DataHeader'\nimport Modals from 'components/Utilities/Modal'\n\nconst useStyles = makeStyles((theme) => ({\n  searchGrid: {\n    '&.MuiGrid-root': {\n      flex: 1,\n      marginRight: '5rem',\n    },\n  },\n  actionBtnGrid: {\n    '&.MuiGrid-root': {\n      marginRight: '1.5rem',\n    },\n  },\n  button: {\n    '&.MuiButton-root': {\n      background: '#fff',\n      color: theme.palette.common.grey,\n      textTransform: 'none',\n      borderRadius: '2rem',\n      display: 'flex',\n      alignItems: 'center',\n      padding: '0.5rem',\n      maxWidth: '10rem',\n      fontSize: '.85rem',\n\n      '&:hover': {\n        background: '#fcfcfc',\n      },\n\n      '&:active': {\n        background: '#fafafa',\n      },\n\n      '& .MuiButton-endIcon>*:nth-of-type(1)': {\n        fontSize: '0.85rem',\n      },\n\n      '& .MuiButton-endIcon': {\n        marginLeft: '.2rem',\n      },\n    },\n  },\n  searchFilterBtn: {\n    '&.MuiButton-root': {\n      ...theme.typography.btn,\n      background: theme.palette.common.black,\n      width: '100%',\n    },\n  },\n  badge: {\n    '&.MuiChip-root': {\n      fontSize: '1.25rem !important',\n      height: '2.7rem',\n      textAlign: 'left',\n      borderRadius: '1.3rem',\n    },\n  },\n  tableBtn: {\n    '&.MuiButton-root': {\n      ...theme.typography.btn,\n      height: '3rem',\n      fontSize: '1.25rem',\n      borderRadius: '2rem',\n      boxShadow: 'none',\n\n      '&:hover': {\n        '& .MuiButton-endIcon>*:nth-of-type(1)': {\n          color: '#fff',\n        },\n      },\n\n      '&:active': {\n        boxShadow: 'none',\n      },\n\n      '& .MuiButton-endIcon>*:nth-of-type(1)': {\n        fontSize: '1.5rem',\n      },\n    },\n  },\n\n  redBtn: {\n    '&.MuiButton-root': {\n      background: theme.palette.common.lightRed,\n      color: theme.palette.common.red,\n\n      '&:hover': {\n        background: theme.palette.error.light,\n        color: '#fff',\n      },\n    },\n  },\n}))\n\nconst CancelledOrders = ({\n  selectedMenu,\n  selectedSubMenu,\n  setSelectedMenu,\n  setSelectedSubMenu,\n}) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const specializations = ['Dentistry', 'Pediatry', 'Optometry', 'Pathology']\n  const hospitals = ['General Hospital, Lekki', 'H-Medix', 'X Lab']\n  const dates = ['Hello', 'World', 'Goodbye', 'World']\n  const [openFilterPartner, setOpenFilterPartner] = useState(false)\n  const [filterSelectInput, handleSelectedInput] = useFormInput({\n    hospitalName: '',\n    date: '',\n    categoryName: '',\n  })\n  const { hospitalName, date, categoryName } = filterSelectInput\n\n  const [searchMessage, setSearchMessage] = useState('')\n\n  const { rowsPerPage, selectedRows, page } = useSelector(\n    (state) => state.tables,\n  )\n  const { setSelectedRows } = useActions()\n\n  useEffect(() => {\n    setSelectedMenu(5)\n    setSelectedSubMenu(0)\n    //   eslint-disable-next-line\n  }, [selectedMenu, selectedSubMenu])\n\n  return (\n    <>\n      <Grid container direction=\"column\">\n        <Grid item container>\n          <Grid item className={classes.searchGrid}>\n            <Search\n              value={searchMessage}\n              onChange={(e) => setSearchMessage(e.target.value)}\n              placeholder=\"Type to search Referrals...\"\n              height=\"5rem\"\n            />\n          </Grid>\n          <Grid item>\n            <FilterList\n              onClick={() => setOpenFilterPartner(true)}\n              title=\"Filter referrals\"\n            />\n          </Grid>\n        </Grid>\n        <Grid item container style={{ marginTop: '5rem' }}>\n          <EnhancedTable\n            headCells={messagesHeadCells}\n            rows={rows}\n            page={page}\n            paginationLabel=\"Patients per page\"\n            hasCheckbox={true}\n          >\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => {\n                const isItemSelected = isSelected(row.id, selectedRows)\n\n                const labelId = `enhanced-table-checkbox-${index}`\n\n                return (\n                  <TableRow\n                    hover\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        onClick={() =>\n                          handleSelectedRows(\n                            row.id,\n                            selectedRows,\n                            setSelectedRows,\n                          )\n                        }\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          'aria-labelledby': labelId,\n                        }}\n                      />\n                    </TableCell>\n                    <TableCell\n                      id={labelId}\n                      scope=\"row\"\n                      align=\"center\"\n                      className={classes.tableCell}\n                    >\n                      {row.entryDate}\n                    </TableCell>\n                    <TableCell align=\"center\" className={classes.tableCell}>\n                      {row.time}\n                    </TableCell>\n                    <TableCell align=\"center\" className={classes.tableCell}>\n                      {row.medical}\n                    </TableCell>\n                    <TableCell align=\"left\" className={classes.tableCell}>\n                      <div\n                        style={{\n                          height: '100%',\n                          display: 'flex',\n                          alignItems: 'center',\n                        }}\n                      >\n                        <span style={{ marginRight: '1rem' }}>\n                          <Avatar\n                            alt={`Display Photo of ${row.firstName}`}\n                            src={displayPhoto}\n                            sx={{ width: 24, height: 24 }}\n                          />\n                        </span>\n                        <span style={{ fontSize: '1.25rem' }}>\n                          {row.firstName}\n                          {row.lastName}\n                        </span>\n                      </div>\n                    </TableCell>\n                    <TableCell align=\"left\" className={classes.tableCell}>\n                      <Chip\n                        label=\"completed\"\n                        className={classes.badge}\n                        style={{\n                          background:\n                            row.status === 'active'\n                              ? theme.palette.common.lightGreen\n                              : theme.palette.common.lightRed,\n                          color:\n                            row.status === 'active'\n                              ? theme.palette.common.green\n                              : theme.palette.common.red,\n                        }}\n                      />\n                    </TableCell>\n                  </TableRow>\n                )\n              })}\n          </EnhancedTable>\n        </Grid>\n      </Grid>\n\n      <Modals\n        isOpen={openFilterPartner}\n        title=\"Filter\"\n        rowSpacing={5}\n        handleClose={() => setOpenFilterPartner(false)}\n      >\n        <Grid item container direction=\"column\">\n          <Grid item>\n            <Grid container spacing={2}>\n              <Grid item md>\n                <Grid container direction=\"column\">\n                  <Grid item>\n                    <FormLabel component=\"legend\" className={classes.FormLabel}>\n                      Date\n                    </FormLabel>\n                  </Grid>\n                  <Grid item>\n                    <FormControl fullWidth>\n                      <FormSelect\n                        name=\"date\"\n                        options={dates}\n                        value={date}\n                        onChange={handleSelectedInput}\n                        placeholderText=\"Choose Date\"\n                      />\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item md>\n                <Grid container direction=\"column\">\n                  <Grid item>\n                    <FormLabel component=\"legend\" className={classes.FormLabel}>\n                      Time\n                    </FormLabel>\n                  </Grid>\n                  <Grid item>\n                    <FormControl fullWidth>\n                      <FormSelect\n                        name=\"Time\"\n                        options={specializations}\n                        value={hospitalName}\n                        onChange={handleSelectedInput}\n                        placeholderText=\"Select Time\"\n                      />\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item style={{ marginBottom: '18rem', marginTop: '3rem' }}>\n            <Grid container spacing={2}>\n              <Grid item md>\n                <Grid container direction=\"column\">\n                  <Grid item>\n                    <FormLabel component=\"legend\" className={classes.FormLabel}>\n                      Order Number\n                    </FormLabel>\n                  </Grid>\n                  <Grid item>\n                    <FormControl fullWidth style={{ height: '3rem' }}>\n                      <FormSelect\n                        name=\"Order Number\"\n                        options={hospitals}\n                        value={categoryName}\n                        onChange={handleSelectedInput}\n                        placeholderText=\"Enter order number\"\n                      />\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item md></Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              onClick={() => setOpenFilterPartner(false)}\n              type=\"submit\"\n              className={classes.searchFilterBtn}\n            >\n              Apply Filter\n            </Button>\n          </Grid>\n        </Grid>\n      </Modals>\n    </>\n  )\n}\n\nCancelledOrders.propTypes = {\n  selectedMenu: PropTypes.number.isRequired,\n  selectedSubMenu: PropTypes.number.isRequired,\n  setSelectedMenu: PropTypes.func.isRequired,\n  setSelectedSubMenu: PropTypes.func.isRequired,\n}\n\nexport default CancelledOrders\n"]},"metadata":{},"sourceType":"module"}