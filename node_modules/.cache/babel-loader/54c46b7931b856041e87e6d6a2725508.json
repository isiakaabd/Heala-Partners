{"ast":null,"code":"import * as actionType from \"store/action-types\";\nconst initialState = {\n  page: 0,\n  rowsPerPage: 5,\n  selectedRows: [],\n  emailData: []\n};\n\nconst tablesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.SET_PAGE:\n      return { ...state,\n        page: action.payload\n      };\n\n    case actionType.SET_ROWS_PER_PAGE:\n      return { ...state,\n        rowsPerPage: action.payload\n      };\n\n    case actionType.SET_SELECTED_ROWS:\n      return { ...state,\n        selectedRows: action.payload\n      };\n\n    case actionType.EMAIL_DETAILS:\n      return { ...state,\n        emailData: [action.payload, ...state.emailData]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default tablesReducer;","map":{"version":3,"sources":["/home/codabae/Documents/Projects/DPProject/Dproject_Pharmacy/src/store/reducers/tablesReducer.js"],"names":["actionType","initialState","page","rowsPerPage","selectedRows","emailData","tablesReducer","state","action","type","SET_PAGE","payload","SET_ROWS_PER_PAGE","SET_SELECTED_ROWS","EMAIL_DETAILS"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,oBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,CADa;AAEnBC,EAAAA,WAAW,EAAE,CAFM;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB;;AAOA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,UAAU,CAACU,QAAhB;AACE,aAAO,EACL,GAAGH,KADE;AAELL,QAAAA,IAAI,EAAEM,MAAM,CAACG;AAFR,OAAP;;AAIF,SAAKX,UAAU,CAACY,iBAAhB;AACE,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,WAAW,EAAEK,MAAM,CAACG;AAFf,OAAP;;AAIF,SAAKX,UAAU,CAACa,iBAAhB;AACE,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,YAAY,EAAEI,MAAM,CAACG;AAFhB,OAAP;;AAIF,SAAKX,UAAU,CAACc,aAAhB;AACE,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,SAAS,EAAE,CAACG,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACF,SAA1B;AAFN,OAAP;;AAIF;AACE,aAAOE,KAAP;AAtBJ;AAwBD,CAzBD;;AA2BA,eAAeD,aAAf","sourcesContent":["import * as actionType from \"store/action-types\";\nconst initialState = {\n  page: 0,\n  rowsPerPage: 5,\n  selectedRows: [],\n  emailData: [],\n};\n\nconst tablesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.SET_PAGE:\n      return {\n        ...state,\n        page: action.payload,\n      };\n    case actionType.SET_ROWS_PER_PAGE:\n      return {\n        ...state,\n        rowsPerPage: action.payload,\n      };\n    case actionType.SET_SELECTED_ROWS:\n      return {\n        ...state,\n        selectedRows: action.payload,\n      };\n    case actionType.EMAIL_DETAILS:\n      return {\n        ...state,\n        emailData: [action.payload, ...state.emailData],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default tablesReducer;\n"]},"metadata":{},"sourceType":"module"}