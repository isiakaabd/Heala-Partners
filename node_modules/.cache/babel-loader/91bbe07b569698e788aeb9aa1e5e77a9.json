{"ast":null,"code":"var _jsxFileName = \"/home/codabae/Documents/Projects/DDProject/Dproject_Diagnostics/src/components/Utilities/DisplayProfile.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Avatar from '@mui/material/Avatar';\nimport Chip from '@mui/material/Chip';\nimport CustomButton from './CustomButton';\nimport { makeStyles } from '@mui/styles';\nimport { useTheme } from '@mui/material/styles';\nimport { MessageOutlined } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  gridsWrapper: {\n    background: '#fff',\n    borderRadius: '1rem',\n    padding: '4rem',\n    boxShadow: '0px 0px 5px -1px rgba(0,0,0,0.2)'\n  },\n  badge: {\n    '&.MuiChip-root': {\n      fontSize: '1.3rem !important',\n      borderRadius: '1.5rem'\n    }\n  }\n}));\n\nconst DisplayProfile = props => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    fullName,\n    displayPhoto,\n    medicalTitle,\n    statusId,\n    specialization,\n    status,\n    setChatMediaActive\n  } = props;\n  const greenButton = {\n    background: theme.palette.success.main,\n    hover: theme.palette.success.light,\n    active: theme.palette.success.dark\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    className: classes.gridsWrapper,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            marginRight: '2rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: `Display Photo`,\n            src: displayPhoto,\n            sx: {\n              width: 50,\n              height: 50\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                marginBottom: '1rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                children: fullName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  style: {\n                    marginRight: '3rem'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h4\",\n                    color: \"success\",\n                    style: {\n                      fontWeight: 400\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [medicalTitle, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 23\n                    }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: 'green'\n                      },\n                      children: statusId\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this), specialization ? /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h4\",\n                    style: {\n                      fontWeight: 400\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: theme.palette.common.lightGrey\n                      },\n                      children: \"Specialization:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 25\n                    }, this), ' ', /*#__PURE__*/_jsxDEV(Chip, {\n                      label: \"Dentistry\",\n                      color: \"success\",\n                      className: classes.badge\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this) : status ? /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [' ', /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: theme.palette.common.lightGrey\n                      },\n                      children: \"Status:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 25\n                    }, this), ' ', /*#__PURE__*/_jsxDEV(Chip, {\n                      label: status,\n                      color: status === 'Active' ? 'success' : 'error',\n                      className: classes.badge,\n                      style: {\n                        background: status === 'Active' ? theme.palette.common.lightGreen : theme.palette.common.lightRed,\n                        color: status === 'Active' ? theme.palette.common.green : theme.palette.common.red\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(CustomButton, {\n            startIcon: /*#__PURE__*/_jsxDEV(MessageOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 26\n            }, this),\n            title: \"Message\",\n            type: greenButton,\n            variant: \"contained\",\n            component: Link,\n            onClick: () => setChatMediaActive(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DisplayProfile, \"VtevrTi9kvKTG+vqc/SYVHiEGOM=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = DisplayProfile;\nDisplayProfile.propTypes = {\n  fullName: PropTypes.string.isRequired,\n  displayPhoto: PropTypes.string.isRequired,\n  medicalTitle: PropTypes.string.isRequired,\n  statusId: PropTypes.number.isRequired,\n  specialization: PropTypes.string,\n  status: PropTypes.string,\n  chatPath: PropTypes.string.isRequired,\n  callPath: PropTypes.string.isRequired,\n  videoPath: PropTypes.string.isRequired,\n  setChatMediaActive: PropTypes.func.isRequired\n};\nexport default DisplayProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayProfile\");","map":{"version":3,"sources":["/home/codabae/Documents/Projects/DDProject/Dproject_Diagnostics/src/components/Utilities/DisplayProfile.js"],"names":["React","PropTypes","Link","Grid","Typography","Avatar","Chip","CustomButton","makeStyles","useTheme","MessageOutlined","useStyles","theme","gridsWrapper","background","borderRadius","padding","boxShadow","badge","fontSize","DisplayProfile","props","classes","fullName","displayPhoto","medicalTitle","statusId","specialization","status","setChatMediaActive","greenButton","palette","success","main","hover","light","active","dark","marginRight","width","height","marginBottom","fontWeight","color","common","lightGrey","lightGreen","lightRed","green","red","propTypes","string","isRequired","number","chatPath","callPath","videoPath","func"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport Grid from '@mui/material/Grid'\nimport Typography from '@mui/material/Typography'\nimport Avatar from '@mui/material/Avatar'\nimport Chip from '@mui/material/Chip'\nimport CustomButton from './CustomButton'\nimport { makeStyles } from '@mui/styles'\nimport { useTheme } from '@mui/material/styles'\nimport { MessageOutlined } from '@mui/icons-material'\n\nconst useStyles = makeStyles((theme) => ({\n  gridsWrapper: {\n    background: '#fff',\n    borderRadius: '1rem',\n    padding: '4rem',\n    boxShadow: '0px 0px 5px -1px rgba(0,0,0,0.2)',\n  },\n\n  badge: {\n    '&.MuiChip-root': {\n      fontSize: '1.3rem !important',\n      borderRadius: '1.5rem',\n    },\n  },\n}))\n\nconst DisplayProfile = (props) => {\n  const classes = useStyles()\n  const theme = useTheme()\n\n  const {\n    fullName,\n    displayPhoto,\n    medicalTitle,\n    statusId,\n    specialization,\n    status,\n    setChatMediaActive,\n  } = props\n\n  const greenButton = {\n    background: theme.palette.success.main,\n    hover: theme.palette.success.light,\n    active: theme.palette.success.dark,\n  }\n\n  return (\n    <Grid\n      container\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      className={classes.gridsWrapper}\n    >\n      <Grid item>\n        <Grid container alignItems=\"center\">\n          <Grid item style={{ marginRight: '2rem' }}>\n            <Avatar\n              alt={`Display Photo`}\n              src={displayPhoto}\n              sx={{ width: 50, height: 50 }}\n            />\n          </Grid>\n          <Grid item>\n            <Grid container direction=\"column\">\n              <Grid item style={{ marginBottom: '1rem' }}>\n                <Typography variant=\"h3\">{fullName}</Typography>\n              </Grid>\n              <Grid item>\n                <Grid container alignItems=\"center\">\n                  <Grid item style={{ marginRight: '3rem' }}>\n                    <Typography\n                      variant=\"h4\"\n                      color=\"success\"\n                      style={{ fontWeight: 400 }}\n                    >\n                      <span>{medicalTitle}:</span>{' '}\n                      <span style={{ color: 'green' }}>{statusId}</span>\n                    </Typography>\n                  </Grid>\n                  {specialization ? (\n                    <Grid item>\n                      <Typography variant=\"h4\" style={{ fontWeight: 400 }}>\n                        <span style={{ color: theme.palette.common.lightGrey }}>\n                          Specialization:\n                        </span>{' '}\n                        <Chip\n                          label=\"Dentistry\"\n                          color=\"success\"\n                          className={classes.badge}\n                        />\n                      </Typography>\n                    </Grid>\n                  ) : status ? (\n                    <Grid item>\n                      {' '}\n                      <Typography variant=\"h4\">\n                        <span style={{ color: theme.palette.common.lightGrey }}>\n                          Status:\n                        </span>{' '}\n                        <Chip\n                          label={status}\n                          color={status === 'Active' ? 'success' : 'error'}\n                          className={classes.badge}\n                          style={{\n                            background:\n                              status === 'Active'\n                                ? theme.palette.common.lightGreen\n                                : theme.palette.common.lightRed,\n                            color:\n                              status === 'Active'\n                                ? theme.palette.common.green\n                                : theme.palette.common.red,\n                          }}\n                        />\n                      </Typography>\n                    </Grid>\n                  ) : null}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      {/* Action Buttons grid */}\n      <Grid item>\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <CustomButton\n              startIcon={<MessageOutlined />}\n              title=\"Message\"\n              type={greenButton}\n              variant=\"contained\"\n              component={Link}\n              onClick={() => setChatMediaActive(true)}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nDisplayProfile.propTypes = {\n  fullName: PropTypes.string.isRequired,\n  displayPhoto: PropTypes.string.isRequired,\n  medicalTitle: PropTypes.string.isRequired,\n  statusId: PropTypes.number.isRequired,\n  specialization: PropTypes.string,\n  status: PropTypes.string,\n  chatPath: PropTypes.string.isRequired,\n  callPath: PropTypes.string.isRequired,\n  videoPath: PropTypes.string.isRequired,\n  setChatMediaActive: PropTypes.func.isRequired,\n}\n\nexport default DisplayProfile\n"]},"metadata":{},"sourceType":"module"}