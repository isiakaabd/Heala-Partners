[{"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\index.js":"1","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\App.js":"2","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\accessToken.js":"3","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\index.js":"4","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\ScrollToView.js":"5","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\muiTheme.js":"6","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\routes\\Private.js":"7","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\routes\\Routes.js":"8","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\index.js":"9","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\index.js":"10","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\index.js":"11","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\store.js":"12","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\TextError.js":"13","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\SearchInput.js":"14","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\PreviousButton.js":"15","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\Modal.js":"16","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\Search.js":"17","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\SideMenus.js":"18","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\LinearProgress.js":"19","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\Loader.js":"20","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\LineChart.js":"21","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ProcessingOrders.js":"22","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Settings.js":"23","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Dashboard.js":"24","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\routes\\PrivateRoute.js":"25","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\CancelledOrders.js":"26","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Profile.js":"27","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\PendingOrder.js":"28","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\CompletedOrders.js":"29","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ViewCompleted.js":"30","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\SideMenu.js":"31","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\Notifications.js":"32","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\NoData.js":"33","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HeaderProfile.js":"34","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\LineGraph.js":"35","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\PendingOrderProfile.js":"36","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\reducers\\index.js":"37","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\graphQL\\Mutation.js":"38","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\hooks\\useActions.js":"39","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\DashboardChart.js":"40","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\graphQL\\useQuery.js":"41","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\Time.js":"42","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\hooks\\useFormInput.js":"43","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\helpers\\isSelected.js":"44","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\modals\\Success.js":"45","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\reducers\\tablesReducer.js":"46","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\reducers\\authReducer.js":"47","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\action-creators\\index.js":"48","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\CustomButton.js":"49","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\action-types\\index.js":"50","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\action-creators\\auth.js":"51","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\action-creators\\tablesActions.js":"52","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\EnhancedTable.js":"53","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\tableHeaders.js":"54","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\helpers\\selectedRows.js":"55","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\helpers\\asideMenus.js":"56","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\FormSelect.js":"57","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\FormikControl.js":"58","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\index.js":"59","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\EnhancedTableHeader.js":"60","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\EnhancedTableToolbar.js":"61","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HeaderContents.js":"62","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HeadersContents.js":"63","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HeadersProfile.js":"64","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\Card.js":"65","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\Header.js":"66","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\AvailabilityTable.js":"67","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\Headers.js":"68","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfile1.js":"69","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\FormInput.js":"70","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\FilterList.js":"71","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\CircularProgress.js":"72","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfile2.js":"73","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfiles.js":"74","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\AvailabilityCard.js":"75","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfile.js":"76","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Setting.js":"77","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ScheduledRequestProfile.js":"78","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ViewResult.js":"79","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ScheduledRequest.js":"80","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\PendingProfile.js":"81","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Profiles.js":"82","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Dashboards.js":"83","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Login.js":"84","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Pending.js":"85","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\CompletedOrder.js":"86","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\CancelledOrder.js":"87","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\File.js":"88","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\LoginInput.js":"89","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\DateTimePicker.js":"90","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\Input.js":"91","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\FormRadio.js":"92","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\Checkbox.js":"93","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\Select.js":"94","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\tableData.js":"95","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\modals\\index.js":"96","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\modals\\DeleteOrDisable.js":"97","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalHeaderContent.js":"98","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalHeaderProfile.js":"99","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalHeader.js":"100","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalMenu.js":"101","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\routes\\Hospital.js":"102","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Administrator.js":"103","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\Button.js":"104","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\CaseNotes.js":"105","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Chat.js":"106","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\CircularChart.js":"107","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Consultations.js":"108","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\CreateEmail.js":"109","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Finance.js":"110","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Financetable.js":"111","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Email.js":"112","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HCPChat.js":"113","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HcpConsultations.js":"114","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HcpEarnings.js":"115","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HcpProfile.js":"116","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HcpPatients.js":"117","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Hcps.js":"118","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Management.js":"119","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\MedicalRecords.js":"120","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Medications.js":"121","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Messages.js":"122","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\PatientAppointment.js":"123","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\PatientProfile.js":"124","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Patients.js":"125","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Payout.js":"126","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\PendingPayout.js":"127","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Prescriptions.js":"128","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ReferralTab.js":"129","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\SingleHCP.js":"130","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\SinglePatient.js":"131","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Subscription.js":"132","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ViewMail.js":"133","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ViewReferral.js":"134","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ViewMessage.js":"135","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\WaitingList.js":"136","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\WaitingListDetails.js":"137","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\WaitingListTable.js":"138","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Appointments.js":"139","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\CreateMessage.js":"140","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HcpAppointments.js":"141","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HcpAvailability.js":"142","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HcpCaseNote.js":"143","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\bMI.js":"144","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\modals\\ReferPatient.js":"145","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\modals\\RoleModal.js":"146","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\modals\\SubscriptionModal.js":"147","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\graphQL\\fragment.js":"148"},{"size":1158,"mtime":1646935730406,"results":"149","hashOfConfig":"150"},{"size":12056,"mtime":1647348527045,"results":"151","hashOfConfig":"150"},{"size":165,"mtime":1644828989001,"results":"152","hashOfConfig":"150"},{"size":38,"mtime":1635771631194,"results":"153","hashOfConfig":"150"},{"size":409,"mtime":1635771630842,"results":"154","hashOfConfig":"150"},{"size":3302,"mtime":1646936043145,"results":"155","hashOfConfig":"150"},{"size":5238,"mtime":1646823707851,"results":"156","hashOfConfig":"150"},{"size":4676,"mtime":1646936466141,"results":"157","hashOfConfig":"150"},{"size":3436,"mtime":1647346136304,"results":"158","hashOfConfig":"150"},{"size":1238,"mtime":1647339661423,"results":"159","hashOfConfig":"150"},{"size":1149,"mtime":1647338588833,"results":"160","hashOfConfig":"150"},{"size":296,"mtime":1635771631205,"results":"161","hashOfConfig":"150"},{"size":453,"mtime":1646936150621,"results":"162","hashOfConfig":"150"},{"size":2001,"mtime":1643145376292,"results":"163","hashOfConfig":"150"},{"size":761,"mtime":1635771630868,"results":"164","hashOfConfig":"150"},{"size":2431,"mtime":1646936239689,"results":"165","hashOfConfig":"150"},{"size":1685,"mtime":1646936228090,"results":"166","hashOfConfig":"150"},{"size":5549,"mtime":1646743659093,"results":"167","hashOfConfig":"150"},{"size":1100,"mtime":1643145376045,"results":"168","hashOfConfig":"150"},{"size":472,"mtime":1643148788974,"results":"169","hashOfConfig":"150"},{"size":3998,"mtime":1646936333469,"results":"170","hashOfConfig":"150"},{"size":12839,"mtime":1646992912999,"results":"171","hashOfConfig":"150"},{"size":4203,"mtime":1635771631164,"results":"172","hashOfConfig":"150"},{"size":610,"mtime":1646935272163,"results":"173","hashOfConfig":"150"},{"size":926,"mtime":1646935490871,"results":"174","hashOfConfig":"150"},{"size":13403,"mtime":1646935224662,"results":"175","hashOfConfig":"150"},{"size":4958,"mtime":1646936494864,"results":"176","hashOfConfig":"150"},{"size":14735,"mtime":1646935352890,"results":"177","hashOfConfig":"150"},{"size":13042,"mtime":1646935262223,"results":"178","hashOfConfig":"150"},{"size":12620,"mtime":1646929642572,"results":"179","hashOfConfig":"150"},{"size":5561,"mtime":1646935021274,"results":"180","hashOfConfig":"150"},{"size":2825,"mtime":1635771631123,"results":"181","hashOfConfig":"150"},{"size":814,"mtime":1645713855121,"results":"182","hashOfConfig":"150"},{"size":3177,"mtime":1646934985141,"results":"183","hashOfConfig":"150"},{"size":2593,"mtime":1646935007008,"results":"184","hashOfConfig":"150"},{"size":17667,"mtime":1646992786013,"results":"185","hashOfConfig":"150"},{"size":275,"mtime":1635771631196,"results":"186","hashOfConfig":"150"},{"size":11305,"mtime":1647348335160,"results":"187","hashOfConfig":"150"},{"size":479,"mtime":1635771630875,"results":"188","hashOfConfig":"150"},{"size":12455,"mtime":1646934770353,"results":"189","hashOfConfig":"150"},{"size":16421,"mtime":1647348119040,"results":"190","hashOfConfig":"150"},{"size":2167,"mtime":1646999886568,"results":"191","hashOfConfig":"150"},{"size":306,"mtime":1635771630876,"results":"192","hashOfConfig":"150"},{"size":82,"mtime":1635771631172,"results":"193","hashOfConfig":"150"},{"size":1953,"mtime":1646990020742,"results":"194","hashOfConfig":"150"},{"size":797,"mtime":1646935934327,"results":"195","hashOfConfig":"150"},{"size":2337,"mtime":1647335367463,"results":"196","hashOfConfig":"150"},{"size":131,"mtime":1635771631192,"results":"197","hashOfConfig":"150"},{"size":2429,"mtime":1646935583692,"results":"198","hashOfConfig":"150"},{"size":706,"mtime":1646935964767,"results":"199","hashOfConfig":"150"},{"size":867,"mtime":1646989194407,"results":"200","hashOfConfig":"150"},{"size":536,"mtime":1646936859171,"results":"201","hashOfConfig":"150"},{"size":3466,"mtime":1646934829763,"results":"202","hashOfConfig":"150"},{"size":5980,"mtime":1647344483196,"results":"203","hashOfConfig":"150"},{"size":683,"mtime":1635771631183,"results":"204","hashOfConfig":"150"},{"size":3003,"mtime":1647336035312,"results":"205","hashOfConfig":"150"},{"size":1375,"mtime":1635771630866,"results":"206","hashOfConfig":"150"},{"size":745,"mtime":1646936081149,"results":"207","hashOfConfig":"150"},{"size":412,"mtime":1645120907060,"results":"208","hashOfConfig":"150"},{"size":1886,"mtime":1646934848171,"results":"209","hashOfConfig":"150"},{"size":1800,"mtime":1635771631043,"results":"210","hashOfConfig":"150"},{"size":9894,"mtime":1646934948197,"results":"211","hashOfConfig":"150"},{"size":10401,"mtime":1647338430134,"results":"212","hashOfConfig":"150"},{"size":2808,"mtime":1646777031101,"results":"213","hashOfConfig":"150"},{"size":1178,"mtime":1635771630846,"results":"214","hashOfConfig":"150"},{"size":1662,"mtime":1646934869428,"results":"215","hashOfConfig":"150"},{"size":4250,"mtime":1635771631033,"results":"216","hashOfConfig":"150"},{"size":1671,"mtime":1646767294966,"results":"217","hashOfConfig":"150"},{"size":7485,"mtime":1646750295575,"results":"218","hashOfConfig":"150"},{"size":1499,"mtime":1646936349736,"results":"219","hashOfConfig":"150"},{"size":1510,"mtime":1635771630865,"results":"220","hashOfConfig":"150"},{"size":1677,"mtime":1646935540911,"results":"221","hashOfConfig":"150"},{"size":6075,"mtime":1646211713153,"results":"222","hashOfConfig":"150"},{"size":7485,"mtime":1646746788999,"results":"223","hashOfConfig":"150"},{"size":1387,"mtime":1646989252377,"results":"224","hashOfConfig":"150"},{"size":5786,"mtime":1646936686298,"results":"225","hashOfConfig":"150"},{"size":2069,"mtime":1646778069918,"results":"226","hashOfConfig":"150"},{"size":18941,"mtime":1646778383987,"results":"227","hashOfConfig":"150"},{"size":13349,"mtime":1646778487859,"results":"228","hashOfConfig":"150"},{"size":13442,"mtime":1646772988568,"results":"229","hashOfConfig":"150"},{"size":18816,"mtime":1646778309154,"results":"230","hashOfConfig":"150"},{"size":4915,"mtime":1646834991656,"results":"231","hashOfConfig":"150"},{"size":767,"mtime":1646740850871,"results":"232","hashOfConfig":"150"},{"size":11703,"mtime":1647348290904,"results":"233","hashOfConfig":"150"},{"size":13487,"mtime":1646774674078,"results":"234","hashOfConfig":"150"},{"size":13307,"mtime":1646775461263,"results":"235","hashOfConfig":"150"},{"size":12237,"mtime":1646844065720,"results":"236","hashOfConfig":"150"},{"size":4889,"mtime":1646650981112,"results":"237","hashOfConfig":"150"},{"size":1188,"mtime":1645129122335,"results":"238","hashOfConfig":"150"},{"size":1841,"mtime":1645130514665,"results":"239","hashOfConfig":"150"},{"size":997,"mtime":1646936102102,"results":"240","hashOfConfig":"150"},{"size":1476,"mtime":1645129077919,"results":"241","hashOfConfig":"150"},{"size":2280,"mtime":1646936072161,"results":"242","hashOfConfig":"150"},{"size":1385,"mtime":1646936137573,"results":"243","hashOfConfig":"150"},{"size":7937,"mtime":1646936217004,"results":"244","hashOfConfig":"150"},{"size":64,"mtime":1646747851790,"results":"245","hashOfConfig":"150"},{"size":4379,"mtime":1646990010201,"results":"246","hashOfConfig":"150"},{"size":10405,"mtime":1647338291490,"results":"247","hashOfConfig":"150"},{"size":3193,"mtime":1647338413849,"results":"248","hashOfConfig":"150"},{"size":1707,"mtime":1647338312834,"results":"249","hashOfConfig":"150"},{"size":5667,"mtime":1647338620897,"results":"250","hashOfConfig":"150"},{"size":15945,"mtime":1647345611658,"results":"251","hashOfConfig":"150"},{"size":14904,"mtime":1646237487411,"results":"252","hashOfConfig":"150"},{"size":1339,"mtime":1646989225291,"results":"253","hashOfConfig":"150"},{"size":21595,"mtime":1647339430777,"results":"254","hashOfConfig":"150"},{"size":8440,"mtime":1646236105411,"results":"255","hashOfConfig":"150"},{"size":3423,"mtime":1643145375730,"results":"256","hashOfConfig":"150"},{"size":10108,"mtime":1646057403594,"results":"257","hashOfConfig":"150"},{"size":10931,"mtime":1647341913524,"results":"258","hashOfConfig":"150"},{"size":9217,"mtime":1646507614192,"results":"259","hashOfConfig":"150"},{"size":8469,"mtime":1645710984572,"results":"260","hashOfConfig":"150"},{"size":12987,"mtime":1647340098138,"results":"261","hashOfConfig":"150"},{"size":8404,"mtime":1646236123510,"results":"262","hashOfConfig":"150"},{"size":11429,"mtime":1647346747273,"results":"263","hashOfConfig":"150"},{"size":6866,"mtime":1646507689313,"results":"264","hashOfConfig":"150"},{"size":8902,"mtime":1645711016101,"results":"265","hashOfConfig":"150"},{"size":7499,"mtime":1647343625796,"results":"266","hashOfConfig":"150"},{"size":21948,"mtime":1646237347495,"results":"267","hashOfConfig":"150"},{"size":13249,"mtime":1645711033927,"results":"268","hashOfConfig":"150"},{"size":11018,"mtime":1645711575061,"results":"269","hashOfConfig":"150"},{"size":7476,"mtime":1645711048863,"results":"270","hashOfConfig":"150"},{"size":10043,"mtime":1645711052785,"results":"271","hashOfConfig":"150"},{"size":20016,"mtime":1646237861429,"results":"272","hashOfConfig":"150"},{"size":12088,"mtime":1645711067023,"results":"273","hashOfConfig":"150"},{"size":13644,"mtime":1647348213981,"results":"274","hashOfConfig":"150"},{"size":9464,"mtime":1645711536912,"results":"275","hashOfConfig":"150"},{"size":8033,"mtime":1646935430165,"results":"276","hashOfConfig":"150"},{"size":7714,"mtime":1645711087408,"results":"277","hashOfConfig":"150"},{"size":14898,"mtime":1646238098562,"results":"278","hashOfConfig":"150"},{"size":8255,"mtime":1645454836827,"results":"279","hashOfConfig":"150"},{"size":9787,"mtime":1645711149788,"results":"280","hashOfConfig":"150"},{"size":13814,"mtime":1645711162073,"results":"281","hashOfConfig":"150"},{"size":4267,"mtime":1643145378170,"results":"282","hashOfConfig":"150"},{"size":8815,"mtime":1645711187126,"results":"283","hashOfConfig":"150"},{"size":3215,"mtime":1645711181144,"results":"284","hashOfConfig":"150"},{"size":1733,"mtime":1645530465342,"results":"285","hashOfConfig":"150"},{"size":5202,"mtime":1645530495887,"results":"286","hashOfConfig":"150"},{"size":5090,"mtime":1635771631128,"results":"287","hashOfConfig":"150"},{"size":2350,"mtime":1644964044879,"results":"288","hashOfConfig":"150"},{"size":9143,"mtime":1646237585342,"results":"289","hashOfConfig":"150"},{"size":13591,"mtime":1646237717522,"results":"290","hashOfConfig":"150"},{"size":2326,"mtime":1646211138157,"results":"291","hashOfConfig":"150"},{"size":20266,"mtime":1645711004165,"results":"292","hashOfConfig":"150"},{"size":177,"mtime":1643145376523,"results":"293","hashOfConfig":"150"},{"size":4281,"mtime":1646236106600,"results":"294","hashOfConfig":"150"},{"size":3315,"mtime":1646236105398,"results":"295","hashOfConfig":"150"},{"size":7181,"mtime":1646236102977,"results":"296","hashOfConfig":"150"},{"size":263,"mtime":1644579054473,"results":"297","hashOfConfig":"150"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},"1zca3s",{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"300"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"300"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"300"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"300"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"300"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"300"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"300"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"300"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\index.js",[],["603","604"],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\App.js",["605"],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\accessToken.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\index.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\ScrollToView.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\muiTheme.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\routes\\Private.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\routes\\Routes.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\index.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\index.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\index.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\store.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\TextError.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\SearchInput.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\PreviousButton.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\Modal.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\Search.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\SideMenus.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\LinearProgress.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\Loader.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\LineChart.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ProcessingOrders.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Settings.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Dashboard.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\routes\\PrivateRoute.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\CancelledOrders.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Profile.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\PendingOrder.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\CompletedOrders.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ViewCompleted.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\SideMenu.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\Notifications.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\NoData.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HeaderProfile.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\LineGraph.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\PendingOrderProfile.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\reducers\\index.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\graphQL\\Mutation.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\hooks\\useActions.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\DashboardChart.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\graphQL\\useQuery.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\Time.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\hooks\\useFormInput.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\helpers\\isSelected.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\modals\\Success.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\reducers\\tablesReducer.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\reducers\\authReducer.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\action-creators\\index.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\CustomButton.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\action-types\\index.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\action-creators\\auth.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\store\\action-creators\\tablesActions.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\EnhancedTable.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\tableHeaders.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\helpers\\selectedRows.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\helpers\\asideMenus.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\FormSelect.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\FormikControl.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\index.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\EnhancedTableHeader.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\EnhancedTableToolbar.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HeaderContents.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HeadersContents.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HeadersProfile.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\Card.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\Header.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\AvailabilityTable.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\Headers.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfile1.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\FormInput.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\FilterList.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\CircularProgress.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfile2.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfiles.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\AvailabilityCard.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfile.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Setting.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ScheduledRequestProfile.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ViewResult.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ScheduledRequest.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\PendingProfile.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Profiles.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Dashboards.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Login.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Pending.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\CompletedOrder.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\CancelledOrder.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\File.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\LoginInput.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\DateTimePicker.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\Input.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\FormRadio.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\Checkbox.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\validation\\Select.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\tableData.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\modals\\index.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\modals\\DeleteOrDisable.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalHeaderContent.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalHeaderProfile.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalHeader.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalMenu.js",["606"],"import React, { useEffect, useState } from 'react'\r\nimport DeleteOrDisable from 'components/modals/DeleteOrDisable'\r\nimport PropTypes from 'prop-types'\r\nimport List from '@mui/material/List'\r\nimport ListItemButton from '@mui/material/ListItemButton'\r\nimport ListItemIcon from '@mui/material/ListItemIcon'\r\nimport ListItemText from '@mui/material/ListItemText'\r\nimport { hospitalMenu } from 'helpers/asideMenus'\r\nimport { makeStyles } from '@mui/styles'\r\nimport logo from 'assets/images/logo.svg'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { HiLogout } from 'react-icons/hi'\r\nimport { useActions } from 'components/hooks/useActions'\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGOUT_USER } from 'components/graphQL/Mutation'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  aside: {\r\n    width: '34rem',\r\n    background: '#fff',\r\n    paddingLeft: '2.5em',\r\n    paddingRight: '2.5em',\r\n    paddingTop: '5em',\r\n    height: '100vh',\r\n    boxShadow: '5px -5px 7px #eee',\r\n    position: 'fixed',\r\n    overflowY: 'hidden',\r\n    zIndex: theme.zIndex.appBar + 1,\r\n\r\n    '&:hover': {\r\n      overflowY: 'scroll',\r\n    },\r\n\r\n    '& .MuiListItemButton-root': {\r\n      marginBottom: '2em',\r\n\r\n      '&:hover': {\r\n        background: theme.palette.common.lightRed,\r\n\r\n        '& .MuiSvgIcon-root': {\r\n          color: theme.palette.common.red,\r\n        },\r\n\r\n        '& .MuiTypography-root': {\r\n          color: theme.palette.common.red,\r\n        },\r\n\r\n        '& .message-icon': {\r\n          color: theme.palette.common.red,\r\n        },\r\n      },\r\n    },\r\n\r\n    '& .MuiListItemIcon-root': {\r\n      minWidth: 50,\r\n    },\r\n\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: '2rem',\r\n\r\n      '&:hover': {\r\n        color: theme.palette.common.red,\r\n      },\r\n    },\r\n\r\n    '& .MuiTypography-root': {\r\n      fontSize: '1.45rem',\r\n    },\r\n\r\n    '& .MuiListItemButton-root.Mui-selected': {\r\n      backgroundColor: theme.palette.common.lightRed,\r\n      color: theme.palette.common.red,\r\n      borderRadius: '.5rem',\r\n\r\n      '&:hover': {\r\n        backgroundColor: theme.palette.common.lightRed,\r\n      },\r\n\r\n      '& .MuiListItemIcon-root': {\r\n        color: theme.palette.common.red,\r\n      },\r\n\r\n      '& .MuiTypography-root': {\r\n        color: theme.palette.common.red,\r\n      },\r\n    },\r\n\r\n    '&::-webkit-scrollbar': {\r\n      width: '.85rem',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-track': {\r\n      boxShadow: 'inset 0 0 1rem rgba(0, 0, 0, 0.2)',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb': {\r\n      borderRadius: '.5rem',\r\n      background: theme.palette.common.lightGrey,\r\n    },\r\n  },\r\n  logoWrapper: {\r\n    paddingTop: '3em',\r\n    paddingBottom: '2em',\r\n    paddingLeft: '1em',\r\n  },\r\n  logout: {\r\n    '&.MuiListItemButton-root': {\r\n      marginTop: '2.5rem',\r\n\r\n      '& .MuiListItemIcon-root': {\r\n        color: theme.palette.common.red,\r\n      },\r\n\r\n      '& .MuiTypography-root': {\r\n        color: theme.palette.common.red,\r\n      },\r\n    },\r\n  },\r\n}))\r\nconst HospitalMenu = (props) => {\r\n  const {\r\n    selectedMenu,\r\n    setSelectedMenu,\r\n    setSelectedSubMenu,\r\n    setWaitingListMenu,\r\n  } = props\r\n  const { logout } = useActions()\r\n  const [logout_user] = useMutation(LOGOUT_USER)\r\n\r\n  const classes = useStyles()\r\n  const [Logout, setLogout] = useState(false)\r\n  const location = useLocation()\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logout_user()\r\n      logout()\r\n      setSelectedMenu(13)\r\n    } catch (err) {\r\n      console.log(err.message)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    ;[...hospitalMenu].filter((menu) => {\r\n      switch (location.pathname) {\r\n        case menu.path:\r\n          if (menu.id !== selectedMenu) {\r\n            setSelectedMenu(menu.id)\r\n          }\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    })\r\n    // eslint-disable-next-line\r\n  }, [selectedMenu])\r\n\r\n  return (\r\n    <>\r\n      <aside className={classes.aside}>\r\n        <div className={classes.logoWrapper}>\r\n          <img src={logo} alt=\"logo\" />\r\n        </div>\r\n        <List>\r\n          {hospitalMenu.map((menu) => (\r\n            <ListItemButton\r\n              disableRipple\r\n              key={menu.id}\r\n              onClick={() => {\r\n                setSelectedMenu(menu.id)\r\n                setSelectedSubMenu(0)\r\n                setWaitingListMenu(0)\r\n              }}\r\n              selected={selectedMenu === menu.id}\r\n              component={Link}\r\n              to={menu.path}\r\n            >\r\n              <ListItemIcon>\r\n                {React.createElement(\r\n                  menu.icon,\r\n                  menu.id === 5 ? { size: 20, className: 'message-icon' } : {},\r\n                )}\r\n              </ListItemIcon>\r\n\r\n              <ListItemText>{menu.title}</ListItemText>\r\n            </ListItemButton>\r\n          ))}\r\n          <ListItemButton\r\n            disableRipple\r\n            classes={{ root: classes.logout }}\r\n            onClick={() => setLogout(true)}\r\n          >\r\n            <ListItemIcon>\r\n              <HiLogout size={20} />\r\n            </ListItemIcon>\r\n\r\n            <ListItemText>Logout</ListItemText>\r\n          </ListItemButton>\r\n        </List>\r\n      </aside>\r\n      <DeleteOrDisable\r\n        open={Logout}\r\n        setOpen={setLogout}\r\n        title=\"Logout\"\r\n        confirmationMsg=\"logout\"\r\n        btnValue=\"Logout\"\r\n        type=\"logout\"\r\n        onConfirm={handleLogout}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nHospitalMenu.propTypes = {\r\n  selectedMenu: PropTypes.number.isRequired,\r\n  setSelectedMenu: PropTypes.func.isRequired,\r\n  setSelectedSubMenu: PropTypes.func.isRequired,\r\n  setWaitingListMenu: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default HospitalMenu\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\routes\\Hospital.js",["607","608"],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Administrator.js",["609"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormikControl from \"components/validation/FormikControl\";\r\nimport {\r\n  Loader,\r\n  Button,\r\n  Modals,\r\n  PreviousButton,\r\n  CustomButton,\r\n  Search,\r\n  FilterList,\r\n} from \"components/Utilities\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Checkbox, TableRow, TableCell } from \"@mui/material\";\r\nimport { signup } from \"components/graphQL/Mutation\";\r\nimport { EnhancedTable, NoData } from \"components/layouts\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { adminHeader } from \"components/Utilities/tableHeaders\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { findAdmin } from \"components/graphQL/useQuery\";\r\n//\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      flexGrow: 1,\r\n    },\r\n  },\r\n\r\n  FormLabel: {\r\n    fontSize: \"1.6rem\",\r\n    color: theme.palette.common.dark,\r\n  },\r\n  btn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  redBtn: {\r\n    \"&.MuiButton-root\": {\r\n      background: theme.palette.common.lightRed,\r\n      color: theme.palette.common.red,\r\n\r\n      \"&:hover\": {\r\n        background: theme.palette.error.light,\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n  greenBtn: {\r\n    \"&.MuiButton-root\": {\r\n      background: theme.palette.common.lightGreen,\r\n      color: theme.palette.common.green,\r\n\r\n      \"&:hover\": {\r\n        background: theme.palette.success.light,\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n  \"&.MuiButton-root\": {\r\n    ...theme.typography.btn,\r\n    background: theme.palette.common.black,\r\n    width: \"100%\",\r\n  },\r\n\r\n  checkboxContainer: {\r\n    \"&.MuiBox-root\": {\r\n      padding: \"2rem 0\",\r\n      border: \"1px solid #E0E0E0\",\r\n      borderRadius: \".4rem\",\r\n      \"&:active\": {\r\n        border: \"2px solid black\",\r\n      },\r\n    },\r\n  },\r\n  checkbox: {\r\n    \"& .MuiSvgIcon-root\": {\r\n      fontSize: 28,\r\n    },\r\n    \"&.Mui-checked\": {\r\n      color: \"green !important\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Administrator = ({ selectedMenu, selectedSubMenu, setSelectedMenu, setSelectedSubMenu }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [addAdminUser] = useMutation(signup);\r\n  const { loading, data, error, refetch } = useQuery(findAdmin, {\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n  const [pageInfo, setPageInfo] = useState([]);\r\n  const fetchMoreFunc = (_, newPage) => {\r\n    refetch({ page: newPage });\r\n  };\r\n\r\n  const buttonType = {\r\n    background: theme.palette.common.black,\r\n    hover: theme.palette.primary.main,\r\n    active: theme.palette.primary.dark,\r\n    disabled: theme.palette.common.black,\r\n  };\r\n  const onChange = async (e) => {\r\n    setSearchMail(e);\r\n    if (e == \"\") {\r\n      refetch();\r\n    } else refetch({ role: e });\r\n  };\r\n  const specializations = [\r\n    { key: \"Doctor\", value: \"doctor\" },\r\n    { key: \"Super-admin\", value: \"super-admin\" },\r\n  ];\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n    role: \"\",\r\n  };\r\n  const [admins, setAdmins] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAdmins(data.accounts.data);\r\n      setPageInfo(data.accounts.pageInfo);\r\n    }\r\n  }, [data]);\r\n\r\n  const optionss = [\r\n    {\r\n      label: \"option 1\",\r\n      value: \"option 1\",\r\n    },\r\n    {\r\n      label: \"option 2\",\r\n      value: \"option 2\",\r\n    },\r\n    {\r\n      label: \"option 3\",\r\n      value: \"three\",\r\n    },\r\n  ];\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email(\"Enter a valid email\"),\r\n    role: Yup.string(\"Select your role\"),\r\n  });\r\n  const onSubmit = async (values) => {\r\n    const { email, role } = values;\r\n    await refetch({\r\n      email,\r\n      role,\r\n    });\r\n    handleDialogClose();\r\n  };\r\n  const initialValues1 = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema1 = Yup.object({\r\n    password: Yup.string()\r\n      .required(\"password is required\")\r\n      .min(8, \"Password is too short - should be 8 chars minimum.\"),\r\n    email: Yup.string().email(\"Enter a valid email\").required(\"Email is required\"),\r\n  });\r\n  const onSubmit1 = async (values, onSubmitProps) => {\r\n    const { email, password } = values;\r\n    try {\r\n      await addAdminUser({\r\n        variables: {\r\n          email,\r\n          password,\r\n          role: \"admin\",\r\n          authType: \"normal\",\r\n        },\r\n        refetchQueries: [{ query: findAdmin }],\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    handleAdminClose();\r\n    onSubmitProps.resetForm();\r\n  };\r\n\r\n  const [searchMail, setSearchMail] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const handleAdminClose = () => setIsAdmin(false);\r\n  const handleDialogOpen = () => setIsOpen(true);\r\n  const handleAdminOpen = () => setIsAdmin(true);\r\n  const handleDialogClose = () => setIsOpen(false);\r\n  const { page, totalPages, hasNextPage, hasPrevPage, limit, totalDocs } = pageInfo;\r\n  const [rowsPerPage, setRowsPerPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setSelectedMenu(11);\r\n    setSelectedSubMenu(12);\r\n\r\n    // eslint-disable-next-line\r\n  }, [selectedMenu, selectedSubMenu]);\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" gap={2} flexWrap=\"nowrap\" height=\"100%\">\r\n        <Grid item>\r\n          <PreviousButton path=\"/settings\" />\r\n        </Grid>\r\n        <Grid item container flexWrap=\"nowrap\" gap={2}>\r\n          <Grid item className={classes.searchGrid}>\r\n            <Search\r\n              value={searchMail}\r\n              onChange={(e) => onChange(e.target.value)}\r\n              placeholder=\"Type to search referrals by role...\"\r\n              height=\"5rem\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <FilterList\r\n              onClick={handleDialogOpen}\r\n              title=\"Filter Administrator\"\r\n              options={optionss}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <CustomButton\r\n              endIcon={<AddIcon />}\r\n              title=\"Add Admin\"\r\n              type={buttonType}\r\n              onClick={handleAdminOpen}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* The Search and Filter ends here */}\r\n        <Grid item container height=\"100%\" direction=\"column\">\r\n          {admins.length > 0 ? (\r\n            <EnhancedTable\r\n              headCells={adminHeader}\r\n              rows={admins}\r\n              paginationLabel=\"admin per page\"\r\n              page={page}\r\n              limit={limit}\r\n              totalPages={totalPages}\r\n              totalDocs={totalDocs}\r\n              rowsPerPage={rowsPerPage}\r\n              setRowsPerPage={setRowsPerPage}\r\n              hasNextPage={hasNextPage}\r\n              hasPrevPage={hasPrevPage}\r\n              handleChangePage={fetchMoreFunc}\r\n              hasCheckbox={true}\r\n            >\r\n              {admins\r\n                // .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const { _id, email, role } = row;\r\n                  const isItemSelected = isSelected(_id, selectedRows);\r\n\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={_id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          onClick={() => handleSelectedRows(_id, selectedRows, setSelectedRows)}\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            \"aria-labelledby\": labelId,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"left\" className={classes.tableCell}>\r\n                        {email}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ color: theme.palette.common.black }}\r\n                      >\r\n                        {role}\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"left\" className={classes.tableCell}>\r\n                        <Grid\r\n                          style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"space-around\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            disableRipple\r\n                            className={`${classes.button} ${classes.greenBtn}`}\r\n                            endIcon={<EditIcon style={{ color: theme.palette.common.green }} />}\r\n                          >\r\n                            Edit Admin\r\n                          </Button>\r\n                        </Grid>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              )\r\n            </EnhancedTable>\r\n          ) : (\r\n            <NoData />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <Modals isOpen={isOpen} title=\"Filter\" rowSpacing={5} handleClose={handleDialogClose}>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={onSubmit}\r\n          validateOnBlur={false}\r\n          validationSchema={validationSchema}\r\n          validateOnChange={false}\r\n          validateOnMount={false}\r\n        >\r\n          {({ isSubmitting, isValid, dirty }) => {\r\n            return (\r\n              <Form style={{ marginTop: \"3rem\" }}>\r\n                <Grid item container direction=\"column\">\r\n                  <Grid item container spacing={2}>\r\n                    <Grid item xs={6} marginBottom={4}>\r\n                      <FormikControl\r\n                        control=\"input\"\r\n                        name=\"email\"\r\n                        label=\"Admin Email\"\r\n                        placeholder=\"Enter Admin Email\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <FormikControl\r\n                        control=\"select\"\r\n                        name=\"role\"\r\n                        label=\"Role\"\r\n                        options={specializations}\r\n                        placeholder=\"Select Role\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item container xs={12} marginTop={30}>\r\n                  <CustomButton\r\n                    title=\"Apply Filter\"\r\n                    width=\"100%\"\r\n                    isSubmitting={isSubmitting}\r\n                    disabled={!(dirty || isValid)}\r\n                    type={buttonType}\r\n                  />\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modals>\r\n\r\n      <Modals\r\n        isOpen={isAdmin}\r\n        title=\"Add Admin\"\r\n        rowSpacing={5}\r\n        height=\"auto\"\r\n        handleClose={handleAdminClose}\r\n      >\r\n        <Formik\r\n          initialValues={initialValues1}\r\n          onSubmit={onSubmit1}\r\n          validationSchema={validationSchema1}\r\n          validateOnChange={false}\r\n          validateOnMount={false}\r\n          validateOnBlur={false}\r\n        >\r\n          {({ isValid, isSubmitting, dirty }) => {\r\n            return (\r\n              <Form style={{ marginTop: \"3rem\" }}>\r\n                <Grid item container direction=\"column\" gap={2}>\r\n                  <Grid item>\r\n                    <FormikControl\r\n                      control=\"input\"\r\n                      label=\"Email\"\r\n                      id=\"email\"\r\n                      placeholder=\"Enter email\"\r\n                      name=\"email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormikControl\r\n                      control=\"input\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Enter Password\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item container xs={12} marginTop={5}>\r\n                    <CustomButton\r\n                      title=\"Add Admin\"\r\n                      width=\"100%\"\r\n                      isSubmitting={isSubmitting}\r\n                      disabled={!(dirty || isValid)}\r\n                      type={buttonType}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modals>\r\n    </>\r\n  );\r\n};\r\nAdministrator.propTypes = {\r\n  selectedMenu: PropTypes.number.isRequired,\r\n  selectedSubMenu: PropTypes.number.isRequired,\r\n  setSelectedMenu: PropTypes.func.isRequired,\r\n  setSelectedSubMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Administrator;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\Button.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\CaseNotes.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Chat.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\CircularChart.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Consultations.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\CreateEmail.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Finance.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Financetable.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Email.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HCPChat.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HcpConsultations.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HcpEarnings.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HcpProfile.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HcpPatients.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Hcps.js",["610"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Loader from \"components/Utilities/Loader\";\r\nimport displayPhoto from \"assets/images/avatar.svg\";\r\nimport NoData from \"components/layouts/NoData\";\r\nimport FormikControl from \"components/validation/FormikControl\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { FilterList, Search, Modals, CustomButton } from \"components/Utilities\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { hcpsHeadCells } from \"components/Utilities/tableHeaders\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { Grid, TableRow, TableCell, Button, Checkbox, Chip, Avatar } from \"@mui/material\";\r\nimport { getDoctorsProfile } from \"components/graphQL/useQuery\";\r\nimport { createDOctorProfile } from \"components/graphQL/Mutation\";\r\nimport { timeConverter } from \"components/Utilities/Time\";\r\n\r\n// const statusType = [\"Active\", \"Blocked\"];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  filterBtnGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      marginRight: \"3rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"0.5rem\",\r\n      maxWidth: \"12rem\",\r\n      fontSize: \"1rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \".85rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".2rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.25rem !important\",\r\n      height: \"2.7rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n\r\n  searchFilterBtn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      background: theme.palette.common.black,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  uploadBtn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      background: \"#f2f2f2\",\r\n      boxShadow: \"none\",\r\n      color: theme.palette.common.black,\r\n\r\n      \"&:hover\": {\r\n        background: \"#f2f3f3\",\r\n        boxShadow: \"none\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        boxShadow: \"none\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Hcps = ({ setSelectedSubMenu, setSelectedHcpMenu }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [pageInfo, setPageInfo] = useState([]);\r\n  const [rowsPerPage, setRowsPerPage] = useState(0);\r\n  const cadre = [\r\n    { key: \"1\", value: \"1\" },\r\n    { key: \"2\", value: \"2\" },\r\n    { key: \"3\", value: \"3\" },\r\n    { key: \"4\", value: \"4\" },\r\n    { key: \"5\", value: \"5\" },\r\n  ];\r\n  const buttonType = {\r\n    background: theme.palette.common.black,\r\n    hover: theme.palette.primary.main,\r\n    active: theme.palette.primary.dark,\r\n  };\r\n  const { data, error, loading, refetch, fetchMore } = useQuery(getDoctorsProfile, {\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n  //const offset =\r\n  const fetchMoreFunc = (e, newPage) => {\r\n    fetchMore({\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  const onChange = async (e) => {\r\n    setSearchHcp(e);\r\n    if (e == \"\") {\r\n      refetch();\r\n    } else refetch({ dociId: `HEALA-${e.toUpperCase()}` });\r\n  };\r\n  const [profiles, setProfiles] = useState(\"\");\r\n  useEffect(() => {\r\n    if (data) {\r\n      setProfiles(data.doctorProfiles.profile);\r\n      setPageInfo(data.doctorProfiles.pageInfo);\r\n    }\r\n  }, [data]);\r\n\r\n  const [searchHcp, setSearchHcp] = useState(\"\");\r\n  const [openHcpFilter, setOpenHcpFilter] = useState(false);\r\n  const [openAddHcp, setOpenAddHcp] = useState(false);\r\n\r\n  const initialValues1 = {\r\n    hospital: \"\",\r\n    specialization: \"\",\r\n    phone: \"\",\r\n    cadre: \"\",\r\n  };\r\n\r\n  const validationSchema1 = Yup.object({\r\n    hospital: Yup.string(\"Enter your hospital\"),\r\n    specialization: Yup.string(\"Enter your specialization\"),\r\n    phone: Yup.number(\"Enter a valid email\").typeError(\"Enter a current Number\"),\r\n    cadre: Yup.string(\"Enter your Cadre\"),\r\n  });\r\n  const onSubmit1 = async (values) => {\r\n    const { specialization } = values;\r\n    await refetch({\r\n      specialization,\r\n    });\r\n    setOpenHcpFilter(false);\r\n  };\r\n  const onSubmit = async (values) => {\r\n    const {\r\n      createdAt,\r\n      updatedAt,\r\n      firstName,\r\n      lastName,\r\n      gender,\r\n      phone,\r\n      email,\r\n      hospital,\r\n      dociId,\r\n      specialization,\r\n      dob,\r\n      cadre,\r\n      image,\r\n    } = values;\r\n    const correctDOB = timeConverter(dob);\r\n    await createDoc({\r\n      variables: {\r\n        dociId,\r\n        createdAt,\r\n        updatedAt,\r\n        firstName,\r\n        lastName,\r\n        gender,\r\n        phoneNumber: phone,\r\n        email,\r\n        hospital,\r\n        specialization,\r\n        dob: correctDOB,\r\n        cadre,\r\n        image,\r\n        providerId: \"61db6f8968b248001aec4fcb\",\r\n      },\r\n      refetchQueries: [{ query: getDoctorsProfile }],\r\n    });\r\n    setOpenAddHcp(false);\r\n  };\r\n  const specializations = [\r\n    { key: \"diagnostics\", value: \"diagnostics\" },\r\n    { key: \"pharmacy\", value: \"pharmacy\" },\r\n  ];\r\n\r\n  const gender = [\r\n    { key: \"Male\", value: \"Male\" },\r\n    { key: \"Female\", value: \"Female\" },\r\n  ];\r\n\r\n  const initialValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    specialization: \"\",\r\n    image: null,\r\n    cadre: \"\",\r\n    gender: \"\",\r\n    hospital: \"\",\r\n    phone: \"\",\r\n    dob: null,\r\n    dociId: \"\",\r\n  };\r\n  const validationSchema = Yup.object({\r\n    firstName: Yup.string(\"Enter your firstName\").required(\"firstName is required\"),\r\n    hospital: Yup.string(\"Enter your hosptial\").required(\"hospital is required\"),\r\n    dob: Yup.date(\"required\").typeError(\" Enter a valid DOB\").required(\" DOB required\"),\r\n    dociId: Yup.string(\"Enter dociId\").required(\"DociId required\"),\r\n    gender: Yup.string(\"select your Gender\").required(\"Select a gender\"),\r\n    phone: Yup.number(\"Enter your Phone Number\")\r\n      .typeError(\" Enter a valid phone number\")\r\n      .min(11, \"min value is  11 digits\")\r\n      .required(\"Phone number is required\"),\r\n    lastName: Yup.string(\"Enter your lastName\").required(\"LastName is required\"),\r\n    image: Yup.string(\"Upload a single Image\")\r\n      .typeError(\"Pick correct image\")\r\n      .required(\"Image is required\"),\r\n    specialization: Yup.string(\"select your Specialization\").required(\"Specialization is required\"),\r\n    cadre: Yup.string(\"select your Cadre\").required(\"Cadre is required\"),\r\n  });\r\n  const [createDoc] = useMutation(createDOctorProfile);\r\n\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n  const { page, totalPages, hasNextPage, hasPrevPage, limit, totalDocs } = pageInfo;\r\n  const { setSelectedRows } = useActions();\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <Grid container direction=\"column\" gap={2} flexWrap=\"nowrap\" height=\"100%\">\r\n      <Grid item container>\r\n        <Grid item className={classes.searchGrid}>\r\n          <Search\r\n            value={searchHcp}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            placeholder=\"Type to search Doctors by Heala ID e.g AJV9WVIP6M\"\r\n            height=\"5rem\"\r\n          />\r\n        </Grid>\r\n        <Grid item className={classes.filterBtnGrid}>\r\n          <FilterList onClick={() => setOpenHcpFilter(true)} title=\"Filter Doctors\" />\r\n        </Grid>\r\n        <Grid item>\r\n          <CustomButton\r\n            endIcon={<AddIcon />}\r\n            title=\"Add Doctor\"\r\n            type={buttonType}\r\n            onClick={() => setOpenAddHcp(true)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item container height=\"100%\" direction=\"column\">\r\n        {profiles.length > 0 ? (\r\n          <EnhancedTable\r\n            headCells={hcpsHeadCells}\r\n            rows={profiles}\r\n            paginationLabel=\"Doctors per page\"\r\n            page={page}\r\n            limit={limit}\r\n            totalPages={totalPages}\r\n            totalDocs={totalDocs}\r\n            rowsPerPage={rowsPerPage}\r\n            setRowsPerPage={setRowsPerPage}\r\n            hasNextPage={hasNextPage}\r\n            hasPrevPage={hasPrevPage}\r\n            handleChangePage={fetchMoreFunc}\r\n            hasCheckbox={true}\r\n          >\r\n            {profiles\r\n              // .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => {\r\n                const {\r\n                  _id,\r\n                  dociId,\r\n                  firstName,\r\n                  hospital,\r\n                  status,\r\n                  specialization,\r\n                  consultations,\r\n                  picture,\r\n                  lastName,\r\n                } = row;\r\n                const isItemSelected = isSelected(_id, selectedRows);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={_id}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onClick={() => handleSelectedRows(_id, selectedRows, setSelectedRows)}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.grey, minWidth: \"10rem\" }}\r\n                    >\r\n                      {dociId && dociId.split(\"-\")[1]}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <div\r\n                        style={{\r\n                          height: \"100%\",\r\n                          display: \"flex\",\r\n                          alignItems: \"left\",\r\n                        }}\r\n                      >\r\n                        <span style={{ marginRight: \"1rem\" }}>\r\n                          <Avatar\r\n                            alt={`Display Photo of ${firstName}`}\r\n                            src={picture ? picture : displayPhoto}\r\n                            sx={{ width: 24, height: 24 }}\r\n                          />\r\n                        </span>\r\n                        <span style={{ fontSize: \"1.25rem\" }}>\r\n                          {firstName} {lastName}\r\n                        </span>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.grey }}\r\n                    >\r\n                      {specialization}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      {consultations ? consultations : 0}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.grey }}\r\n                    >\r\n                      {hospital ? hospital : \"No Hospital\"}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <Chip\r\n                        label={status ? status : \"No Status\"}\r\n                        className={classes.badge}\r\n                        style={{\r\n                          background:\r\n                            status === \"Active\"\r\n                              ? theme.palette.common.lightGreen\r\n                              : theme.palette.common.lightRed,\r\n                          color:\r\n                            status === \"Active\"\r\n                              ? theme.palette.common.green\r\n                              : theme.palette.common.red,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                        component={Link}\r\n                        to={`hcps/${_id}`}\r\n                        endIcon={<ArrowForwardIosIcon />}\r\n                        onClick={() => {\r\n                          setSelectedSubMenu(3);\r\n                          setSelectedHcpMenu(0);\r\n                        }}\r\n                      >\r\n                        View Doctor\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </EnhancedTable>\r\n        ) : (\r\n          <NoData />\r\n        )}\r\n      </Grid>\r\n      {/* Filter Modal */}\r\n      <Modals\r\n        isOpen={openHcpFilter}\r\n        title=\"Filter\"\r\n        rowSpacing={5}\r\n        handleClose={() => setOpenHcpFilter(false)}\r\n      >\r\n        <Formik\r\n          initialValues={initialValues1}\r\n          onSubmit={onSubmit1}\r\n          validationSchema={validationSchema1}\r\n          validateOnChange={false}\r\n          validateOnMount={false}\r\n          validateOnBlur={false}\r\n        >\r\n          {({ isSubmitting, isValid, dirty }) => {\r\n            return (\r\n              <Form style={{ marginTop: \"3rem\" }}>\r\n                <Grid item container direction=\"column\" gap={1}>\r\n                  <Grid item container rowSpacing={3}>\r\n                    <Grid item container>\r\n                      <FormikControl\r\n                        control=\"select\"\r\n                        options={specializations}\r\n                        name=\"specialization\"\r\n                        label=\"Specialization\"\r\n                        placeholder=\"Select Specialization\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item marginTop={3}>\r\n                  <CustomButton\r\n                    title=\"Apply Filter\"\r\n                    width=\"100%\"\r\n                    type={buttonType}\r\n                    isSubmitting={isSubmitting}\r\n                    disabled={!(dirty || isValid)}\r\n                  />\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modals>\r\n      {/* ADD Doctor MODAL */}\r\n      <Modals\r\n        isOpen={openAddHcp}\r\n        title=\"Add Doctor\"\r\n        rowSpacing={5}\r\n        height=\"auto\"\r\n        handleClose={() => setOpenAddHcp(false)}\r\n      >\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={onSubmit}\r\n          validationSchema={validationSchema}\r\n          validateOnChange={false}\r\n          validateOnMount={false}\r\n          validateOnBlur={false}\r\n        >\r\n          {({ isSubmitting, dirty, isValid, setFieldValue, setValues }) => {\r\n            return (\r\n              <Form style={{ marginTop: \"1rem\" }}>\r\n                <Grid container direction=\"column\" gap={2}>\r\n                  <Grid item container direction=\"column\" gap={1}>\r\n                    <Grid item container>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item md>\r\n                          <FormikControl\r\n                            control=\"input\"\r\n                            label=\"First Name\"\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            placeholder=\"Enter first name\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item md>\r\n                          <FormikControl\r\n                            control=\"input\"\r\n                            label=\"Last Name\"\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            placeholder=\"Enter last name\"\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item container direction=\"column\" gap={2}>\r\n                      <Grid item container>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item md>\r\n                            <FormikControl\r\n                              control=\"date\"\r\n                              name=\"dob\"\r\n                              label=\"DOB\"\r\n                              setFieldValue={setFieldValue}\r\n                              setValues={setValues}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item md>\r\n                            <Grid container direction=\"column\">\r\n                              <FormikControl\r\n                                control=\"select\"\r\n                                options={specializations}\r\n                                name=\"specialization\"\r\n                                label=\"Specialization\"\r\n                                placeholder=\"Specialization\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item container direction=\"column\" gap={2}>\r\n                    <Grid item container>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item md>\r\n                          <FormikControl\r\n                            control=\"select\"\r\n                            label=\"Gender\"\r\n                            id=\"gender\"\r\n                            name=\"gender\"\r\n                            options={gender}\r\n                            placeholder=\"Gender\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item md>\r\n                          <FormikControl\r\n                            control=\"input\"\r\n                            label=\"Phone Number\"\r\n                            id=\"phone\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter last Phone number\"\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item container direction=\"column\" gap={2}>\r\n                      <Grid item container>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item md>\r\n                            <FormikControl\r\n                              control=\"input\"\r\n                              label=\"Hospital\"\r\n                              id=\"hospital\"\r\n                              name=\"hospital\"\r\n                              placeholder=\"Enter hospital Name\"\r\n                            />\r\n                          </Grid>\r\n                          <Grid item md>\r\n                            <Grid container direction=\"column\">\r\n                              <FormikControl\r\n                                control=\"select\"\r\n                                options={cadre}\r\n                                name=\"cadre\"\r\n                                label=\"Cadre\"\r\n                                placeholder=\"Select Cadre\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item container spacing={2} alignItems=\"center\">\r\n                    <Grid item container md>\r\n                      <FormikControl\r\n                        control=\"file\"\r\n                        name=\"image\"\r\n                        label=\"Profile Pics\"\r\n                        setFieldValue={setFieldValue}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md>\r\n                      <FormikControl\r\n                        control=\"input\"\r\n                        label=\"Heala-ID\"\r\n                        id=\"dociId\"\r\n                        name=\"dociId\"\r\n                        placeholder=\"Enter Heala ID\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item container>\r\n                    <CustomButton\r\n                      title=\"Add Doctor\"\r\n                      width=\"100%\"\r\n                      type={buttonType}\r\n                      isSubmitting={isSubmitting}\r\n                      disabled={!(dirty || isValid)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modals>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nHcps.propTypes = {\r\n  setSelectedSubMenu: PropTypes.func.isRequired,\r\n  setSelectedHcpMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Hcps;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Management.js",["611"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Button, TableRow, TableCell, Checkbox, Chip } from \"@mui/material\";\r\nimport Loader from \"components/Utilities/Loader\";\r\nimport NoData from \"components/layouts/NoData\";\r\nimport PropTypes from \"prop-types\";\r\nimport Search from \"components/Utilities/Search\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { roleHeader } from \"components/Utilities/tableHeaders\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport Modals from \"components/Utilities/Modal\";\r\nimport { RoleModal } from \"components/modals/RoleModal\";\r\nimport PreviousButton from \"components/Utilities/PreviousButton\";\r\nimport DeleteOrDisable from \"components/modals/DeleteOrDisable\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { getRoles } from \"components/graphQL/useQuery\";\r\nimport { deleteRole } from \"components/graphQL/Mutation\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  \"&.makeStyles-tableHeaderCell-27.MuiTableCell-root\": {\r\n    background: \"red !important\",\r\n    textAlign: \"center\",\r\n  },\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"15rem\",\r\n      fontSize: \"1.3rem\",\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  tableBtn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      height: \"3rem\",\r\n      width: \"100% !important\",\r\n      fontSize: \"1.25rem\",\r\n      borderRadius: \"2rem\",\r\n      boxShadow: \"none\",\r\n\r\n      \"&:hover\": {\r\n        \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n\r\n      \"&:active\": {\r\n        boxShadow: \"none\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.5rem\",\r\n      },\r\n    },\r\n  },\r\n  redBtn: {\r\n    \"&.MuiButton-root\": {\r\n      background: theme.palette.common.lightRed,\r\n      color: theme.palette.common.red,\r\n      width: \"100%\",\r\n\r\n      \"&:hover\": {\r\n        background: theme.palette.error.light,\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n  greenBtn: {\r\n    \"&.MuiButton-root\": {\r\n      background: theme.palette.common.lightGreen,\r\n      color: theme.palette.common.green,\r\n\r\n      \"&:hover\": {\r\n        background: theme.palette.success.light,\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n  tableCell: {\r\n    \"&.css-1tykg82-MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n      textAlign: \"center !important\",\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n    modal: {\r\n      background: \"red !important\",\r\n      \"& > * \": {\r\n        padding: \"2rem 1rem\",\r\n      },\r\n    },\r\n    \".css-11lq3yg-MuiGrid-root\": {\r\n      background: \"red\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Management = ({ setSelectedSubMenu, setSelectedManagementMenu, setSelectedScopedMenu }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [pageInfo, setPageInfo] = useState([]);\r\n  const [deleteRoles] = useMutation(deleteRole);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [deleteModal, setdeleteModal] = useState(false);\r\n  const [searchMail, setSearchMail] = useState(\"\");\r\n  // const [edit, setEdit] = useState(false);\r\n  const [id, setId] = useState(false);\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const handleDialogClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n  const handleDeleteOpenDialog = (id) => {\r\n    setdeleteModal(true);\r\n    setId(id);\r\n  };\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n\r\n  const onConfirm = async () => {\r\n    deleteRoles({ variables: { id }, refetchQueries: [{ query: getRoles }] });\r\n  };\r\n\r\n  const [rolesManagements, setRolesManagements] = useState([]);\r\n  const { loading, data, error, refetch } = useQuery(getRoles, {\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n  const onChange = async (e) => {\r\n    setSearchMail(e);\r\n    if (e == \"\") {\r\n      refetch();\r\n    } else refetch({ name: e });\r\n  };\r\n  useEffect(() => {\r\n    if (data) {\r\n      setRolesManagements(data.getRoles.role);\r\n      setPageInfo(data.getRoles.pageInfo);\r\n    }\r\n  }, [data, rolesManagements]);\r\n  const buttonType = {\r\n    background: theme.palette.common.black,\r\n    hover: theme.palette.primary.main,\r\n    active: theme.palette.primary.dark,\r\n  };\r\n  const checkbox = {\r\n    \"permission 1\": true,\r\n    \"permission 2\": true,\r\n    \"permission 3\": false,\r\n    \"permission 4\": true,\r\n  };\r\n  const { page, totalPages, hasNextPage, hasPrevPage, limit, totalDocs } = pageInfo;\r\n  const [rowsPerPage, setRowsPerPage] = useState(0);\r\n  const fetchMoreFunc = (_, newPage) => {\r\n    refetch({ page: newPage });\r\n  };\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" gap={2}>\r\n        <Grid item>\r\n          <PreviousButton\r\n            path=\"/settings\"\r\n            onClick={() => {\r\n              setSelectedSubMenu(12);\r\n              setSelectedManagementMenu(0);\r\n            }}\r\n          />\r\n        </Grid>\r\n        {rolesManagements.length > 0 ? (\r\n          <>\r\n            <Grid item container>\r\n              <Grid item className={classes.searchGrid}>\r\n                <Search\r\n                  value={searchMail}\r\n                  onChange={(e) => onChange(e.target.value)}\r\n                  placeholder=\"Type to search roles by role...\"\r\n                  height=\"5rem\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <CustomButton\r\n                  endIcon={<AddIcon />}\r\n                  title=\"Add new role\"\r\n                  type={buttonType}\r\n                  onClick={handleDialogOpen}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item container>\r\n              <EnhancedTable\r\n                headCells={roleHeader}\r\n                rows={rolesManagements}\r\n                paginationLabel=\"subscription per page\"\r\n                page={+page}\r\n                limit={+limit}\r\n                totalPages={totalPages}\r\n                totalDocs={totalDocs}\r\n                rowsPerPage={rowsPerPage}\r\n                setRowsPerPage={setRowsPerPage}\r\n                hasNextPage={hasNextPage}\r\n                hasPrevPage={hasPrevPage}\r\n                handleChangePage={fetchMoreFunc}\r\n                hasCheckbox={true}\r\n              >\r\n                {rolesManagements\r\n                  // .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected(row._id, selectedRows);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n                    let newData;\r\n                    if (row.permissions) {\r\n                      const data = [...new Set(row.permissions.map((i) => i.split(\":\")[0]))];\r\n                      const dataLength = data.length - 5;\r\n                      newData = [...data.slice(0, 5), dataLength ? `+${dataLength}` : null].filter(\r\n                        (i) => i !== null,\r\n                      );\r\n                    }\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={row._id}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            onClick={() =>\r\n                              handleSelectedRows(row.id, selectedRows, setSelectedRows)\r\n                            }\r\n                            color=\"primary\"\r\n                            checked={isItemSelected}\r\n                            inputProps={{\r\n                              \"aria-labelledby\": labelId,\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          align=\"left\"\r\n                          className={classes.tableCell}\r\n                          style={{ color: theme.palette.common.black, minWidth: \"10rem\" }}\r\n                        >\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          align=\"center\"\r\n                          className={classes.tableCell}\r\n                          style={{ color: theme.palette.common.black }}\r\n                        >\r\n                          <Grid container justifyContent=\"flex-start\" gap={1} alignItems=\"center\">\r\n                            {newData &&\r\n                              newData.map((i) => {\r\n                                return <Chip label={i} key={i} className={classes.badge} />;\r\n                              })}\r\n                          </Grid>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\" className={classes.tableCell}>\r\n                          <div\r\n                            style={{\r\n                              height: \"100%\",\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"space-between\",\r\n                              minWidth: \"25rem\",\r\n                              gap: \"1rem\",\r\n                            }}\r\n                          >\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              className={`${classes.tableBtn} ${classes.greenBtn}`}\r\n                              component={Link}\r\n                              to={`/settings/management/${row._id}`}\r\n                              endIcon={<EditIcon color=\"success\" />}\r\n                              onClick={() => {\r\n                                setSelectedSubMenu(12);\r\n                                setSelectedManagementMenu(1);\r\n                              }}\r\n                            >\r\n                              Edit role\r\n                            </Button>\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              disableRipple\r\n                              className={`${classes.tableBtn} ${classes.redBtn}`}\r\n                              onClick={() => handleDeleteOpenDialog(row._id)}\r\n                              endIcon={<DeleteIcon color=\"error\" />}\r\n                            >\r\n                              Delete role\r\n                            </Button>\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </EnhancedTable>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <NoData />\r\n        )}\r\n      </Grid>\r\n      {/* // modal */}\r\n      <Modals isOpen={isOpen} title=\"Add new role\" handleClose={handleDialogClose}>\r\n        <RoleModal handleDialogClose={handleDialogClose} type=\"add\" checkbox={checkbox} />\r\n      </Modals>\r\n\r\n      {/* Edit */}\r\n      {/* <Modals isOpen={edit} title=\"Edit role\" handleClose={handleEditDialogCloses}>\r\n        <RoleModal handleDialogClose={handleEditDialogCloses} type=\"edit\" checkbox={checkbox1} />\r\n      </Modals> */}\r\n      {/* delete modal */}\r\n      <DeleteOrDisable\r\n        open={deleteModal}\r\n        setOpen={setdeleteModal}\r\n        title=\"Delete Role\"\r\n        onConfirm={onConfirm}\r\n        confirmationMsg=\"delete role\"\r\n        btnValue=\"Delete\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Management;\r\n\r\nManagement.propTypes = {\r\n  setSelectedSubMenu: PropTypes.func.isRequired,\r\n  setSelectedManagementMenu: PropTypes.func.isRequired,\r\n  setSelectedScopedMenu: PropTypes.func.isRequired,\r\n};\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\MedicalRecords.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Medications.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Messages.js",["612"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport NoData from \"components/layouts/NoData\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Loader from \"components/Utilities/Loader\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { dateMoment, timeMoment } from \"components/Utilities/Time\";\r\nimport Search from \"components/Utilities/Search\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { messagesHeadCells } from \"components/Utilities/tableHeaders\";\r\nimport { Avatar, Button, Checkbox, Grid } from \"@mui/material\";\r\nimport displayPhoto from \"assets/images/avatar.svg\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { getMessage } from \"components/graphQL/useQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  actionBtnGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      marginRight: \"1.5rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"0.5rem\",\r\n      maxWidth: \"10rem\",\r\n      fontSize: \".85rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"0.85rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".2rem\",\r\n      },\r\n    },\r\n  },\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.25rem !important\",\r\n      height: \"2.7rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n  tableBtn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      height: \"3rem\",\r\n      fontSize: \"1.25rem\",\r\n      borderRadius: \"2rem\",\r\n      boxShadow: \"none\",\r\n\r\n      \"&:hover\": {\r\n        \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n\r\n      \"&:active\": {\r\n        boxShadow: \"none\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.5rem\",\r\n      },\r\n    },\r\n  },\r\n\r\n  redBtn: {\r\n    \"&.MuiButton-root\": {\r\n      background: theme.palette.common.lightRed,\r\n      color: theme.palette.common.red,\r\n\r\n      \"&:hover\": {\r\n        background: theme.palette.error.light,\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Messages = ({ selectedMenu, selectedSubMenu, setSelectedMenu, setSelectedSubMenu }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [pageInfo, setPageInfo] = useState([]);\r\n  const greenButtonType = {\r\n    background: theme.palette.primary.main,\r\n    hover: theme.palette.primary.light,\r\n    active: theme.palette.primary.dark,\r\n  };\r\n\r\n  const [searchMessage, setSearchMessage] = useState(\"\");\r\n  const [message, setMessage] = useState([]);\r\n  const { loading, data, error, refetch } = useQuery(getMessage, {\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n  const onChange = async (e) => {\r\n    setSearchMessage(e);\r\n    if (e == \"\") {\r\n      refetch();\r\n    } else refetch({ recipient: e });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMessage(data.getMessages.messages);\r\n      setPageInfo(data.getMessages.pageInfo);\r\n    }\r\n  }, [message, data]);\r\n  const fetchMoreFunc = (e, newPage) => {\r\n    refetch({ page: newPage });\r\n  };\r\n\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n\r\n  useEffect(() => {\r\n    setSelectedMenu(5);\r\n    setSelectedSubMenu(0);\r\n    //   eslint-disable-next-line\r\n  }, [selectedMenu, selectedSubMenu]);\r\n  const { page, totalPages, hasNextPage, hasPrevPage, limit, totalDocs } = pageInfo;\r\n  const [rowsPerPage, setRowsPerPage] = useState(0);\r\n  if (error) return <NoData error={error} />;\r\n  if (loading) return <Loader />;\r\n  else {\r\n    return (\r\n      <Grid containerdirection=\"column\" gap={2} flexWrap=\"nowrap\" height=\"100%\">\r\n        <Grid item container style={{ paddingBottom: \"5rem\" }}>\r\n          <Grid item className={classes.searchGrid}>\r\n            <Search\r\n              value={searchMessage}\r\n              onChange={(e) => onChange(e.target.value)}\r\n              placeholder=\"Type to search Messages by recipient e.g 61e5d7ebbe7d97001467f6fe\"\r\n              height=\"5rem\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <CustomButton\r\n              endIcon={<AddIcon />}\r\n              title=\"New Message\"\r\n              type={greenButtonType}\r\n              component={Link}\r\n              to=\"/messages/create-message\"\r\n              onClick={() => setSelectedSubMenu(6)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container height=\"100%\" direction=\"column\">\r\n          {message.length > 0 ? (\r\n            <EnhancedTable\r\n              headCells={messagesHeadCells}\r\n              rows={message}\r\n              page={page}\r\n              paginationLabel=\"Message per page\"\r\n              limit={limit}\r\n              totalPages={totalPages}\r\n              totalDocs={totalDocs}\r\n              rowsPerPage={rowsPerPage}\r\n              setRowsPerPage={setRowsPerPage}\r\n              hasNextPage={hasNextPage}\r\n              hasPrevPage={hasPrevPage}\r\n              handleChangePage={fetchMoreFunc}\r\n              hasCheckbox={true}\r\n            >\r\n              {message\r\n                // .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const { recipient, subject, createdAt, _id } = row;\r\n                  const isItemSelected = isSelected(_id, selectedRows);\r\n\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={_id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          onClick={() => handleSelectedRows(_id, selectedRows, setSelectedRows)}\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            \"aria-labelledby\": labelId,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ maxWidth: \"20rem\" }}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\",\r\n                          }}\r\n                        >\r\n                          <span style={{ marginRight: \"1rem\" }}>\r\n                            <Avatar\r\n                              alt={`Display Photo of ${recipient}`}\r\n                              src={displayPhoto}\r\n                              sx={{ width: 24, height: 24 }}\r\n                            />\r\n                          </span>\r\n                          <span style={{ fontSize: \"1.25rem\" }}>{recipient}</span>\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ maxWidth: \"15rem\" }}\r\n                      >\r\n                        {subject}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ color: theme.palette.common.grey }}\r\n                      >\r\n                        {dateMoment(createdAt)}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ color: theme.palette.common.grey }}\r\n                      >\r\n                        {timeMoment(createdAt)}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          className={classes.button}\r\n                          component={Link}\r\n                          to={`messages/${_id}`}\r\n                          endIcon={<ArrowForwardIosIcon />}\r\n                          onClick={() => setSelectedSubMenu(6)}\r\n                        >\r\n                          View Message\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </EnhancedTable>\r\n          ) : (\r\n            <NoData />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n};\r\n\r\nMessages.propTypes = {\r\n  selectedMenu: PropTypes.number.isRequired,\r\n  selectedSubMenu: PropTypes.number.isRequired,\r\n  setSelectedMenu: PropTypes.func.isRequired,\r\n  setSelectedSubMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Messages;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\PatientAppointment.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\PatientProfile.js",["613","614","615"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Loader from \"components/Utilities/Loader\";\r\nimport Modals from \"components/Utilities/Modal\";\r\nimport PropTypes from \"prop-types\";\r\nimport { dateMoment } from \"components/Utilities/Time\";\r\nimport NoData from \"components/layouts/NoData\";\r\nimport { Typography, Grid, Chip } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\nimport PreviousButton from \"components/Utilities/PreviousButton\";\r\nimport DisplayProfile from \"components/Utilities/DisplayProfile\";\r\nimport displayPhoto from \"assets/images/avatar.svg\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { IoCopy } from \"react-icons/io5\";\r\nimport PersonRemoveIcon from \"@mui/icons-material/PersonRemove\";\r\nimport TrendingUpIcon from \"@mui/icons-material/TrendingUp\";\r\nimport ReferPatient from \"components/modals/ReferPatient\";\r\nimport DisablePatient from \"components/modals/DeleteOrDisable\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { deleteProfile } from \"components/graphQL/Mutation\";\r\nimport { getPatients, getProfile, verifiedEmail } from \"components/graphQL/useQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridsWrapper: {\r\n    background: \"#fff\",\r\n    borderRadius: \"1rem\",\r\n    padding: \"1rem\",\r\n    boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.2)\",\r\n  },\r\n\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.3rem !important\",\r\n      //   height: \"2.7rem\",\r\n      background: theme.palette.common.lightGreen,\r\n      color: theme.palette.common.green,\r\n      borderRadius: \"1.5rem\",\r\n    },\r\n  },\r\n\r\n  cardGrid: {\r\n    background: \"#fff\",\r\n    borderRadius: \"1rem\",\r\n    padding: \"4rem 5rem\",\r\n    height: \"16.1rem\",\r\n    boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.2)\",\r\n  },\r\n\r\n  infoBadge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.25rem\",\r\n      borderRadius: \"1.5rem\",\r\n      color: theme.palette.common.green,\r\n    },\r\n  },\r\n\r\n  link: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    fontSize: \"1.25rem\",\r\n    color: theme.palette.common.green,\r\n    border: `1px solid ${theme.palette.common.lightGrey}`,\r\n    padding: \".75rem\",\r\n    borderRadius: \"1.5rem\",\r\n    textDecoration: \"none\",\r\n  },\r\n\r\n  linkIcon: {\r\n    \"&.MuiSvgIcon-root\": {\r\n      fontSize: \"1.25rem\",\r\n      color: theme.palette.common.green,\r\n      marginLeft: \"1.2rem\",\r\n    },\r\n  },\r\n\r\n  buttonsGridWrapper: {\r\n    marginTop: \"5rem !important\",\r\n    height: \"16.1rem\",\r\n  },\r\n}));\r\n\r\nconst PatientProfile = ({\r\n  chatMediaActive,\r\n  setChatMediaActive,\r\n  setSelectedSubMenu,\r\n  selectedMenu,\r\n}) => {\r\n  const { patientId } = useParams();\r\n  const doci = localStorage.getItem(\"userDociId\");\r\n  const { loading, data, error } = useQuery(getProfile, {\r\n    variables: {\r\n      profileId: patientId,\r\n    },\r\n  });\r\n  const { data: emailStatus, loading: emailLoading } = useQuery(verifiedEmail, {\r\n    variables: {\r\n      dociId: doci,\r\n    },\r\n  });\r\n\r\n  const [disableUser] = useMutation(deleteProfile);\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [patientProfile, setPatientProfile] = useState(\"\");\r\n  const [emailStat, setEmailStat] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (emailStatus) {\r\n      setEmailStat(emailStatus.accounts.data[0].isEmailVerified);\r\n    }\r\n  }, [emailStatus]);\r\n  useEffect(() => {\r\n    if (data) {\r\n      setPatientProfile(data.profile);\r\n    }\r\n  }, [data, patientId]);\r\n\r\n  const handleDialogOpen = () => setIsOpen(true);\r\n  const initialValues = {\r\n    referral: \"\",\r\n    category: \"\",\r\n    textarea: \"\",\r\n  };\r\n\r\n  const handleDialogClose = () => setIsOpen(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const history = useHistory();\r\n  const onConfirm = async () => {\r\n    try {\r\n      await disableUser({ variables: { id: patientId }, refetchQueries: [{ query: getPatients }] });\r\n      history.push(\"/patients\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const [openDisablePatient, setOpenDisablePatient] = useState(false);\r\n  const greenButton = {\r\n    background: theme.palette.success.main,\r\n    hover: theme.palette.success.light,\r\n    active: theme.palette.success.dark,\r\n  };\r\n\r\n  const trasparentButton = {\r\n    background: \"transparent\",\r\n    hover: \"#fafafa\",\r\n    active: \"#f4f4f4\",\r\n  };\r\n  useLayoutEffect(() => {\r\n    setChatMediaActive(false);\r\n\r\n    // eslint-disable-next-line\r\n  }, [chatMediaActive]);\r\n\r\n  if (loading || emailLoading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    dociId,\r\n    status,\r\n    gender,\r\n    image,\r\n    createdAt,\r\n    provider,\r\n    phoneNumber,\r\n    email,\r\n  } = patientProfile;\r\n  return (\r\n    <Grid container direction=\"column\" gap={2}>\r\n      <Grid item>\r\n        <PreviousButton path={`/patients/${patientId}`} />\r\n      </Grid>\r\n      {/* Display photo and profile name grid */}\r\n      <Grid item>\r\n        <DisplayProfile\r\n          fullName={`${firstName} ${lastName}`}\r\n          displayPhoto={image ? image : displayPhoto}\r\n          medicalTitle=\"User ID\"\r\n          statusId={dociId && dociId.split(\"-\")[1]}\r\n          status={status ? status : \"No Value\"}\r\n          chatPath={`/patients/${patientId}/profile/chat`}\r\n          callPath={`/patients/${patientId}/profile/call`}\r\n          videoPath={`/patients/${patientId}/profile/video`}\r\n          setChatMediaActive={setChatMediaActive}\r\n          setSelectedSubMenu={setSelectedSubMenu}\r\n          selectedMenu={selectedMenu}\r\n        />\r\n      </Grid>\r\n      {/* PERSONAL INFO SECTION */}\r\n      <Grid item container justifyContent=\"space-between\" style={{ paddingTop: \"2rem\" }}>\r\n        {/* GENDER GRID */}\r\n        <Grid item md className={classes.cardGrid} style={{ marginRight: \"2rem\" }}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            style={{ height: \"100%\" }}\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Gender</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                variant=\"outlined\"\r\n                label={gender == 0 ? \"Male\" : gender == 1 ? \"Female\" : \"Prefer not to say\"}\r\n                className={classes.infoBadge}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* DATE OF BIRTH GRID */}\r\n        <Grid item md className={classes.cardGrid} style={{ marginLeft: \"2rem\" }}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            style={{ height: \"100%\" }}\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Provider</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                variant=\"outlined\"\r\n                label={provider ? provider : \"No Provider\"}\r\n                className={classes.infoBadge}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item container justifyContent=\"space-between\" style={{ paddingTop: \"2rem\" }}>\r\n        {/* EMAIL ADDRESS GRID */}\r\n        <Grid item md className={classes.cardGrid} style={{ marginRight: \"2rem\" }}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            style={{ height: \"100%\" }}\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Created At</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                variant=\"outlined\"\r\n                label={dateMoment(createdAt)}\r\n                className={classes.infoBadge}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* DATE OF BIRTH GRID */}\r\n        <Grid item md className={classes.cardGrid} style={{ marginLeft: \"2rem\" }}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            style={{ height: \"100%\" }}\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Verified</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                variant=\"outlined\"\r\n                label={emailStat == \"false\" ? \"Not Verified\" : \"Verified\"}\r\n                className={classes.infoBadge}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item container justifyContent=\"space-between\" style={{ paddingTop: \"2rem\" }}>\r\n        {/* EMAIL ADDRESS GRID */}\r\n        <Grid item md className={classes.cardGrid} style={{ marginRight: \"2rem\" }}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            style={{ height: \"100%\" }}\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Email Address</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              {email ? (\r\n                <a href={`mailto:${email}`} className={classes.link}>\r\n                  <span>{email}</span>\r\n                  <ArrowForwardIosIcon className={classes.linkIcon} />\r\n                </a>\r\n              ) : (\r\n                <p className={classes.link}> No Email Provided</p>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* DATE OF BIRTH GRID */}\r\n        <Grid item md className={classes.cardGrid} style={{ marginLeft: \"2rem\" }}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            style={{ height: \"100%\" }}\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Phone Number</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <a href={`tel:+234${phoneNumber}`} className={classes.link}>\r\n                <span>{phoneNumber}</span>\r\n                <IoCopy className={classes.linkIcon} size={12.5} style={{ marginLeft: \"1.2rem\" }} />\r\n              </a>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        className={`${classes.gridsWrapper} ${classes.buttonsGridWrapper}`}\r\n      >\r\n        <Grid item style={{ marginRight: \"2rem\" }}>\r\n          <CustomButton\r\n            endIcon={<PersonRemoveIcon />}\r\n            title=\"Disable Patient\"\r\n            type={trasparentButton}\r\n            textColor={theme.palette.common.red}\r\n            onClick={() => setOpenDisablePatient(true)}\r\n          />\r\n        </Grid>\r\n        <Grid item style={{ marginLeft: \"2rem\" }}>\r\n          <CustomButton\r\n            endIcon={<TrendingUpIcon />}\r\n            title=\"Refer Patient\"\r\n            type={greenButton}\r\n            onClick={handleDialogOpen}\r\n          />\r\n        </Grid>\r\n\r\n        <Modals isOpen={isOpen} title=\"Add Admin\" handleClose={handleDialogClose}>\r\n          <ReferPatient handleDialogClose={handleDialogClose} initialValues={initialValues} />\r\n        </Modals>\r\n\r\n        <DisablePatient\r\n          open={openDisablePatient}\r\n          setOpen={setOpenDisablePatient}\r\n          title=\"Delete Partner\"\r\n          btnValue=\"disable\"\r\n          confirmationMsg=\"disable Patient\"\r\n          onConfirm={onConfirm}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nPatientProfile.propTypes = {\r\n  chatMediaActive: PropTypes.bool,\r\n  setChatMediaActive: PropTypes.func,\r\n  setSelectedSubMenu: PropTypes.func,\r\n  selectedMenu: PropTypes.func,\r\n  setSelectedPatientMenu: PropTypes.func,\r\n  setSelectedScopedMenu: PropTypes.func,\r\n};\r\n\r\nexport default PatientProfile;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Patients.js",["616","617","618","619","620","621","622"],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Payout.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\PendingPayout.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Prescriptions.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ReferralTab.js",["623","624"],"import React, { useState, useEffect } from \"react\";\r\nimport Loader from \"components/Utilities/Loader\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\nimport FormikControl from \"components/validation/FormikControl\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Modals from \"components/Utilities/Modal\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TableRow, Grid, Checkbox, TableCell, Avatar, Button } from \"@mui/material\";\r\nimport { dateMoment } from \"components/Utilities/Time\";\r\nimport Search from \"components/Utilities/Search\";\r\nimport FilterList from \"components/Utilities/FilterList\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { referralHeader } from \"components/Utilities/tableHeaders\";\r\nimport displayPhoto from \"assets/images/avatar.svg\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { getRefferals } from \"components/graphQL/useQuery\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NoData from \"components/layouts/NoData\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  filterBtnGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      marginRight: \"3rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      width: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ReferralTab = ({ setSelectedSubMenu, setSelectedHcpMenu }) => {\r\n  const handleDialogOpen = () => setIsOpen(true);\r\n  const [pageInfo, setPageInfo] = useState([]);\r\n  const theme = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const buttonType = {\r\n    background: theme.palette.common.black,\r\n    hover: theme.palette.primary.main,\r\n    active: theme.palette.primary.dark,\r\n    disabled: theme.palette.common.black,\r\n  };\r\n  const handleDialogClose = () => setIsOpen(false);\r\n  const classes = useStyles();\r\n  const initialValues = {\r\n    specialization: \"\",\r\n    patient: \"\",\r\n    // category: \"\",\r\n    doctor: \"\",\r\n  };\r\n  const specializations = [\r\n    { key: \"Diagonistic\", value: \"diagonistics\" },\r\n    { key: \"Pharmacy\", value: \"Pharmacy\" },\r\n  ];\r\n  const validationSchema = Yup.object({\r\n    doctor: Yup.string(\"Enter Doctor ID\"),\r\n    patient: Yup.string(\"Enter Patient ID\"),\r\n    category: Yup.string(\"Select category\"),\r\n    specialization: Yup.string(\"Select specialization\"),\r\n  });\r\n  const onChange = async (e) => {\r\n    setSearchMail(e);\r\n    if (e == \"\") {\r\n      refetch();\r\n    } else refetch({ id: e });\r\n  };\r\n\r\n  const onSubmit = async (values) => {\r\n    const { doctor, patient, specialization } = values;\r\n    try {\r\n      await refetch({\r\n        doctor,\r\n        patient,\r\n        // category,\r\n        specialization,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    handleDialogClose();\r\n  };\r\n\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n  const [searchMail, setSearchMail] = useState(\"\");\r\n  const { data, loading, error, refetch } = useQuery(getRefferals, {\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n  const [referral, setReferral] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setReferral(data.getReferrals.referral);\r\n      setPageInfo(data.getReferrals.pageInfo);\r\n    }\r\n  }, [data]);\r\n  const fetchMoreFunc = (e, newPage) => {\r\n    refetch({ page: newPage });\r\n  };\r\n  const { page, totalPages, hasNextPage, hasPrevPage, limit, totalDocs } = pageInfo;\r\n  const [rowsPerPage, setRowsPerPage] = useState(0);\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" height=\"100%\" gap={2} flexWrap=\"nowrap\">\r\n        <Grid item container>\r\n          <Grid item className={classes.searchGrid}>\r\n            <Search\r\n              value={searchMail}\r\n              onChange={(e) => onChange(e.target.value)}\r\n              placeholder=\"Type to search referrals by ID e.g 1Ntqaazu...\"\r\n              height=\"5rem\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <FilterList onClick={handleDialogOpen} title=\"Filter by\" />\r\n          </Grid>\r\n        </Grid>\r\n        {referral.length > 0 ? (\r\n          <Grid item container>\r\n            <EnhancedTable\r\n              headCells={referralHeader}\r\n              paginationLabel=\"referral per page\"\r\n              rows={referral}\r\n              page={page}\r\n              limit={limit}\r\n              totalPages={totalPages}\r\n              totalDocs={totalDocs}\r\n              rowsPerPage={rowsPerPage}\r\n              setRowsPerPage={setRowsPerPage}\r\n              hasNextPage={hasNextPage}\r\n              hasPrevPage={hasPrevPage}\r\n              handleChangePage={fetchMoreFunc}\r\n              hasCheckbox={true}\r\n            >\r\n              {referral\r\n                // .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const {\r\n                    _id,\r\n                    createdAt,\r\n                    type,\r\n                    referralId,\r\n                    specialization,\r\n                    testType,\r\n                    doctorData,\r\n                    patientData,\r\n                  } = row;\r\n                  const { firstName, lastName, picture } = doctorData;\r\n                  const {\r\n                    firstName: patientName,\r\n                    lastName: patientLastName,\r\n                    picture: patientImage,\r\n                  } = patientData;\r\n                  const isItemSelected = isSelected(_id, selectedRows);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={_id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          onClick={() => handleSelectedRows(_id, selectedRows, setSelectedRows)}\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            \"aria-labelledby\": labelId,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ color: theme.palette.common.black }}\r\n                      >\r\n                        {dateMoment(createdAt)}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ color: theme.palette.common.black }}\r\n                      >\r\n                        {/* {new Date(updatedAt)} */}\r\n                        {referralId ? referralId : \"No Value\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" className={classes.tableCell}>\r\n                        <div\r\n                          style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <span style={{ marginRight: \"1rem\" }}>\r\n                            <Avatar\r\n                              alt={`image of ${\r\n                                firstName ? firstName : \"placeholder Display Image\"\r\n                              }`}\r\n                              src={picture ? picture : displayPhoto}\r\n                              sx={{ width: 24, height: 24 }}\r\n                            />\r\n                          </span>\r\n                          <span style={{ fontSize: \"1.25rem\" }}>\r\n                            {firstName ? `${firstName} ${lastName}` : \"No Doctor\"}\r\n                          </span>\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" className={classes.tableCell}>\r\n                        <div\r\n                          style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <span style={{ marginRight: \"1rem\" }}>\r\n                            <Avatar\r\n                              alt={`image of ${\r\n                                patientName ? patientName : \"placeholder Display Image\"\r\n                              }`}\r\n                              src={patientImage ? patientImage : displayPhoto}\r\n                              sx={{ width: 24, height: 24 }}\r\n                            />\r\n                          </span>\r\n                          <span style={{ fontSize: \"1.25rem\" }}>\r\n                            {patientName ? `${patientName} ${patientLastName}` : \"No Patient\"}\r\n                          </span>\r\n                        </div>\r\n                      </TableCell>\r\n\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ color: theme.palette.common.black }}\r\n                      >\r\n                        {type}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ color: theme.palette.common.black }}\r\n                      >\r\n                        {type == \"hcp\" ? specialization : testType}\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"left\" className={classes.tableCell}>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          className={classes.button}\r\n                          component={Link}\r\n                          to={`referrals/${_id}`}\r\n                          endIcon={<ArrowForwardIosIcon />}\r\n                          onClick={() => {\r\n                            setSelectedSubMenu(10);\r\n                          }}\r\n                        >\r\n                          View Referral\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <NoData />\r\n        )}\r\n      </Grid>\r\n      <Modals isOpen={isOpen} title=\"Filter\" rowSpacing={5} handleClose={handleDialogClose}>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={onSubmit}\r\n          validateOnBlur={false}\r\n          validationSchema={validationSchema}\r\n          validateOnChange={false}\r\n          validateOnMount={false}\r\n        >\r\n          {({ isSubmitting, isValid, dirty }) => {\r\n            return (\r\n              <Form style={{ marginTop: \"3rem\" }}>\r\n                <Grid item container direction=\"column\">\r\n                  <Grid item>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item md>\r\n                        <FormikControl\r\n                          control=\"select\"\r\n                          options={specializations}\r\n                          name=\"specialization\"\r\n                          label=\"Specialization\"\r\n                          placeholder=\"Select Specialization\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md>\r\n                        <FormikControl\r\n                          control=\"input\"\r\n                          name=\"patient\"\r\n                          label=\"Patient ID\"\r\n                          placeholder=\"Enter Patient ID\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item style={{ marginBottom: \"18rem\", marginTop: \"3rem\" }}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item md>\r\n                        <FormikControl\r\n                          control=\"input\"\r\n                          name=\"doctor\"\r\n                          label=\"Doctor ID\"\r\n                          placeholder=\"Enter Doctor ID\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md>\r\n                        {/* <FormikControl\r\n                          control=\"input\"\r\n                          name=\"doctor\"\r\n                          label=\"Doctor ID\"\r\n                          placeholder=\"Enter Doctor ID\"\r\n                        /> */}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <CustomButton\r\n                      title=\"Apply Filter\"\r\n                      width=\"100%\"\r\n                      type={buttonType}\r\n                      isSubmitting={isSubmitting}\r\n                      disabled={!(dirty || isValid)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modals>\r\n    </>\r\n  );\r\n};\r\n\r\nReferralTab.propTypes = {\r\n  setSelectedSubMenu: PropTypes.func,\r\n  setSelectedHcpMenu: PropTypes.func,\r\n};\r\n\r\nexport default ReferralTab;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\SingleHCP.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\SinglePatient.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Subscription.js",["625"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Checkbox, Button, Alert, TableRow, TableCell } from \"@mui/material\";\r\nimport Loader from \"components/Utilities/Loader\";\r\nimport { formatNumber } from \"components/Utilities/Time\";\r\nimport Search from \"components/Utilities/Search\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { subscriptionHeader } from \"components/Utilities/tableHeaders\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\nimport NoData from \"components/layouts/NoData\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport Modals from \"components/Utilities/Modal\";\r\nimport { SubscriptionModal } from \"components/modals/SubscriptionModal\";\r\nimport DeleteOrDisable from \"components/modals/DeleteOrDisable\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { getPlans } from \"components/graphQL/useQuery\";\r\nimport { DELETE_PLAN } from \"components/graphQL/Mutation\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      flex: 1,\r\n    },\r\n  },\r\n\r\n  FormLabel: {\r\n    \"&.MuiFormLabel-root\": {\r\n      ...theme.typography.FormLabel,\r\n    },\r\n  },\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"15rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  btn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  closeIcon: {\r\n    \"&.MuiSvgIcon-root\": {\r\n      fontSize: \"2rem \",\r\n      cursor: \"pointer\",\r\n\r\n      \"&:hover\": {\r\n        color: theme.palette.common.red,\r\n      },\r\n    },\r\n  },\r\n  tableBtn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      height: \"3rem\",\r\n      fontSize: \"1.25rem\",\r\n      borderRadius: \"2rem\",\r\n      boxShadow: \"none\",\r\n      width: \"12rem\",\r\n\r\n      \"&:hover\": {\r\n        \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n\r\n      \"&:active\": {\r\n        boxShadow: \"none\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.5rem\",\r\n      },\r\n    },\r\n  },\r\n\r\n  redBtn: {\r\n    \"&.MuiButton-root\": {\r\n      background: theme.palette.common.lightRed,\r\n      color: theme.palette.common.red,\r\n\r\n      \"&:hover\": {\r\n        background: theme.palette.error.light,\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n\r\n  greenBtn: {\r\n    \"&.MuiButton-root\": {\r\n      background: theme.palette.common.lightGreen,\r\n      color: theme.palette.common.green,\r\n\r\n      \"&:hover\": {\r\n        background: theme.palette.success.light,\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n  tableCell: {\r\n    \"&.MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n    modal: {\r\n      background: \"red !important\",\r\n      \"& > * \": {\r\n        padding: \"2rem 1rem\",\r\n      },\r\n    },\r\n    \".MuiGrid-root\": {\r\n      background: \"red\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Subscription = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [alert, setAlert] = useState(null);\r\n  const [pageInfo, setPageInfo] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [deletePlan] = useMutation(DELETE_PLAN);\r\n  const [id, setId] = useState(null);\r\n  const [editId, setEditId] = useState(null);\r\n  const [edit, setEdit] = useState(false);\r\n  const [singleData, setSingleData] = useState(\"\");\r\n  const [deleteModal, setdeleteModal] = useState(false);\r\n  const handleDialogOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const handleEditCloseDialog = () => {\r\n    setEdit(false);\r\n  };\r\n  const handleDeleteOpenDialog = (id) => {\r\n    setId(id);\r\n    setdeleteModal(true);\r\n  };\r\n  const handleEditOpenDialog = (id) => {\r\n    setEdit(true);\r\n    setEditId(id);\r\n  };\r\n  const handleDialogClose = async () => {\r\n    setIsOpen(false);\r\n    setEditId(null);\r\n  };\r\n  const onConfirm = async () => {\r\n    try {\r\n      const { message } = await deletePlan({\r\n        variables: { id },\r\n        refetchQueries: [{ query: getPlans }],\r\n      });\r\n      setAlert({\r\n        message: message,\r\n        type: \"success\",\r\n      });\r\n    } catch (error) {\r\n      setAlert({\r\n        message: error.message,\r\n        type: \"danger\",\r\n      });\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  const { page, totalPages, hasNextPage, hasPrevPage, limit, totalDocs } = pageInfo;\r\n  const [rowsPerPage, setRowsPerPage] = useState(0);\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n\r\n  const { setSelectedRows } = useActions();\r\n\r\n  const [searchMail, setSearchMail] = useState(\"\");\r\n\r\n  const buttonType = {\r\n    background: theme.palette.common.black,\r\n    hover: theme.palette.primary.main,\r\n    active: theme.palette.primary.dark,\r\n  };\r\n  const [plan, setPlan] = useState([]);\r\n  const { loading, data, error, refetch } = useQuery(getPlans, {\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n  const onChange = async (e) => {\r\n    setSearchMail(e);\r\n    if (e == \"\") {\r\n      refetch();\r\n    } else refetch({ amount: Number(e) });\r\n  };\r\n  useEffect(() => {\r\n    if (data) {\r\n      setPlan(data.getPlans.plan);\r\n      setPageInfo(data.getPlans.pageInfo);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error.message} />;\r\n  const initialValues = {\r\n    name: \"\",\r\n    amount: \"\",\r\n    description: \"\",\r\n    duration: \"\",\r\n    provider: \"\",\r\n  };\r\n  const fetchMoreFunc = (e, newPage) => {\r\n    refetch({ page: newPage });\r\n  };\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" flexWrap=\"nowrap\" gap={2} height=\"100%\">\r\n        {alert && Object.keys(alert).length > 0 && (\r\n          <Alert\r\n            variant=\"filled\"\r\n            severity={alert.type}\r\n            sx={{ justifyContent: \"center\", width: \"70%\", margin: \"0 auto\" }}\r\n          >\r\n            {alert.message}\r\n          </Alert>\r\n        )}\r\n\r\n        <Grid item container gap={3}>\r\n          <Grid item className={classes.searchGrid}>\r\n            <Search\r\n              value={searchMail}\r\n              onChange={(e) => onChange(e.target.value)}\r\n              placeholder=\"Type to search plans by Amount...\"\r\n              height=\"5rem\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <CustomButton\r\n              endIcon={<AddIcon />}\r\n              title=\"Create new plan\"\r\n              type={buttonType}\r\n              onClick={handleDialogOpen}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* The Search and Filter ends here */}\r\n\r\n        <Grid item container height=\"100%\" direction=\"column\">\r\n          {plan.length > 0 ? (\r\n            <EnhancedTable\r\n              headCells={subscriptionHeader}\r\n              rows={plan}\r\n              paginationLabel=\"subscription per page\"\r\n              page={page}\r\n              limit={limit}\r\n              totalPages={totalPages}\r\n              totalDocs={totalDocs}\r\n              rowsPerPage={rowsPerPage}\r\n              setRowsPerPage={setRowsPerPage}\r\n              hasNextPage={hasNextPage}\r\n              hasPrevPage={hasPrevPage}\r\n              handleChangePage={fetchMoreFunc}\r\n              hasCheckbox={true}\r\n            >\r\n              {plan\r\n                // .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const { _id, amount, description, provider, duration, name } = row;\r\n                  const isItemSelected = isSelected(_id, selectedRows);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={_id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          onClick={() => handleSelectedRows(_id, selectedRows, setSelectedRows)}\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            \"aria-labelledby\": labelId,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ color: theme.palette.common.black }}\r\n                      >\r\n                        {name}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ color: theme.palette.common.red }}\r\n                      >\r\n                        {formatNumber(amount)}\r\n                      </TableCell>\r\n\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ color: theme.palette.common.black, maxWidth: \"20rem\" }}\r\n                      >\r\n                        {description}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ color: theme.palette.common.black, maxWidth: \"20rem\" }}\r\n                      >\r\n                        {provider}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ color: theme.palette.common.black, maxWidth: \"20rem\" }}\r\n                      >\r\n                        {duration}\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"left\" className={classes.tableCell}>\r\n                        <div\r\n                          style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"space-around\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            disableRipple\r\n                            onClick={() => handleEditOpenDialog(_id)}\r\n                            className={`${classes.tableBtn} ${classes.greenBtn}`}\r\n                            endIcon={<EditIcon color=\"success\" />}\r\n                          >\r\n                            Edit plan\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            disableRipple\r\n                            onClick={() => handleDeleteOpenDialog(_id)}\r\n                            className={`${classes.tableBtn} ${classes.redBtn}`}\r\n                            to=\"/view\"\r\n                            endIcon={<DeleteIcon color=\"error\" />}\r\n                          >\r\n                            Delete plan\r\n                          </Button>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </EnhancedTable>\r\n          ) : (\r\n            <NoData />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* // modal */}\r\n      <Modals\r\n        isOpen={isOpen}\r\n        title=\"Create new plan\"\r\n        rowSpacing={5}\r\n        handleClose={handleDialogClose}\r\n      >\r\n        <SubscriptionModal\r\n          handleDialogClose={handleDialogClose}\r\n          type=\"add\"\r\n          setAlert={setAlert}\r\n          initialValues={initialValues}\r\n        />\r\n      </Modals>\r\n\r\n      {/* edit Modal */}\r\n      <Modals isOpen={edit} title=\"Edit plan\" rowSpacing={5} handleClose={handleEditCloseDialog}>\r\n        <SubscriptionModal\r\n          handleDialogClose={handleEditCloseDialog}\r\n          type=\"edit\"\r\n          editId={editId}\r\n          setAlert={setAlert}\r\n          // initialValues={singleData}\r\n          singleData={singleData}\r\n          setSingleData={setSingleData}\r\n        />\r\n      </Modals>\r\n\r\n      {/* delete modal */}\r\n      <DeleteOrDisable\r\n        open={deleteModal}\r\n        setOpen={setdeleteModal}\r\n        title=\"Delete Plan\"\r\n        onConfirm={onConfirm}\r\n        confirmationMsg=\"delete plan\"\r\n        btnValue=\"Delete\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Subscription;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ViewMail.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ViewReferral.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\ViewMessage.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\WaitingList.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\WaitingListDetails.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\layouts\\WaitingListTable.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\Appointments.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\CreateMessage.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HcpAppointments.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HcpAvailability.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\pages\\HcpCaseNote.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\Utilities\\bMI.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\modals\\ReferPatient.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\modals\\RoleModal.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\modals\\SubscriptionModal.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project2\\main\\Dproject_Pharmacy\\src\\components\\graphQL\\fragment.js",[],{"ruleId":"626","replacedBy":"627"},{"ruleId":"628","replacedBy":"629"},{"ruleId":"630","severity":1,"message":"631","line":42,"column":10,"nodeType":"632","messageId":"633","endLine":42,"endColumn":32},{"ruleId":"634","severity":1,"message":"635","line":145,"column":38,"nodeType":"636","messageId":"637","endLine":145,"endColumn":40},{"ruleId":"630","severity":1,"message":"638","line":7,"column":3,"nodeType":"632","messageId":"633","endLine":7,"endColumn":10},{"ruleId":"630","severity":1,"message":"639","line":64,"column":5,"nodeType":"632","messageId":"633","endLine":64,"endColumn":30},{"ruleId":"640","severity":1,"message":"641","line":158,"column":11,"nodeType":"642","messageId":"643","endLine":158,"endColumn":13},{"ruleId":"640","severity":1,"message":"641","line":134,"column":11,"nodeType":"642","messageId":"643","endLine":134,"endColumn":13},{"ruleId":"640","severity":1,"message":"641","line":176,"column":11,"nodeType":"642","messageId":"643","endLine":176,"endColumn":13},{"ruleId":"640","severity":1,"message":"641","line":128,"column":11,"nodeType":"642","messageId":"643","endLine":128,"endColumn":13},{"ruleId":"640","severity":1,"message":"641","line":210,"column":31,"nodeType":"642","messageId":"643","endLine":210,"endColumn":33},{"ruleId":"640","severity":1,"message":"641","line":210,"column":54,"nodeType":"642","messageId":"643","endLine":210,"endColumn":56},{"ruleId":"640","severity":1,"message":"641","line":275,"column":34,"nodeType":"642","messageId":"643","endLine":275,"endColumn":36},{"ruleId":"630","severity":1,"message":"644","line":1,"column":51,"nodeType":"632","messageId":"633","endLine":1,"endColumn":58},{"ruleId":"630","severity":1,"message":"645","line":35,"column":10,"nodeType":"632","messageId":"633","endLine":35,"endColumn":18},{"ruleId":"630","severity":1,"message":"646","line":171,"column":10,"nodeType":"632","messageId":"633","endLine":171,"endColumn":23},{"ruleId":"630","severity":1,"message":"647","line":171,"column":25,"nodeType":"632","messageId":"633","endLine":171,"endColumn":41},{"ruleId":"648","severity":1,"message":"649","line":180,"column":21,"nodeType":"632","endLine":180,"endColumn":32},{"ruleId":"640","severity":1,"message":"641","line":352,"column":36,"nodeType":"642","messageId":"643","endLine":352,"endColumn":38},{"ruleId":"640","severity":1,"message":"641","line":356,"column":36,"nodeType":"642","messageId":"643","endLine":356,"endColumn":38},{"ruleId":"640","severity":1,"message":"641","line":116,"column":11,"nodeType":"642","messageId":"643","endLine":116,"endColumn":13},{"ruleId":"640","severity":1,"message":"641","line":308,"column":31,"nodeType":"642","messageId":"643","endLine":308,"endColumn":33},{"ruleId":"640","severity":1,"message":"641","line":222,"column":11,"nodeType":"642","messageId":"643","endLine":222,"endColumn":13},"no-native-reassign",["650"],"no-negated-in-lhs",["651"],"no-unused-vars","'selectedManagementMenu' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ViewHCP' is defined but never used.","'setSelectedManagementMenu' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useMemo' is defined but never used.","'useQuery' is defined but never used.","'searchPatient' is assigned a value but never used.","'setSearchPatient' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","no-global-assign","no-unsafe-negation"]