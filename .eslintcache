[{"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\index.js":"1","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\accessToken.js":"2","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\App.js":"3","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\index.js":"4","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\ScrollToView.js":"5","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\muiTheme.js":"6","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\graphQL\\useQuery.js":"7","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\graphQL\\Mutation.js":"8","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\routes\\Private.js":"9","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\routes\\Routes.js":"10","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\routes\\Hospital.js":"11","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\hooks\\useActions.js":"12","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\index.js":"13","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\index.js":"14","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\index.js":"15","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\graphQL\\fragment.js":"16","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\store.js":"17","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\WaitingListDetails.js":"18","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\WaitingList.js":"19","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\routes\\PrivateRoute.js":"20","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\action-creators\\index.js":"21","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\reducers\\index.js":"22","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\PreviousButton.js":"23","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\WaitingListTable.js":"24","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfile.js":"25","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\action-creators\\auth.js":"26","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\action-creators\\tablesActions.js":"27","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\EnhancedTable.js":"28","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\reducers\\authReducer.js":"29","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\reducers\\tablesReducer.js":"30","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\tableData.js":"31","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\tableHeaders.js":"32","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\helpers\\selectedRows.js":"33","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\helpers\\isSelected.js":"34","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\EnhancedTableToolbar.js":"35","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\EnhancedTableHeader.js":"36","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\action-types\\index.js":"37","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ViewReferral.js":"38","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ViewMail.js":"39","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\SinglePatient.js":"40","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\SingleHCP.js":"41","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Subscription.js":"42","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Settings.js":"43","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ReferralTab.js":"44","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Prescriptions.js":"45","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ViewMessage.js":"46","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Patients.js":"47","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\PatientProfile.js":"48","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\PatientAppointment.js":"49","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Medications.js":"50","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Messages.js":"51","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Management.js":"52","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HcpProfile.js":"53","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\MedicalRecords.js":"54","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HcpPatients.js":"55","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Hcps.js":"56","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HcpEarnings.js":"57","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HcpConsultations.js":"58","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Payout.js":"59","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HospitalDashboard.js":"60","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HCPChat.js":"61","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HospitalSettings.js":"62","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HcpCaseNote.js":"63","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HospitalProfile.js":"64","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HcpAvailability.js":"65","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HcpAppointments.js":"66","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Financetable.js":"67","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Finance.js":"68","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Email.js":"69","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\CreateMessage.js":"70","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\CreateEmail.js":"71","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Consultations.js":"72","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Setting.js":"73","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ScheduledRequest.js":"74","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ViewResult.js":"75","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ScheduledRequestProfile.js":"76","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Profiles.js":"77","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Profile.js":"78","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\PendingProfile.js":"79","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\CaseNotes.js":"80","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\PendingOrderProfile.js":"81","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Pending.js":"82","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Appointments.js":"83","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Administrator.js":"84","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ViewCompleted.js":"85","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\PendingOrder.js":"86","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ProcessingOrders.js":"87","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Login.js":"88","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Chat.js":"89","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Dashboards.js":"90","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Dashboard.js":"91","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\CompletedOrder.js":"92","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\CompletedOrders.js":"93","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\CancelledOrder.js":"94","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\CancelledOrders.js":"95","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\EmptyTable.js":"96","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\SideMenus.js":"97","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\SideMenu.js":"98","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\Notifications.js":"99","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\NoData.js":"100","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HeaderProfile.js":"101","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\LineGraph.js":"102","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalMenu.js":"103","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalHeaderProfile.js":"104","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HeadersProfile.js":"105","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\Header.js":"106","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\Headers.js":"107","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalDashboardChart.js":"108","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HeadersContents.js":"109","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HeaderContents.js":"110","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\Time.js":"111","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\Card.js":"112","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\Loader.js":"113","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\helpers\\filterHelperFunctions.js":"114","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\modals\\DeleteOrDisable.js":"115","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\hooks\\useFormInput.js":"116","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\modals\\Success.js":"117","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\FormikControl.js":"118","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\CustomButton.js":"119","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\DashboardChart.js":"120","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\helpers\\asideMenus.js":"121","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalHeaderContent.js":"122","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\DashCharts.js":"123","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\CircularChart.js":"124","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\AvailabilityTable.js":"125","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfileHospital.js":"126","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\TextError.js":"127","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\SearchInput.js":"128","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\Search.js":"129","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\Modal.js":"130","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\modals\\index.js":"131","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\LineChart2.js":"132","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\LineChart.js":"133","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\NotistackAlert.js":"134","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\FormSelect.js":"135","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\LinearProgress.js":"136","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\FormInput.js":"137","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\FilterList.js":"138","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfile2.js":"139","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfile1.js":"140","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\CircularProgress.js":"141","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\AvailabilityCard.js":"142","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\Button.js":"143","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfiles.js":"144","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\helpers\\func.js":"145","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Copy.js":"146","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\bMI.js":"147","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\modals\\RoleModal.js":"148","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\modals\\SubscriptionModal.js":"149","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\modals\\ReferPatient.js":"150","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\index.js":"151","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\Date.js":"152","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\Textarea.js":"153","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\Input.js":"154","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\LoginInput.js":"155","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\File.js":"156","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\DateTimePicker.js":"157","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\FormRadio.js":"158","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\Select.js":"159","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\Checkbox.js":"160","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\hooks\\useCopy.js":"161","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\SideNav.js":"162","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\hooks\\useAppType.js":"163","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\contexts\\AppTypeContext.js":"164","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\contexts\\appTypeReducer.js":"165","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\depreciated\\HospitalHeader.js":"166","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\helperFunctions\\breadcrumb.js":"167","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\mocks\\patterns.js":"168","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\helpers\\mockData.js":"169","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\ProfileCard.js":"170","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Forms\\Filters\\index.js":"171"},{"size":2000,"mtime":1653392707812,"results":"172","hashOfConfig":"173"},{"size":165,"mtime":1653392707430,"results":"174","hashOfConfig":"173"},{"size":8206,"mtime":1654779931520,"results":"175","hashOfConfig":"173"},{"size":38,"mtime":1653392707822,"results":"176","hashOfConfig":"173"},{"size":409,"mtime":1654591445296,"results":"177","hashOfConfig":"173"},{"size":3623,"mtime":1654513082897,"results":"178","hashOfConfig":"173"},{"size":18763,"mtime":1654611955357,"results":"179","hashOfConfig":"173"},{"size":11368,"mtime":1653392707623,"results":"180","hashOfConfig":"173"},{"size":1355,"mtime":1654200608576,"results":"181","hashOfConfig":"173"},{"size":1445,"mtime":1654200608577,"results":"182","hashOfConfig":"173"},{"size":4894,"mtime":1654515505326,"results":"183","hashOfConfig":"173"},{"size":479,"mtime":1653392707627,"results":"184","hashOfConfig":"173"},{"size":1514,"mtime":1654511157744,"results":"185","hashOfConfig":"173"},{"size":1442,"mtime":1654200608450,"results":"186","hashOfConfig":"173"},{"size":3699,"mtime":1653392707781,"results":"187","hashOfConfig":"173"},{"size":263,"mtime":1653392707624,"results":"188","hashOfConfig":"173"},{"size":296,"mtime":1653392707827,"results":"189","hashOfConfig":"173"},{"size":4822,"mtime":1654591451922,"results":"190","hashOfConfig":"173"},{"size":743,"mtime":1654591451922,"results":"191","hashOfConfig":"173"},{"size":926,"mtime":1654591451920,"results":"192","hashOfConfig":"173"},{"size":131,"mtime":1653392707818,"results":"193","hashOfConfig":"173"},{"size":275,"mtime":1653392707824,"results":"194","hashOfConfig":"173"},{"size":762,"mtime":1654591451920,"results":"195","hashOfConfig":"173"},{"size":5232,"mtime":1654591451922,"results":"196","hashOfConfig":"173"},{"size":4275,"mtime":1654591451919,"results":"197","hashOfConfig":"173"},{"size":895,"mtime":1653392707817,"results":"198","hashOfConfig":"173"},{"size":536,"mtime":1653392707819,"results":"199","hashOfConfig":"173"},{"size":5791,"mtime":1654591451922,"results":"200","hashOfConfig":"173"},{"size":2228,"mtime":1654591454677,"results":"201","hashOfConfig":"173"},{"size":807,"mtime":1653392707826,"results":"202","hashOfConfig":"173"},{"size":7937,"mtime":1653392707618,"results":"203","hashOfConfig":"173"},{"size":7736,"mtime":1653392707621,"results":"204","hashOfConfig":"173"},{"size":683,"mtime":1653392707810,"results":"205","hashOfConfig":"173"},{"size":82,"mtime":1653392707808,"results":"206","hashOfConfig":"173"},{"size":1942,"mtime":1654591451921,"results":"207","hashOfConfig":"173"},{"size":1828,"mtime":1654591451921,"results":"208","hashOfConfig":"173"},{"size":706,"mtime":1653392707819,"results":"209","hashOfConfig":"173"},{"size":8798,"mtime":1654591451922,"results":"210","hashOfConfig":"173"},{"size":3858,"mtime":1654200608562,"results":"211","hashOfConfig":"173"},{"size":5860,"mtime":1654515930776,"results":"212","hashOfConfig":"173"},{"size":7278,"mtime":1654523394399,"results":"213","hashOfConfig":"173"},{"size":14625,"mtime":1654777273067,"results":"214","hashOfConfig":"173"},{"size":3709,"mtime":1654200608551,"results":"215","hashOfConfig":"173"},{"size":11098,"mtime":1654614879317,"results":"216","hashOfConfig":"173"},{"size":8484,"mtime":1654513650840,"results":"217","hashOfConfig":"173"},{"size":2809,"mtime":1654200608563,"results":"218","hashOfConfig":"173"},{"size":12851,"mtime":1654684612923,"results":"219","hashOfConfig":"173"},{"size":4695,"mtime":1654685124409,"results":"220","hashOfConfig":"173"},{"size":19307,"mtime":1654512507646,"results":"221","hashOfConfig":"173"},{"size":6965,"mtime":1654515829875,"results":"222","hashOfConfig":"173"},{"size":9927,"mtime":1654591451921,"results":"223","hashOfConfig":"173"},{"size":13975,"mtime":1654591451921,"results":"224","hashOfConfig":"173"},{"size":7641,"mtime":1654611569773,"results":"225","hashOfConfig":"173"},{"size":4356,"mtime":1654513829754,"results":"226","hashOfConfig":"173"},{"size":6682,"mtime":1654592792449,"results":"227","hashOfConfig":"173"},{"size":22984,"mtime":1654777397143,"results":"228","hashOfConfig":"173"},{"size":8440,"mtime":1654592680604,"results":"229","hashOfConfig":"173"},{"size":9500,"mtime":1654614912648,"results":"230","hashOfConfig":"173"},{"size":9092,"mtime":1654611936288,"results":"231","hashOfConfig":"173"},{"size":1075,"mtime":1654681396764,"results":"232","hashOfConfig":"173"},{"size":7897,"mtime":1654591451921,"results":"233","hashOfConfig":"173"},{"size":1170,"mtime":1654673725271,"results":"234","hashOfConfig":"173"},{"size":19800,"mtime":1654200608491,"results":"235","hashOfConfig":"173"},{"size":4633,"mtime":1654675218692,"results":"236","hashOfConfig":"173"},{"size":1562,"mtime":1654591733675,"results":"237","hashOfConfig":"173"},{"size":13097,"mtime":1654591951747,"results":"238","hashOfConfig":"173"},{"size":8134,"mtime":1654611486915,"results":"239","hashOfConfig":"173"},{"size":10426,"mtime":1654611162185,"results":"240","hashOfConfig":"173"},{"size":12533,"mtime":1654591451920,"results":"241","hashOfConfig":"173"},{"size":8951,"mtime":1654591451921,"results":"242","hashOfConfig":"173"},{"size":10550,"mtime":1654200608471,"results":"243","hashOfConfig":"173"},{"size":9099,"mtime":1654523415361,"results":"244","hashOfConfig":"173"},{"size":1740,"mtime":1654200608549,"results":"245","hashOfConfig":"173"},{"size":14071,"mtime":1654200608545,"results":"246","hashOfConfig":"173"},{"size":10499,"mtime":1654200608567,"results":"247","hashOfConfig":"173"},{"size":19485,"mtime":1654200608547,"results":"248","hashOfConfig":"173"},{"size":4768,"mtime":1654200608540,"results":"249","hashOfConfig":"173"},{"size":4895,"mtime":1654200608539,"results":"250","hashOfConfig":"173"},{"size":16640,"mtime":1654200608532,"results":"251","hashOfConfig":"173"},{"size":22345,"mtime":1654515849166,"results":"252","hashOfConfig":"173"},{"size":15290,"mtime":1654591451921,"results":"253","hashOfConfig":"173"},{"size":14164,"mtime":1654200608525,"results":"254","hashOfConfig":"173"},{"size":1963,"mtime":1654200608452,"results":"255","hashOfConfig":"173"},{"size":15340,"mtime":1654591451920,"results":"256","hashOfConfig":"173"},{"size":9614,"mtime":1654591451922,"results":"257","hashOfConfig":"173"},{"size":15101,"mtime":1654591451921,"results":"258","hashOfConfig":"173"},{"size":17632,"mtime":1654200608537,"results":"259","hashOfConfig":"173"},{"size":12392,"mtime":1654591515223,"results":"260","hashOfConfig":"173"},{"size":7935,"mtime":1654591451920,"results":"261","hashOfConfig":"173"},{"size":476,"mtime":1654591451920,"results":"262","hashOfConfig":"173"},{"size":275,"mtime":1654200608474,"results":"263","hashOfConfig":"173"},{"size":14100,"mtime":1654200608464,"results":"264","hashOfConfig":"173"},{"size":14006,"mtime":1654200608466,"results":"265","hashOfConfig":"173"},{"size":11937,"mtime":1654200608454,"results":"266","hashOfConfig":"173"},{"size":13097,"mtime":1654200608457,"results":"267","hashOfConfig":"173"},{"size":1975,"mtime":1654591451921,"results":"268","hashOfConfig":"173"},{"size":5680,"mtime":1653392707671,"results":"269","hashOfConfig":"270"},{"size":5692,"mtime":1653392707670,"results":"271","hashOfConfig":"270"},{"size":3030,"mtime":1654591451922,"results":"272","hashOfConfig":"173"},{"size":852,"mtime":1654675651810,"results":"273","hashOfConfig":"173"},{"size":4554,"mtime":1654272512863,"results":"274","hashOfConfig":"173"},{"size":2593,"mtime":1653392707665,"results":"275","hashOfConfig":"173"},{"size":5702,"mtime":1653392707663,"results":"276","hashOfConfig":"270"},{"size":3875,"mtime":1653392707661,"results":"277","hashOfConfig":"173"},{"size":3720,"mtime":1653580049604,"results":"278","hashOfConfig":"173"},{"size":1566,"mtime":1654272534549,"results":"279","hashOfConfig":"173"},{"size":2738,"mtime":1654591451922,"results":"280","hashOfConfig":"173"},{"size":25386,"mtime":1654675711153,"results":"281","hashOfConfig":"173"},{"size":10668,"mtime":1654591451922,"results":"282","hashOfConfig":"173"},{"size":8883,"mtime":1654591451922,"results":"283","hashOfConfig":"173"},{"size":2472,"mtime":1653392707615,"results":"284","hashOfConfig":"173"},{"size":1148,"mtime":1654591451920,"results":"285","hashOfConfig":"173"},{"size":504,"mtime":1653392707601,"results":"286","hashOfConfig":"173"},{"size":2524,"mtime":1654200608586,"results":"287","hashOfConfig":"173"},{"size":4570,"mtime":1654591451921,"results":"288","hashOfConfig":"173"},{"size":306,"mtime":1653392707630,"results":"289","hashOfConfig":"173"},{"size":1894,"mtime":1654591451921,"results":"290","hashOfConfig":"173"},{"size":902,"mtime":1654591451920,"results":"291","hashOfConfig":"173"},{"size":2525,"mtime":1654591451919,"results":"292","hashOfConfig":"173"},{"size":12885,"mtime":1653392707642,"results":"293","hashOfConfig":"173"},{"size":2768,"mtime":1654200608584,"results":"294","hashOfConfig":"173"},{"size":12940,"mtime":1654591451922,"results":"295","hashOfConfig":"173"},{"size":12925,"mtime":1654200608433,"results":"296","hashOfConfig":"173"},{"size":3423,"mtime":1653392707576,"results":"297","hashOfConfig":"173"},{"size":5525,"mtime":1654681431171,"results":"298","hashOfConfig":"173"},{"size":3427,"mtime":1654591451919,"results":"299","hashOfConfig":"173"},{"size":462,"mtime":1654613712023,"results":"300","hashOfConfig":"173"},{"size":1979,"mtime":1654591451919,"results":"301","hashOfConfig":"173"},{"size":1504,"mtime":1654615139635,"results":"302","hashOfConfig":"173"},{"size":2431,"mtime":1654591447511,"results":"303","hashOfConfig":"173"},{"size":173,"mtime":1653392707684,"results":"304","hashOfConfig":"173"},{"size":3352,"mtime":1654687089381,"results":"305","hashOfConfig":"173"},{"size":2826,"mtime":1654591778055,"results":"306","hashOfConfig":"173"},{"size":688,"mtime":1654591447467,"results":"307","hashOfConfig":"173"},{"size":1428,"mtime":1654591447400,"results":"308","hashOfConfig":"173"},{"size":1099,"mtime":1654591447467,"results":"309","hashOfConfig":"173"},{"size":1502,"mtime":1654591447400,"results":"310","hashOfConfig":"173"},{"size":1484,"mtime":1654591451919,"results":"311","hashOfConfig":"173"},{"size":6066,"mtime":1654591447400,"results":"312","hashOfConfig":"173"},{"size":7485,"mtime":1653392707585,"results":"313","hashOfConfig":"173"},{"size":1633,"mtime":1654591451920,"results":"314","hashOfConfig":"173"},{"size":1375,"mtime":1653392707571,"results":"315","hashOfConfig":"173"},{"size":1305,"mtime":1654591824835,"results":"316","hashOfConfig":"173"},{"size":7485,"mtime":1653392707589,"results":"317","hashOfConfig":"173"},{"size":1439,"mtime":1654200608588,"results":"318","hashOfConfig":"173"},{"size":501,"mtime":1653392707567,"results":"319","hashOfConfig":"173"},{"size":163,"mtime":1654513914254,"results":"320","hashOfConfig":"173"},{"size":3312,"mtime":1654591451921,"results":"321","hashOfConfig":"173"},{"size":7199,"mtime":1654591451921,"results":"322","hashOfConfig":"173"},{"size":4318,"mtime":1653392707679,"results":"323","hashOfConfig":"173"},{"size":513,"mtime":1653392707802,"results":"324","hashOfConfig":"173"},{"size":2040,"mtime":1654591451920,"results":"325","hashOfConfig":"173"},{"size":2430,"mtime":1654591585729,"results":"326","hashOfConfig":"173"},{"size":1066,"mtime":1654591451920,"results":"327","hashOfConfig":"173"},{"size":1233,"mtime":1654591451920,"results":"328","hashOfConfig":"173"},{"size":5228,"mtime":1654591451920,"results":"329","hashOfConfig":"173"},{"size":1914,"mtime":1654591451920,"results":"330","hashOfConfig":"173"},{"size":1476,"mtime":1653392707795,"results":"331","hashOfConfig":"173"},{"size":3050,"mtime":1654614299314,"results":"332","hashOfConfig":"173"},{"size":2262,"mtime":1654591451920,"results":"333","hashOfConfig":"173"},{"size":1451,"mtime":1653392707629,"results":"334","hashOfConfig":"173"},{"size":5676,"mtime":1654591451922,"results":"335","hashOfConfig":"173"},{"size":337,"mtime":1654200608590,"results":"336","hashOfConfig":"173"},{"size":596,"mtime":1654200608593,"results":"337","hashOfConfig":"173"},{"size":278,"mtime":1654200608595,"results":"338","hashOfConfig":"173"},{"size":2549,"mtime":1654591451920,"results":"339","hashOfConfig":"173"},{"size":772,"mtime":1654200608581,"results":"340","hashOfConfig":"173"},{"size":2038,"mtime":1654200608591,"results":"341","hashOfConfig":"173"},{"size":3157,"mtime":1653344874573,"results":"342","hashOfConfig":"173"},{"size":2054,"mtime":1654591447467,"results":"343","hashOfConfig":"173"},{"size":644,"mtime":1654614889950,"results":"344","hashOfConfig":"173"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},"stbrz3",{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"347"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"347"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"347"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"347"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"347"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"347"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"347"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"347"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"347"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"347"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"347"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"347"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"347"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c6e1ph",{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"347"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"614","messages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"616","messages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"636","messages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"642","messages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"347"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"347"},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"692","messages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"694","messages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"698","messages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"347"},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\index.js",[],["705","706"],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\accessToken.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\App.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\ScrollToView.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\muiTheme.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\graphQL\\useQuery.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\graphQL\\Mutation.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\routes\\Private.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\routes\\Routes.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\routes\\Hospital.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\hooks\\useActions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\graphQL\\fragment.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\store.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\WaitingListDetails.js",["707","708"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Chip, Typography, Grid } from \"@mui/material\";\r\nimport DisplayProfile from \"components/Utilities/DisplayProfile\";\r\nimport PreviousButton from \"components/Utilities/PreviousButton\";\r\nimport displayPhoto from \"assets/images/avatar.svg\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    background: \"#fff\",\r\n    borderRadius: \"1rem\",\r\n    padding: \"4rem 5rem\",\r\n    height: \"16.1rem\",\r\n    boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.2)\",\r\n  },\r\n  infoBadge: {\r\n    \"&.css-1dl0kns-MuiChip-root\": {\r\n      fontSize: \"1.25rem\",\r\n      borderRadius: \"1.5rem\",\r\n      color: theme.palette.common.green,\r\n    },\r\n  },\r\n}));\r\n\r\nconst WaitingListDetails = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const symptoms = [\"Headache\", \"Sore Throat\", \"Fever\"];\r\n\r\n  return (\r\n    <Grid container direction=\"column\" style={{ paddingBottom: \"10rem\" }}>\r\n      <Grid item style={{ marginBottom: \"3rem\" }}>\r\n        <PreviousButton path=\"/appointments/waiting-list\" />\r\n      </Grid>\r\n      <Grid item>\r\n        <DisplayProfile\r\n          fullName=\"Raphael Igbinedion\"\r\n          displayPhoto={displayPhoto}\r\n          medicalTitle=\"Medical ID\"\r\n          statusId={132467}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        justifyContent=\"space-between\"\r\n        style={{ paddingTop: \"5rem\" }}\r\n      >\r\n        {/* SYMPTOMS GRID */}\r\n        <Grid\r\n          item\r\n          md\r\n          className={classes.cardGrid}\r\n          style={{ marginRight: \"2rem\" }}\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            style={{ height: \"100%\" }}\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Symptoms: </Typography>\r\n            </Grid>\r\n\r\n            <Grid item container justifyContent=\"space-evenly\">\r\n              {symptoms.map((symptom) => (\r\n                <Grid item key={symptom}>\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    label={symptom}\r\n                    className={classes.infoBadge}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* CONSULTATION TYPE GRID */}\r\n        <Grid\r\n          item\r\n          md\r\n          className={classes.cardGrid}\r\n          style={{ marginLeft: \"2rem\" }}\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            style={{ height: \"100%\" }}\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Consultation Type</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                variant=\"outlined\"\r\n                label=\"Type 1\"\r\n                className={classes.infoBadge}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        justifyContent=\"space-between\"\r\n        style={{ paddingTop: \"5rem\" }}\r\n      >\r\n        {/* SCALE OF DISCOMFORT GRID */}\r\n        <Grid\r\n          item\r\n          md\r\n          className={classes.cardGrid}\r\n          style={{ marginRight: \"2rem\" }}\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            style={{ height: \"100%\" }}\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Scale of discomfort: </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                variant=\"outlined\"\r\n                label=\"Once\"\r\n                className={classes.infoBadge}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* DATE OF FIRST NOTICE GRID */}\r\n        <Grid\r\n          item\r\n          md\r\n          className={classes.cardGrid}\r\n          style={{ marginLeft: \"2rem\" }}\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            style={{ height: \"100%\" }}\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Date of first notice</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                variant=\"outlined\"\r\n                label=\"01-10-2021\"\r\n                className={classes.infoBadge}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WaitingListDetails;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\WaitingList.js",["709","710"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport WaitingListTable from \"components/layouts/WaitingListTable\";\r\nimport PreviousButton from \"components/Utilities/PreviousButton\";\r\n\r\nconst WaitingList = () => {\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item style={{ marginBottom: \"3rem\" }}>\r\n        <PreviousButton path=\"/appointments\" />\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Waiting List</Typography>\r\n      </Grid>\r\n      <Grid item style={{ marginTop: \"5rem\" }}>\r\n        <WaitingListTable path=\"/appointments/waiting-list\" />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WaitingList;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\routes\\PrivateRoute.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\action-creators\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\reducers\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\PreviousButton.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\WaitingListTable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\action-creators\\auth.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\action-creators\\tablesActions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\EnhancedTable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\reducers\\authReducer.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\reducers\\tablesReducer.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\tableData.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\tableHeaders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\helpers\\selectedRows.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\helpers\\isSelected.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\EnhancedTableToolbar.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\EnhancedTableHeader.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\action-types\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ViewReferral.js",["711"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, Grid, Avatar, Divider } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport displayPhoto from \"assets/images/avatar.svg\";\r\nimport PreviousButton from \"components/Utilities/PreviousButton\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { getRefferal } from \"components/graphQL/useQuery\";\r\nimport NoData from \"components/layouts/NoData\";\r\nimport Loader from \"components/Utilities/Loader\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { dateMoment, timeMoment } from \"components/Utilities/Time\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  parentGrid: {\r\n    background: \"#fff\",\r\n    borderRadius: \"1rem\",\r\n    boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.1)\",\r\n  },\r\n  infoBadge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.5rem\",\r\n      borderRadius: \"1.5rem\",\r\n      background: theme.palette.common.lightGreen,\r\n      color: theme.palette.common.green,\r\n    },\r\n  },\r\n  title: {\r\n    \"&.MuiTypography-root\": {\r\n      color: theme.palette.common.grey,\r\n      marginRight: \"2rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ViewReferral = () => {\r\n  const classes = useStyles();\r\n  const { referralId } = useParams();\r\n  const { loading, data, error } = useQuery(getRefferal, {\r\n    variables: { id: referralId },\r\n  });\r\n\r\n  const [referral, setReferral] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setReferral(data.getReferral);\r\n    }\r\n  }, [data]);\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  const {\r\n    specialization,\r\n    referrals,\r\n    type,\r\n    reason,\r\n    note,\r\n    testType,\r\n    createdAt,\r\n    patientData,\r\n    doctorData,\r\n    // eslint-disable-next-line\r\n  } = referral;\r\n  // const { firstName, lastName, picture } = doctorData;\r\n  // const { firstName: patientName, lastName: patientLastName, picture: patientImage } =\r\n  //   referral && patientData;\r\n\r\n  return (\r\n    <Grid container direction=\"column\" gap={2}>\r\n      <Grid item>\r\n        <PreviousButton path={`/referrals`} />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        direction=\"column\"\r\n        width=\"90%\"\r\n        margin=\"auto\"\r\n        className={classes.parentGrid}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          flexWrap=\"no-wrap\"\r\n          padding=\" 2rem 0\"\r\n          width=\"90%\"\r\n          margin=\"auto\"\r\n        >\r\n          <Grid item>\r\n            <Grid item container gap={2} alignItems=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Patient:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Avatar\r\n                  src={\r\n                    patientData && patientData.image\r\n                      ? patientData.image\r\n                      : displayPhoto\r\n                  }\r\n                  alt={`Display photo of the  ${\r\n                    patientData ? patientData.firstName : \"placeholder\"\r\n                  }`}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">\r\n                  {patientData\r\n                    ? `${patientData.firstName} ${patientData.lastName}`\r\n                    : \"No Patient\"}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid item container gap={2} alignItems=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Referred By:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Avatar\r\n                  src={\r\n                    doctorData && doctorData.picture\r\n                      ? doctorData.picture\r\n                      : displayPhoto\r\n                  }\r\n                  alt={`Display photo of the doctor ${\r\n                    doctorData ? doctorData.firstName : \"\"\r\n                  }`}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">\r\n                  {doctorData\r\n                    ? `${doctorData.firstName} ${doctorData.lastName}`\r\n                    : \"No Doctor\"}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item alignItems=\"center\">\r\n            <Grid item container gap={2} alignItems=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Referral ID:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">\r\n                  {referrals ? referrals : \"No Value\"}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          container\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          flexWrap=\"no-wrap\"\r\n          padding=\" 2rem 0\"\r\n          width=\"90%\"\r\n          margin=\"auto\"\r\n        >\r\n          <Grid item>\r\n            <Grid item container alignItems=\"center\" gap={2}>\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Type:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">{type}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid item container alignItems=\"center\" gap={2}>\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Specialization:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">{specialization}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid item container alignItems=\"center\" gap={2}>\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Test Type:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">\r\n                  {testType ? testType : \"No Value\"}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item alignItems=\"center\">\r\n            <Grid item container gap={2} alignItems=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Date:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">{dateMoment(createdAt)}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid item container gap={2} alignItems=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Time:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">{timeMoment(createdAt)}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          item\r\n          container\r\n          rowSpacing={2}\r\n          flexDirection=\"column\"\r\n          padding=\" 2rem 0\"\r\n          width=\"90%\"\r\n          margin=\"auto\"\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"body1\" className={classes.title}>\r\n              Reasons\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body1\" style={{ lineHeight: 1.85 }}>\r\n              {reason}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          item\r\n          container\r\n          rowSpacing={2}\r\n          flexDirection=\"column\"\r\n          padding=\" 2rem 0\"\r\n          width=\"90%\"\r\n          margin=\"auto\"\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"body1\" className={classes.title}>\r\n              Referral Notes:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body1\" style={{ lineHeight: 1.85 }}>\r\n              {note}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ViewReferral;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ViewMail.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\SinglePatient.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\SingleHCP.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Subscription.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Settings.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ReferralTab.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Prescriptions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ViewMessage.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Patients.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\PatientProfile.js",["712"],"import React, { useState, useEffect } from \"react\";\r\nimport { dateMoment } from \"components/Utilities/Time\";\r\nimport { NoData } from \"components/layouts\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport {\r\n  Loader,\r\n  DisplayProfileHospital,\r\n  ProfileCard,\r\n} from \"components/Utilities\";\r\nimport displayPhoto from \"assets/images/avatar.svg\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { getProfile, verifiedEmail } from \"components/graphQL/useQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridsWrapper: {\r\n    background: \"#fff\",\r\n    borderRadius: \"1rem\",\r\n    padding: \"1rem\",\r\n    boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.2)\",\r\n  },\r\n\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.3rem !important\",\r\n      //   height: \"2.7rem\",\r\n      background: theme.palette.common.lightGreen,\r\n      color: theme.palette.common.green,\r\n      borderRadius: \"1.5rem\",\r\n    },\r\n  },\r\n\r\n  cardGrid: {\r\n    background: \"#fff\",\r\n    borderRadius: \"1rem\",\r\n    padding: \"4rem 5rem\",\r\n    height: \"16.1rem\",\r\n    boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.2)\",\r\n  },\r\n\r\n  linkIcon: {\r\n    \"&.MuiSvgIcon-root\": {\r\n      fontSize: \"1.25rem\",\r\n      color: theme.palette.common.green,\r\n      marginLeft: \"1.2rem\",\r\n    },\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.common.green,\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  buttonsGridWrapper: {\r\n    height: \"16.1rem\",\r\n  },\r\n}));\r\n\r\nconst PatientProfile = () => {\r\n  const { patientId } = useParams();\r\n  const doci = localStorage.getItem(\"userDociId\");\r\n  const { loading, data, error } = useQuery(getProfile, {\r\n    variables: {\r\n      profileId: patientId,\r\n    },\r\n  });\r\n\r\n  const { data: emailStatus, loading: emailLoading } = useQuery(verifiedEmail, {\r\n    variables: {\r\n      dociId: doci,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const [patientProfile, setPatientProfile] = useState(\"\");\r\n  const [emailStat, setEmailStat] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (emailStatus) {\r\n      setEmailStat(emailStatus.accounts.data[0].isEmailVerified);\r\n    }\r\n  }, [emailStatus]);\r\n  useEffect(() => {\r\n    if (data) {\r\n      setPatientProfile(data.profile);\r\n    }\r\n  }, [data, patientId]);\r\n\r\n  if (loading || emailLoading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    dociId,\r\n    status,\r\n    gender,\r\n    image,\r\n    createdAt,\r\n    provider,\r\n    phoneNumber,\r\n    email,\r\n  } = patientProfile;\r\n  console.log(gender);\r\n  return (\r\n    <Grid container direction=\"column\" gap={2}>\r\n      {/* Display photo and profile name grid */}\r\n      <Grid item>\r\n        <DisplayProfileHospital\r\n          fullName={`${firstName} ${lastName}`}\r\n          displayPhoto={image ? image : displayPhoto}\r\n          medicalTitle=\"User ID\"\r\n          statusId={dociId?.split(\"-\")[1]}\r\n          status={status ? status : \"No Value\"}\r\n        />\r\n      </Grid>\r\n      {/* PERSONAL INFO SECTION */}\r\n      <Grid item container spacing={4} justifyContent=\"space-between\">\r\n        <Grid item container md={6} sm={6} xs={12}>\r\n          <ProfileCard text=\"Gender\" value={gender} />\r\n        </Grid>\r\n        <Grid item container md={6} sm={6} xs={12}>\r\n          <ProfileCard text=\"Created At\" value={dateMoment(createdAt)} />\r\n        </Grid>\r\n        <Grid item container md={6} sm={6} xs={12}>\r\n          <ProfileCard\r\n            text=\"Provider\"\r\n            value={provider ? provider : \"No Provider\"}\r\n          />\r\n        </Grid>\r\n        <Grid item container md={6} sm={6} xs={12}>\r\n          <ProfileCard\r\n            text=\"Verified\"\r\n            value={emailStat == \"false\" ? \"Not Verified\" : \"Verified\"}\r\n          />\r\n        </Grid>\r\n        <Grid item container md={6} sm={6} xs={12} mx=\"auto\">\r\n          <ProfileCard\r\n            text=\"Email Address\"\r\n            value={\r\n              email ? (\r\n                <a href={`mailto:${email}`} className={classes.link}>\r\n                  {email}\r\n                </a>\r\n              ) : (\r\n                \"No Email Provided\"\r\n              )\r\n            }\r\n          />\r\n        </Grid>\r\n        <Grid item container md={6} sm={6} xs={12}>\r\n          <ProfileCard\r\n            text=\"Phone Number\"\r\n            value={\r\n              phoneNumber ? (\r\n                <a href={`tel:+234${phoneNumber}`} className={classes.link}>\r\n                  {phoneNumber}\r\n                </a>\r\n              ) : (\r\n                \"No Phone Number\"\r\n              )\r\n            }\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PatientProfile;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\PatientAppointment.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Medications.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Messages.js",["713"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport NoData from \"components/layouts/NoData\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Loader from \"components/Utilities/Loader\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { dateMoment, timeMoment } from \"components/Utilities/Time\";\r\nimport Search from \"components/Utilities/Search\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { EnhancedTable, EmptyTable } from \"components/layouts\";\r\nimport { messagesHeadCells3 } from \"components/Utilities/tableHeaders\";\r\nimport { Avatar, Button, Checkbox, Grid } from \"@mui/material\";\r\nimport displayPhoto from \"assets/images/avatar.svg\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { getMessage } from \"components/graphQL/useQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  actionBtnGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      marginRight: \"1.5rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"0.5rem\",\r\n      maxWidth: \"10rem\",\r\n      fontSize: \".85rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"0.85rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".2rem\",\r\n      },\r\n    },\r\n  },\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.25rem !important\",\r\n      height: \"2.7rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n  tableBtn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      height: \"3rem\",\r\n      fontSize: \"1.25rem\",\r\n      borderRadius: \"2rem\",\r\n      boxShadow: \"none\",\r\n\r\n      \"&:hover\": {\r\n        \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n\r\n      \"&:active\": {\r\n        boxShadow: \"none\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.5rem\",\r\n      },\r\n    },\r\n  },\r\n\r\n  redBtn: {\r\n    \"&.MuiButton-root\": {\r\n      background: theme.palette.common.lightRed,\r\n      color: theme.palette.common.red,\r\n\r\n      \"&:hover\": {\r\n        background: theme.palette.error.light,\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Messages = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [pageInfo, setPageInfo] = useState([]);\r\n  const greenButtonType = {\r\n    background: theme.palette.primary.main,\r\n    hover: theme.palette.primary.light,\r\n    active: theme.palette.primary.dark,\r\n  };\r\n\r\n  const [searchMessage, setSearchMessage] = useState(\"\");\r\n  const [message, setMessage] = useState([]);\r\n  const { loading, data, error, refetch } = useQuery(getMessage, {\r\n    variables: {\r\n      providerId: localStorage.getItem(\"partnerProviderId\"),\r\n    },\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n  const onChange = async (e) => {\r\n    setSearchMessage(e);\r\n    if (e === \"\") {\r\n      refetch();\r\n    } else refetch({ recipient: e });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMessage(data.getMessages.messages);\r\n      setPageInfo(data.getMessages.pageInfo);\r\n    }\r\n  }, [message, data]);\r\n  const fetchMoreFunc = (e, newPage) => {\r\n    refetch({ page: newPage });\r\n  };\r\n\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n  const { page, totalPages, hasNextPage, hasPrevPage, limit, totalDocs } =\r\n    pageInfo;\r\n  const [rowsPerPage, setRowsPerPage] = useState(0);\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  else {\r\n    return (\r\n      <Grid containerdirection=\"column\" gap={2} flexWrap=\"nowrap\" height=\"100%\">\r\n        <Grid item container style={{ paddingBottom: \"5rem\" }}>\r\n          <Grid item className={classes.searchGrid}>\r\n            <Search\r\n              value={searchMessage}\r\n              onChange={(e) => onChange(e.target.value)}\r\n              placeholder=\"Type to search Messages by recipient e.g 61e5d7ebbe7d97001467f6fe\"\r\n              height=\"5rem\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <CustomButton\r\n              endIcon={<AddIcon />}\r\n              title=\"New Message\"\r\n              type={greenButtonType}\r\n              component={Link}\r\n              to=\"/messages/create-message\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {message.length > 0 ? (\r\n          <Grid item container height=\"100%\" direction=\"column\">\r\n            <EnhancedTable\r\n              headCells={messagesHeadCells3}\r\n              rows={message}\r\n              page={page}\r\n              paginationLabel=\"Message per page\"\r\n              limit={limit}\r\n              totalPages={totalPages}\r\n              totalDocs={totalDocs}\r\n              rowsPerPage={rowsPerPage}\r\n              setRowsPerPage={setRowsPerPage}\r\n              hasNextPage={hasNextPage}\r\n              hasPrevPage={hasPrevPage}\r\n              handleChangePage={fetchMoreFunc}\r\n              hasCheckbox={true}\r\n            >\r\n              {message\r\n                // .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const { recipient, subject, createdAt, _id } = row;\r\n                  const isItemSelected = isSelected(_id, selectedRows);\r\n\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={_id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          onClick={() =>\r\n                            handleSelectedRows(\r\n                              _id,\r\n                              selectedRows,\r\n                              setSelectedRows\r\n                            )\r\n                          }\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            \"aria-labelledby\": labelId,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ maxWidth: \"20rem\" }}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\",\r\n                          }}\r\n                        >\r\n                          <span style={{ marginRight: \"1rem\" }}>\r\n                            <Avatar\r\n                              alt={`Display Photo of ${recipient}`}\r\n                              src={displayPhoto}\r\n                              sx={{ width: 24, height: 24 }}\r\n                            />\r\n                          </span>\r\n                          <span style={{ fontSize: \"1.25rem\" }}>\r\n                            {recipient}\r\n                          </span>\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ maxWidth: \"15rem\" }}\r\n                      >\r\n                        {subject}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ color: theme.palette.common.grey }}\r\n                      >\r\n                        {dateMoment(createdAt)}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ color: theme.palette.common.grey }}\r\n                      >\r\n                        {timeMoment(createdAt)}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          className={classes.button}\r\n                          component={Link}\r\n                          to={`messages/${_id}`}\r\n                          endIcon={<ArrowForwardIosIcon />}\r\n                        >\r\n                          View Message\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={messagesHeadCells3}\r\n            paginationLabel=\"Medications  per page\"\r\n          />\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Messages;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Management.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HcpProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\MedicalRecords.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HcpPatients.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Hcps.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HcpEarnings.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HcpConsultations.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Payout.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HospitalDashboard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HCPChat.js",["714"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Typography, Divider } from \"@mui/material\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loader from \"components/Utilities/Loader\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\nimport PreviousButton from \"components/Utilities/PreviousButton\";\r\nimport FormikControl from \"components/validation/FormikControl\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { CREATE_MESSAGE } from \"components/graphQL/Mutation\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { getMessage, doctor } from \"components/graphQL/useQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridWrapper: {\r\n    \"&.MuiGrid-item\": {\r\n      borderRadius: \"1rem\",\r\n      background: \"#fff\",\r\n      padding: \"2rem 4rem\",\r\n      maxWidth: \"60rem !important\",\r\n      boxShadow: \"-1px 0px 10px -2px rgba(0,0,0,0.1)\",\r\n    },\r\n  },\r\n  inputGrid: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n  heading: {\r\n    \"&.MuiTypography-root\": {\r\n      color: theme.palette.common.grey,\r\n      //   fontSize: \"1rem\"\r\n    },\r\n  },\r\n  formInput: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    fontSize: \"1.5rem\",\r\n    padding: \".5rem 1rem\",\r\n    border: \"none\",\r\n    background: \"transparent\",\r\n    color: theme.palette.common.grey,\r\n\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n    },\r\n  },\r\n  textArea: {\r\n    border: \"1px solid rgba(0, 0, 0, 0.03)\",\r\n    resize: \"none\",\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n  divider: {\r\n    \"&.MuiDivider-root\": {\r\n      borderColor: \"rgba(0, 0, 0, 0.03)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst HCPChat = () => {\r\n  const { hcpId } = useParams();\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  let history = useHistory();\r\n  const [createNewMessage] = useMutation(CREATE_MESSAGE, {\r\n    refetchQueries: [{ query: getMessage }],\r\n  });\r\n  const { data, loading } = useQuery(doctor, { variables: { id: hcpId } });\r\n  const buttonType = {\r\n    background: theme.palette.common.black,\r\n    hover: theme.palette.primary.main,\r\n    active: theme.palette.primary.dark,\r\n    disabled: theme.palette.common.black,\r\n  };\r\n  const [profile, setprofile] = useState(\"\");\r\n  const { firstName, lastName } = profile;\r\n\r\n  const initialValues = {\r\n    subject: \"\",\r\n    recipient: `${firstName} ${lastName} ` || \"\",\r\n    textarea: \"\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setprofile(data.doctorProfile);\r\n    }\r\n  }, [data]);\r\n\r\n  const validationSchema = Yup.object({\r\n    subject: Yup.string(\"Enter your subject\")\r\n      .trim()\r\n      .required(\"Subject is required\"),\r\n    textarea: Yup.string(\"Enter your message\")\r\n      .trim()\r\n      .required(\"Message is required\"),\r\n    recipient: Yup.string(\"Enter your recipient\")\r\n      .trim()\r\n      .required(\"recipients is required\"),\r\n  });\r\n  const onSubmit = async (values, onSubmitProps) => {\r\n    const id = localStorage.getItem(\"user_id\");\r\n    const { subject, textarea } = values;\r\n\r\n    try {\r\n      await createNewMessage({\r\n        variables: {\r\n          sender: id,\r\n          recipient: hcpId,\r\n          subject,\r\n          body: textarea,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    onSubmitProps.resetForm();\r\n    history.push(`/hcps/${hcpId}/profile`);\r\n  };\r\n\r\n  if (loading) return <Loader />;\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={onSubmit}\r\n      validateOnBlur={false}\r\n      validationSchema={validationSchema}\r\n      validateOnChange={false}\r\n      validateOnMount={false}\r\n      enableReinitialize\r\n    >\r\n      {({ isValid, isSubmitting, dirty }) => {\r\n        return (\r\n          <Form>\r\n            <Grid container direction=\"column\">\r\n              <Grid item style={{ marginBottom: \"3rem\" }}>\r\n                <PreviousButton path={`/hcps/${hcpId}/profile`} />\r\n              </Grid>\r\n              <Grid item container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                  <Typography variant=\"h4\" style={{ marginBottom: \"3rem\" }}>\r\n                    Create New Message\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  direction=\"column\"\r\n                  className={classes.gridWrapper}\r\n                >\r\n                  <Grid item>\r\n                    <Grid\r\n                      item\r\n                      container\r\n                      alignItems=\"center\"\r\n                      sx={{ gap: \"0!important\" }}\r\n                    >\r\n                      <Grid item>\r\n                        <Typography variant=\"body2\" className={classes.heading}>\r\n                          Recipient:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item className={classes.inputGrid}>\r\n                        <FormikControl\r\n                          control=\"input\"\r\n                          id=\"message\"\r\n                          name=\"recipient\"\r\n                          disabled\r\n                          variant=\"standard\"\r\n                          className={classes.formInput}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Divider className={classes.divider} />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Grid container alignItems=\"center\">\r\n                      <Grid item>\r\n                        <Typography variant=\"body2\" className={classes.heading}>\r\n                          Subject:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item className={classes.inputGrid}>\r\n                        <FormikControl\r\n                          control=\"input\"\r\n                          id=\"subject\"\r\n                          name=\"subject\"\r\n                          variant=\"standard\"\r\n                          className={classes.formInput}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Divider className={classes.divider} />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Grid container direction=\"column\">\r\n                      <Grid item>\r\n                        <Typography variant=\"body2\" className={classes.heading}>\r\n                          Message:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item style={{ height: \"15rem\" }}>\r\n                        <FormikControl\r\n                          control=\"textarea\"\r\n                          id=\"textarea\"\r\n                          name=\"textarea\"\r\n                          variant=\"standard\"\r\n                          fLabel={true}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                    {/* <Divider className={classes.divider} /> */}\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    style={{ alignSelf: \"flex-end\", marginTop: \"2rem\" }}\r\n                  >\r\n                    <CustomButton\r\n                      title=\"Send Message\"\r\n                      width=\"100%\"\r\n                      type={buttonType}\r\n                      isSubmitting={isSubmitting}\r\n                      disabled={!(dirty || isValid)}\r\n                      // endIcon={<ArrowForwardIosIcon style={{ fontSize: \"1.5rem\" }} />}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default HCPChat;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HospitalSettings.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HcpCaseNote.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HospitalProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HcpAvailability.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\HcpAppointments.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Financetable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Finance.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Email.js",["715"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport NoData from \"components/layouts/NoData\";\r\nimport Loader from \"components/Utilities/Loader\";\r\nimport FormikControl from \"components/validation/FormikControl\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { dateMoment } from \"components/Utilities/Time\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport Modals from \"components/Utilities/Modal\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { getEmailList } from \"components/graphQL/useQuery\";\r\nimport {\r\n  TableRow,\r\n  Alert,\r\n  TableCell,\r\n  Checkbox,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport DownloadSharpIcon from \"@mui/icons-material/DownloadSharp\";\r\nimport Search from \"components/Utilities/Search\";\r\nimport FilterList from \"components/Utilities/FilterList\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { emailHeader } from \"components/Utilities/tableHeaders\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nconst genderType = [\r\n  { key: \"Male\", value: \"Male\" },\r\n  { key: \"Female\", value: \"Female\" },\r\n  { key: \"Prefer not to say\", value: \"Prefer not to say\" },\r\n];\r\nconst plans = [\r\n  { key: \"Plan 1\", value: \"Plan 1\" },\r\n  { key: \"Plan 2\", value: \"Plan 2\" },\r\n  { key: \"Plan 3\", value: \"Plan 3\" },\r\n  { key: \"Plan 4\", value: \"Plan 4\" },\r\n];\r\nconst plans1 = [\r\n  { key: \"Plan 1\", value: \"Plan 1\" },\r\n  { key: \"Plan 2\", value: \"Plan 2\" },\r\n  { key: \"Plan 3\", value: \"Plan 3\" },\r\n  { key: \"Plan 4\", value: \"Plan 4\" },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  filterBtnGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      marginRight: \"3rem\",\r\n    },\r\n  },\r\n  chip: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.25rem\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n      background: theme.palette.common.white,\r\n      color: theme.palette.common.green,\r\n      \"& .MuiChip-deleteIcon\": {\r\n        color: \"inherit\",\r\n        fontSize: \"inherit\",\r\n      },\r\n    },\r\n  },\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"0.5rem\",\r\n      maxWidth: \"7rem\",\r\n      fontSize: \".85rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"0.85rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".2rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  btn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  FormLabel: {\r\n    \"&.MuiFormLabel-root\": {\r\n      ...theme.typography.FormLabel,\r\n    },\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Email = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { data, error, loading } = useQuery(getEmailList);\r\n  const [emails, setEmails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setEmails(data.getEmailList.data);\r\n    }\r\n  }, [data]);\r\n  const { selectedRows, page } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n  const [searchMail, setSearchMail] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const handleDialogOpen = () => setIsOpen(true);\r\n  useEffect(() => {\r\n    const z = setTimeout(() => {\r\n      setResponse(\"\");\r\n    }, 2000);\r\n    return () => clearTimeout(z);\r\n  }, [response]);\r\n\r\n  const handleDialogClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n  const buttonType = {\r\n    background: theme.palette.common.black,\r\n    hover: theme.palette.primary.main,\r\n    active: theme.palette.primary.dark,\r\n    disabled: theme.palette.common.black,\r\n  };\r\n  const initialValues = {\r\n    referral: \"\",\r\n    date: \"\",\r\n    category: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    category: Yup.string(\"Select your category\").required(\r\n      \"Category is required\"\r\n    ),\r\n    referral: Yup.string(\"Select your referral\").required(\r\n      \"Refferal is required\"\r\n    ),\r\n    date: Yup.string(\"Select date\").required(\"Date is required\"),\r\n  });\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" height=\"100%\" flexWrap=\"nowrap\">\r\n        {response ? (\r\n          <Grid\r\n            item\r\n            width={300}\r\n            margin=\"auto\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            textAlign=\"center\"\r\n          >\r\n            <Alert severity=\"success\">\r\n              <Typography variant=\"h1\">{response}</Typography>\r\n            </Alert>\r\n          </Grid>\r\n        ) : null}\r\n        <Grid item container style={{ paddingBottom: \"5rem\" }}>\r\n          <Grid item className={classes.searchGrid}>\r\n            <Search\r\n              value={searchMail}\r\n              onChange={(e) => setSearchMail(e.target.value)}\r\n              placeholder=\"Enter your email here...\"\r\n              height=\"5rem\"\r\n            />\r\n          </Grid>\r\n          <Grid item className={classes.filterBtnGrid}>\r\n            <FilterList onClick={handleDialogOpen} title=\"Filter by\" />\r\n          </Grid>\r\n          <Grid item className={classes.filterBtnGrid}>\r\n            <CustomButton\r\n              endIcon={<DownloadSharpIcon />}\r\n              title=\"Download Email\"\r\n              type={buttonType}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <CustomButton\r\n              endIcon={<AddIcon />}\r\n              component={Link}\r\n              to=\"/email/create-email\"\r\n              title=\"Add Email\"\r\n              type={buttonType}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* The Search and Filter ends here */}\r\n\r\n        <Grid item container direction=\"column\" height=\"100%\">\r\n          {emails && emails.length > 0 ? (\r\n            <EnhancedTable\r\n              headCells={emailHeader}\r\n              rows={emails}\r\n              page={page}\r\n              paginationLabel=\"email per page\"\r\n              hasCheckbox={true}\r\n            >\r\n              {emails &&\r\n                emails\r\n                  // .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const { _id, email, createdAt, role } = row;\r\n                    const isItemSelected = isSelected(_id, selectedRows);\r\n\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={_id}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            onClick={() =>\r\n                              handleSelectedRows(\r\n                                _id,\r\n                                selectedRows,\r\n                                setSelectedRows\r\n                              )\r\n                            }\r\n                            color=\"primary\"\r\n                            checked={isItemSelected}\r\n                            inputProps={{\r\n                              \"aria-labelledby\": labelId,\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n\r\n                        <TableCell\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          align=\"left\"\r\n                          className={classes.tableCell}\r\n                          style={{ color: theme.palette.common.black }}\r\n                        >\r\n                          {dateMoment(createdAt)}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          align=\"left\"\r\n                          className={classes.tableCell}\r\n                          style={{ color: theme.palette.common.black }}\r\n                        >\r\n                          {email}\r\n                        </TableCell>\r\n\r\n                        <TableCell\r\n                          align=\"left\"\r\n                          className={classes.tableCell}\r\n                          style={{ color: theme.palette.common.red }}\r\n                        >\r\n                          {role}\r\n                        </TableCell>\r\n\r\n                        <TableCell>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            className={classes.button}\r\n                            component={Link}\r\n                            to={`email/${index}`}\r\n                            endIcon={<ArrowForwardIosIcon />}\r\n                          >\r\n                            View mail\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n            </EnhancedTable>\r\n          ) : (\r\n            <NoData />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Modals\r\n        isOpen={isOpen}\r\n        title=\"Filter\"\r\n        rowSpacing={5}\r\n        handleClose={handleDialogClose}\r\n      >\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={onSubmit}\r\n          validateOnBlur={false}\r\n          validationSchema={validationSchema}\r\n          validateOnChange={false}\r\n          validateOnMount={false}\r\n        >\r\n          {({ isSubmitting, isValid, dirty }) => {\r\n            return (\r\n              <Form style={{ marginTop: \"3rem\" }}>\r\n                <Grid item container direction=\"column\">\r\n                  <Grid item container spacing={2}>\r\n                    <Grid item xs={6} marginBottom={4}>\r\n                      <FormikControl\r\n                        control=\"input\"\r\n                        name=\"referral\"\r\n                        options={genderType}\r\n                        label=\"Name\"\r\n                        placeholder=\"Select Name\"\r\n                      />\r\n                    </Grid>\r\n                    {/* second grid */}\r\n                    <Grid item xs={6}>\r\n                      <FormikControl\r\n                        control=\"select\"\r\n                        name=\"date\"\r\n                        options={plans}\r\n                        label=\"Date\"\r\n                        placeholder=\"Choose Date\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item container spacing={2}>\r\n                    <Grid item container gap={1} xs={6}>\r\n                      <FormikControl\r\n                        control=\"select\"\r\n                        name=\"category\"\r\n                        options={plans1}\r\n                        label=\"Category\"\r\n                        placeholder=\"Save Category\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item container xs={12} marginTop={20}>\r\n                  <CustomButton\r\n                    title=\" Apply Filter\"\r\n                    width=\"100%\"\r\n                    type={buttonType}\r\n                    isSubmitting={isSubmitting}\r\n                    disabled={!(dirty || isValid)}\r\n                  />\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modals>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Email;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\CreateMessage.js",["716"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\nimport PreviousButton from \"components/Utilities/PreviousButton\";\r\nimport { Divider, Grid, Typography } from \"@mui/material\";\r\nimport FormikControl from \"components/validation/FormikControl\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { CREATE_MESSAGE } from \"components/graphQL/Mutation\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  getMessage,\r\n  getProfileByDociId,\r\n  getDoctorByDociId,\r\n} from \"components/graphQL/useQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridWrapper: {\r\n    \"&.MuiGrid-item\": {\r\n      borderRadius: \"1rem\",\r\n      background: \"#fff\",\r\n      padding: \"2rem 4rem\",\r\n      maxWidth: \"60rem !important\",\r\n      boxShadow: \"-1px 0px 10px -2px rgba(0,0,0,0.1)\",\r\n    },\r\n  },\r\n  inputGrid: {\r\n    flex: 1,\r\n  },\r\n  heading: {\r\n    \"&.MuiTypography-root\": {\r\n      color: theme.palette.common.grey,\r\n      //   fontSize: \"1rem\"\r\n    },\r\n  },\r\n  formInput: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    fontSize: \"1.5rem\",\r\n    padding: \".5rem 1rem\",\r\n    border: \"none\",\r\n    background: \"transparent\",\r\n    color: theme.palette.common.grey,\r\n\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n    },\r\n  },\r\n  textArea: {\r\n    border: \"1px solid rgba(0, 0, 0, 0.03)\",\r\n    resize: \"none\",\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n  divider: {\r\n    \"&.MuiDivider-root\": {\r\n      borderColor: \"rgba(0, 0, 0, 0.03)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CreateMessage = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  let history = useHistory();\r\n  const [createNewMessage] = useMutation(CREATE_MESSAGE, {\r\n    refetchQueries: [{ query: getMessage }],\r\n  });\r\n  const [recipientValue, setRecipientvalue] = useState(\"\");\r\n  const { data, refetch, error } = useQuery(getProfileByDociId, {\r\n    fetchPolicy: \"network-only\",\r\n    nextFetchPolicy: \"network-only\",\r\n  });\r\n  const { data: doctorProfile, refetch: refetch2 } = useQuery(\r\n    getDoctorByDociId,\r\n    {\r\n      fetchPolicy: \"network-only\",\r\n      nextFetchPolicy: \"network-only\",\r\n    }\r\n  );\r\n\r\n  const buttonType = {\r\n    background: theme.palette.common.black,\r\n    hover: theme.palette.primary.main,\r\n    active: theme.palette.primary.dark,\r\n    disabled: theme.palette.common.black,\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    subject: Yup.string(\"Enter your subject\")\r\n      .trim()\r\n      .required(\"Subject is required\"),\r\n    textarea: Yup.string(\"Enter your message\")\r\n      .trim()\r\n      .required(\"Message is required\"),\r\n    recipient: Yup.string(\"Enter your recipient\")\r\n      .trim()\r\n      .required(\"recipients is required\"),\r\n  });\r\n\r\n  const [recipient, setRecipient] = useState(\"\");\r\n  const { firstName, lastName, _id } = recipient.length > 0 && recipient[0];\r\n\r\n  const onSubmit = async (values, onSubmitProps) => {\r\n    const id = localStorage.getItem(\"user_id\");\r\n    const { subject, textarea, recipient } = values;\r\n    console.log(subject, recipient);\r\n    try {\r\n      await createNewMessage({\r\n        variables: {\r\n          sender: id,\r\n          recipient: _id ? _id : recipient,\r\n          subject,\r\n          body: textarea,\r\n        },\r\n      });\r\n\r\n      history.push(\"/messages\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    onSubmitProps.resetForm();\r\n  };\r\n  const onChange = useCallback(\r\n    async (e) => {\r\n      setRecipientvalue(e);\r\n      await refetch({\r\n        dociId: `HEALA-${e.toUpperCase()}`,\r\n      });\r\n      if ((data && data.profiles.data.length < 1) || error) {\r\n        await refetch2({ dociId: `HEALA-${e.toUpperCase()}` });\r\n      }\r\n    },\r\n    [refetch, refetch2, data, error]\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (data && data.profiles.data.length > 0) {\r\n        setRecipient(data.profiles.data);\r\n      }\r\n    })();\r\n  }, [data, recipientValue, onChange]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (doctorProfile && doctorProfile.doctorProfiles.profile.length > 0) {\r\n        setRecipient(doctorProfile.doctorProfiles.profile);\r\n      }\r\n    })();\r\n  }, [doctorProfile, onChange, recipientValue]);\r\n  const initialValues = {\r\n    subject: \"\",\r\n    recipient: recipient ? `${firstName} ${lastName} ` : \"\",\r\n    textarea: \"\",\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={onSubmit}\r\n      validationSchema={validationSchema}\r\n      validateOnChange={false}\r\n      validateOnMount={false}\r\n      validateOnBlur={false}\r\n      enableReinitialize\r\n    >\r\n      {({ isValid, isSubmitting, dirty, values }) => {\r\n        return (\r\n          <Form onChange={setRecipientvalue(values.recipient)}>\r\n            {/* /*setRecipientvalue(values.recipient)*/}\r\n            <Grid container direction=\"column\">\r\n              <Grid item style={{ marginBottom: \"3rem\" }}>\r\n                <PreviousButton path={`/messages`} />\r\n              </Grid>\r\n              <Grid item container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                  <Typography variant=\"h4\" style={{ marginBottom: \"3rem\" }}>\r\n                    Create New Message\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  direction=\"column\"\r\n                  className={classes.gridWrapper}\r\n                >\r\n                  <Grid item style={{ marginBottom: \"3rem\" }}>\r\n                    <Grid container alignItems=\"center\">\r\n                      <Grid item>\r\n                        <Typography variant=\"body2\" className={classes.heading}>\r\n                          Recipient:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item className={classes.inputGrid}>\r\n                        <FormikControl\r\n                          control=\"input\"\r\n                          id=\"message\"\r\n                          onBlur={() => onChange(values.recipient)}\r\n                          name=\"recipient\"\r\n                          variant=\"standard\"\r\n                          className={classes.formInput}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Divider className={classes.divider} />\r\n                  </Grid>\r\n                  <Grid item style={{ marginBottom: \"3rem\" }}>\r\n                    <Grid container alignItems=\"center\">\r\n                      <Grid item>\r\n                        <Typography variant=\"body2\" className={classes.heading}>\r\n                          Subject:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item className={classes.inputGrid}>\r\n                        <FormikControl\r\n                          control=\"input\"\r\n                          id=\"subject\"\r\n                          name=\"subject\"\r\n                          variant=\"standard\"\r\n                          className={classes.formInput}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Divider className={classes.divider} />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Grid container direction=\"column\">\r\n                      <Grid item>\r\n                        <Typography variant=\"body2\" className={classes.heading}>\r\n                          Message:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item style={{ height: \"15rem\" }}>\r\n                        <FormikControl\r\n                          control=\"textarea\"\r\n                          id=\"textarea\"\r\n                          name=\"textarea\"\r\n                          variant=\"standard\"\r\n                          fLabel={true}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                    {/* <Divider className={classes.divider} /> */}\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    style={{ alignSelf: \"flex-end\", marginTop: \"2rem\" }}\r\n                  >\r\n                    <CustomButton\r\n                      title=\"Send Message\"\r\n                      width=\"100%\"\r\n                      type={buttonType}\r\n                      isSubmitting={isSubmitting}\r\n                      disabled={!(dirty || isValid)}\r\n                      // endIcon={<ArrowForwardIosIcon style={{ fontSize: \"1.5rem\" }} />}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n\r\n  // );\r\n};\r\n\r\nexport default CreateMessage;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\CreateEmail.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Consultations.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Setting.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ScheduledRequest.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ViewResult.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ScheduledRequestProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Profiles.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Profile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\PendingProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\CaseNotes.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\PendingOrderProfile.js",["717"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { getErrors } from \"components/Utilities/Time\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport * as Yup from \"yup\";\r\nimport { FormikControl } from \"components/validation\";\r\nimport { Formik, Form } from \"formik\";\r\nimport {\r\n  DisplayProfile,\r\n  PreviousButton,\r\n  CustomButton,\r\n  Loader,\r\n  Modals,\r\n} from \"components/Utilities\";\r\nimport { NoData } from \"components/layouts\";\r\n// import displayPhoto from 'assets/images/avatar.svg'\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport DisablePatient from \"components/modals/DeleteOrDisable\";\r\nimport { dateMoment } from \"components/Utilities/Time\";\r\nimport Success from \"components/modals/Success\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { Chip, Grid, Typography } from \"@mui/material\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  getDrugOrder,\r\n  getDrugOrders,\r\n  cancelDrugOrder,\r\n} from \"components/graphQL/useQuery\";\r\nimport { updateDrugOrder } from \"components/graphQL/Mutation\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridsWrapper: {\r\n    background: \"#fff\",\r\n    borderRadius: \"1rem\",\r\n    padding: \"5rem\",\r\n    gap: \"max(2rem, 3vw)\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"nowrap\",\r\n    width: \"100%\",\r\n    boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.2)\",\r\n  },\r\n\r\n  cardsWrapper: {\r\n    \"&.MuiGrid-root > *\": {\r\n      flexWrap: \"wrap\",\r\n    },\r\n  },\r\n  card: {\r\n    \"&.MuiGrid-root\": {\r\n      height: \"100%\",\r\n      borderRadius: \"1rem\",\r\n      flexDirection: \"column\",\r\n      padding: \"min(3rem,4vw)\",\r\n      gap: \"1rem\",\r\n    },\r\n  },\r\n\r\n  chipRoot: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    wordBreak: \"break-all\",\r\n    fontSize: \"1.3rem !important\",\r\n    color: theme.palette.common.green,\r\n    border: \"1px solid #bdbdbd\",\r\n    padding: \".4rem\",\r\n    maxWidth: \"max-content\",\r\n    minHeight: \"2rem\",\r\n  },\r\n  chipLabel: {\r\n    overflowWrap: \"break-word\",\r\n    whiteSpace: \"normal\",\r\n    textOverflow: \"clip\",\r\n  },\r\n\r\n  cardContainer: {\r\n    \"&.MuiGrid-root\": {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"repeat(2,minmax(15rem,1fr))\",\r\n      rowGap: \"3rem\",\r\n      columnGap: \"2rem\",\r\n      \"& > *\": {\r\n        flex: 1,\r\n        boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.2)\",\r\n        minHeight: \"14.9rem\",\r\n        background: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n  buttonsGridWrapper: {\r\n    marginTop: \"5rem !important\",\r\n  },\r\n\r\n  title: {\r\n    \"&.MuiTypography-root\": {\r\n      color: theme.palette.common.grey,\r\n    },\r\n  },\r\n  // gridsWrapper: {\r\n  //   background: \"#fff\",\r\n  //   borderRadius: \"1rem\",\r\n  //   padding: \"4rem\",\r\n  //   boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.2)\",\r\n  // },\r\n\r\n  // badge: {\r\n  //   \"&.MuiChip-root\": {\r\n  //     fontSize: \"1.3rem !important\",\r\n  //     //   height: \"2.7rem\",\r\n  //     background: theme.palette.common.lightGreen,\r\n  //     color: theme.palette.common.green,\r\n  //     borderRadius: \"1.5rem\",\r\n  //   },\r\n  // },\r\n\r\n  // cardGrid: {\r\n  //   background: \"#fff\",\r\n  //   borderRadius: \"1rem\",\r\n  //   padding: \"4rem 5rem\",\r\n  //   height: \"16.1rem\",\r\n  //   boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.2)\",\r\n  // },\r\n\r\n  // infoBadge: {\r\n  //   \"&.MuiChip-root\": {\r\n  //     fontSize: \"1.25rem\",\r\n  //     borderRadius: \"1.5rem\",\r\n  //     color: theme.palette.common.green,\r\n  //   },\r\n  // },\r\n\r\n  // link: {\r\n  //   display: \"flex\",\r\n  //   alignItems: \"center\",\r\n  //   fontSize: \"1.25rem\",\r\n  //   color: theme.palette.common.green,\r\n  //   border: `1px solid ${theme.palette.common.lightGrey}`,\r\n  //   padding: \".75rem\",\r\n  //   borderRadius: \"1.5rem\",\r\n  //   textDecoration: \"none\",\r\n  // },\r\n\r\n  // linkIcon: {\r\n  //   \"&.MuiSvgIcon-root\": {\r\n  //     fontSize: \"1.25rem\",\r\n  //     color: theme.palette.common.green,\r\n  //     marginLeft: \"1.2rem\",\r\n  //   },\r\n  // },\r\n\r\n  // buttonsGridWrapper: {\r\n  //   marginTop: \"5rem !important\",\r\n  //   height: \"16.1rem\",\r\n  // },\r\n}));\r\n\r\nconst PendingOrderProfile = () => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { orderId } = useParams();\r\n\r\n  const { data, loading, error } = useQuery(getDrugOrder, {\r\n    variables: { id: orderId },\r\n  });\r\n  const [state, setState] = useState([]);\r\n  const [fulfill] = useMutation(updateDrugOrder);\r\n  useEffect(() => {\r\n    if (data) return setState(data?.getDrugOrder);\r\n  }, [data]);\r\n  const onConfirm = () => setCancel(true);\r\n\r\n  const [openDisablePatient, setOpenDisablePatient] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [cancel, setCancel] = useState(false);\r\n  const [openProcess, setOpenProcess] = useState(false);\r\n  const handleDialogClose = () => setOpenProcess(false);\r\n  const handleDialogOpen = () => setOpenProcess(true);\r\n\r\n  const onConfirm2 = async () => {\r\n    setModal(true);\r\n    try {\r\n      await fulfill({\r\n        variables: {\r\n          id: orderId,\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: getDrugOrders,\r\n            variables: {\r\n              status: \"pending\",\r\n            },\r\n          },\r\n\r\n          {\r\n            query: getDrugOrders,\r\n            variables: {\r\n              status: \"processing\",\r\n            },\r\n          },\r\n        ],\r\n      });\r\n      enqueueSnackbar(\"Test scheduled\", {\r\n        variant: \"success\",\r\n      });\r\n      history.push(\"/processing-order\");\r\n    } catch (error) {\r\n      enqueueSnackbar(getErrors(error), {\r\n        variant: \"error\",\r\n      });\r\n      console.error(error);\r\n    }\r\n\r\n    setModal(false);\r\n  };\r\n  const [cancelTest] = useMutation(cancelDrugOrder);\r\n\r\n  const darkButton = {\r\n    background: theme.palette.primary.main,\r\n    hover: theme.palette.primary.light,\r\n    active: theme.palette.primary.dark,\r\n  };\r\n\r\n  const trasparentButton = {\r\n    background: \"transparent\",\r\n    hover: \"#fafafa\",\r\n    active: \"#f4f4f4\",\r\n  };\r\n  const history = useHistory();\r\n\r\n  const initialValues = {\r\n    reason: \"\",\r\n  };\r\n  const validationSchema = Yup.object({\r\n    reason: Yup.string(\"Enter Reason \").trim().required(\"Reason is required\"),\r\n  });\r\n  const onSubmit = async (values) => {\r\n    const { reason } = values;\r\n    try {\r\n      await cancelTest({\r\n        variables: {\r\n          id: orderId,\r\n          reason,\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: getDrugOrders,\r\n            variables: {\r\n              status: \"pending\",\r\n            },\r\n          },\r\n          {\r\n            query: getDrugOrders,\r\n            variables: {\r\n              status: \"processing\",\r\n            },\r\n          },\r\n          {\r\n            query: getDrugOrders,\r\n            variables: {\r\n              status: \"cancelled\",\r\n            },\r\n          },\r\n        ],\r\n      });\r\n      history.push(\"/cancelled-order\");\r\n      enqueueSnackbar(\"Test cancelled\", {\r\n        variant: \"success\",\r\n      });\r\n    } catch (error) {\r\n      enqueueSnackbar(getErrors(error), {\r\n        variant: \"error\",\r\n      });\r\n      console.error(error);\r\n    }\r\n  };\r\n  const {\r\n    createdAt,\r\n    affliation,\r\n    prescriptions,\r\n    orderId: idOrder,\r\n    doctorData,\r\n    patientData,\r\n    // eslint-disable-next-line\r\n  } = state;\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\">\r\n        <Grid item style={{ marginBottom: \"3rem\" }}>\r\n          <PreviousButton path={\"/pending-order\"} />\r\n        </Grid>\r\n        {/* Display photo and profile name grid */}\r\n        <Grid item>\r\n          <DisplayProfile\r\n            medicalTitle=\"User ID\"\r\n            patientData={patientData}\r\n            chatPath={`/patients/${orderId}/profile/chat`}\r\n          />\r\n        </Grid>\r\n        {/* PERSONAL INFO SECTION */}\r\n        <Grid\r\n          item\r\n          container\r\n          className={classes.cardContainer}\r\n          ga\r\n          sx={{ paddingTop: \"5rem\" }}\r\n        >\r\n          <Grid item container md={12} xs={12} className={classes.card}>\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Date </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                variant=\"outlined\"\r\n                label={dateMoment(createdAt)}\r\n                classes={{\r\n                  root: classes.chipRoot,\r\n                  label: classes.chipLabel,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container md={12} xs={12} className={classes.card}>\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Order ID</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                label={idOrder}\r\n                variant=\"outlined\"\r\n                classes={{\r\n                  root: classes.chipRoot,\r\n                  label: classes.chipLabel,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container md={12} xs={12} className={classes.card}>\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Doctor Name</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                label={\r\n                  doctorData\r\n                    ? `${doctorData.firstName} ${doctorData.lastName}`\r\n                    : \"No Value\"\r\n                }\r\n                variant=\"outlined\"\r\n                classes={{\r\n                  root: classes.chipRoot,\r\n                  label: classes.chipLabel,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container md={12} xs={12} className={classes.card}>\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Diagnostics</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                variant=\"outlined\"\r\n                label=\"Chisom Sule\"\r\n                classes={{\r\n                  root: classes.chipRoot,\r\n                  label: classes.chipLabel,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container md={12} xs={12} className={classes.card}>\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Affliation</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                variant=\"outlined\"\r\n                label={affliation ? affliation : \"No Value\"}\r\n                classes={{\r\n                  root: classes.chipRoot,\r\n                  label: classes.chipLabel,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {prescriptions &&\r\n            prescriptions.map((i, index) => {\r\n              return (\r\n                <Grid item container md={12} xs={12} className={classes.card}>\r\n                  <Grid item>\r\n                    <Typography variant=\"h4\">\r\n                      {index + 1} Prescription\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item container flexWrap=\"nowrap\" gap={3}>\r\n                    {/* {prescriptions && prescriptions.length > 0 ? ( */}\r\n                    <Grid item container flexWrap=\"nowrap\" gap={3}>\r\n                      <ul style={{ padding: \"2rem\", color: \"#606060\" }}>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                          <li>Drugs : {i.drugName}</li>\r\n                        </Typography>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                          <li>Dosage : {i.drugName}</li>\r\n                        </Typography>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                          <li>Dosage Quantity: {i.dosageQuantity}</li>\r\n                        </Typography>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                          <li>Drug Price : {i.drugPrice}</li>\r\n                        </Typography>\r\n                      </ul>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              );\r\n            })}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        gap={4}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        className={`${classes.gridsWrapper} ${classes.buttonsGridWrapper}`}\r\n      >\r\n        <Grid item xs={3}>\r\n          <CustomButton\r\n            variant=\"contained\"\r\n            title=\"Cancel Request\"\r\n            type={trasparentButton}\r\n            width=\"100%\"\r\n            textColor={theme.palette.common.black}\r\n            onClick={() => setOpenDisablePatient(true)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <CustomButton\r\n            variant=\"contained\"\r\n            title=\"Process Order\"\r\n            width=\"100%\"\r\n            type={darkButton}\r\n            onClick={handleDialogOpen}\r\n          />\r\n        </Grid>\r\n        <DisablePatient\r\n          open={openProcess}\r\n          setOpen={setOpenDisablePatient}\r\n          title=\"Process Order\"\r\n          btnValue=\"process\"\r\n          confirmationMsg=\"Process Order\"\r\n          onConfirm={onConfirm2}\r\n        />\r\n\r\n        <DisablePatient\r\n          open={openDisablePatient}\r\n          setOpen={setOpenDisablePatient}\r\n          title=\"Cancel Referral\"\r\n          btnValue=\"cancel\"\r\n          confirmationMsg=\"Cancel Referral\"\r\n          onConfirm={onConfirm}\r\n        />\r\n        <Success\r\n          open={modal}\r\n          handleDialogClose={handleDialogClose}\r\n          title=\"SUCCESSFUL\"\r\n          titleHeader=\"\"\r\n          btnValue=\"Done\"\r\n          confirmationMsg=\"Your order has been successful\"\r\n        />\r\n      </Grid>\r\n      <Modals\r\n        isOpen={cancel}\r\n        title=\"Cancel Test\"\r\n        rowSpacing={5}\r\n        handleClose={() => setCancel(false)}\r\n      >\r\n        <Formik\r\n          onSubmit={onSubmit}\r\n          validationSchema={validationSchema}\r\n          validateOnChange={false}\r\n          validateOnMount={false}\r\n          initialValues={initialValues}\r\n          enableReinitialize\r\n        >\r\n          {({ isSubmitting, dirty, isValid }) => {\r\n            return (\r\n              <Form style={{ marginTop: \"3rem\" }}>\r\n                <Grid container>\r\n                  <Grid item container>\r\n                    <FormikControl\r\n                      control=\"input\"\r\n                      label=\"State a Reason\"\r\n                      name=\"reason\"\r\n                      placeholder=\"Enter reason\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item container sx={{ flexGrow: 1, marginTop: \"10rem\" }}>\r\n                    <CustomButton\r\n                      title=\"Cancel Test\"\r\n                      type={darkButton}\r\n                      width=\"100%\"\r\n                      isSubmitting={isSubmitting}\r\n                      disabled={!(dirty || isValid)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modals>\r\n    </>\r\n  );\r\n};\r\n\r\nPendingOrderProfile.propTypes = {\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default PendingOrderProfile;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Pending.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Appointments.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Administrator.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ViewCompleted.js",["718"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { DisplayProfile, PreviousButton, Loader } from \"components/Utilities\";\r\nimport { NoData } from \"components/layouts\";\r\nimport { dateMoment } from \"components/Utilities/Time\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Chip, Grid, Typography } from \"@mui/material\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { getDrugOrder } from \"components/graphQL/useQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridsWrapper: {\r\n    background: \"#fff\",\r\n    borderRadius: \"1rem\",\r\n    padding: \"5rem\",\r\n    gap: \"max(2rem, 3vw)\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"nowrap\",\r\n    width: \"100%\",\r\n    boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.2)\",\r\n  },\r\n\r\n  cardsWrapper: {\r\n    \"&.MuiGrid-root > *\": {\r\n      flexWrap: \"wrap\",\r\n    },\r\n  },\r\n  card: {\r\n    \"&.MuiGrid-root\": {\r\n      height: \"100%\",\r\n      borderRadius: \"1rem\",\r\n      flexDirection: \"column\",\r\n      padding: \"min(3rem,4vw)\",\r\n      gap: \"1rem\",\r\n    },\r\n  },\r\n\r\n  chipRoot: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    wordBreak: \"break-all\",\r\n    fontSize: \"1.3rem !important\",\r\n    border: \"1px solid #bdbdbd\",\r\n    padding: \".4rem\",\r\n    maxWidth: \"max-content\",\r\n    minHeight: \"2rem\",\r\n    color: \"#2dd39e !important\",\r\n  },\r\n  chipLabel: {\r\n    overflowWrap: \"break-word\",\r\n    whiteSpace: \"normal\",\r\n    textOverflow: \"clip\",\r\n  },\r\n\r\n  cardContainer: {\r\n    \"&.MuiGrid-root\": {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"repeat(2,minmax(15rem,1fr))\",\r\n      rowGap: \"3rem\",\r\n      columnGap: \"2rem\",\r\n      \"& > *\": {\r\n        flex: 1,\r\n        boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.2)\",\r\n        minHeight: \"14.9rem\",\r\n        background: \"#fff\",\r\n      },\r\n      \"@media (max-width:600px)\": {\r\n        gridTemplateColumns: \"1fr\",\r\n        \"& > *\": {\r\n          minHeight: \"12rem\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n  buttonsGridWrapper: {\r\n    marginTop: \"5rem !important\",\r\n  },\r\n\r\n  title: {\r\n    \"&.MuiTypography-root\": {\r\n      color: theme.palette.common.grey,\r\n    },\r\n  },\r\n  // gridsWrapper: {\r\n  //   background: \"#fff\",\r\n  //   borderRadius: \"1rem\",\r\n  //   padding: \"4rem\",\r\n  //   boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.2)\",\r\n  // },\r\n\r\n  // badge: {\r\n  //   \"&.MuiChip-root\": {\r\n  //     fontSize: \"1.3rem !important\",\r\n  //     //   height: \"2.7rem\",\r\n  //     background: theme.palette.common.lightGreen,\r\n  //     color: theme.palette.common.green,\r\n  //     borderRadius: \"1.5rem\",\r\n  //   },\r\n  // },\r\n\r\n  // cardGrid: {\r\n  //   background: \"#fff\",\r\n  //   borderRadius: \"1rem\",\r\n  //   padding: \"4rem 5rem\",\r\n  //   height: \"16.1rem\",\r\n  //   boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.2)\",\r\n  // },\r\n\r\n  // infoBadge: {\r\n  //   \"&.MuiChip-root\": {\r\n  //     fontSize: \"1.25rem\",\r\n  //     borderRadius: \"1.5rem\",\r\n  //     color: theme.palette.common.green,\r\n  //   },\r\n  // },\r\n\r\n  // link: {\r\n  //   display: \"flex\",\r\n  //   alignItems: \"center\",\r\n  //   fontSize: \"1.25rem\",\r\n  //   color: theme.palette.common.green,\r\n  //   border: `1px solid ${theme.palette.common.lightGrey}`,\r\n  //   padding: \".75rem\",\r\n  //   borderRadius: \"1.5rem\",\r\n  //   textDecoration: \"none\",\r\n  // },\r\n\r\n  // linkIcon: {\r\n  //   \"&.MuiSvgIcon-root\": {\r\n  //     fontSize: \"1.25rem\",\r\n  //     color: theme.palette.common.green,\r\n  //     marginLeft: \"1.2rem\",\r\n  //   },\r\n  // },\r\n\r\n  // buttonsGridWrapper: {\r\n  //   marginTop: \"5rem !important\",\r\n  //   height: \"16.1rem\",\r\n  // },\r\n}));\r\n\r\nconst ViewCompleted = () => {\r\n  const classes = useStyles();\r\n  const { orderId } = useParams();\r\n\r\n  const { data, loading, error } = useQuery(getDrugOrder, {\r\n    variables: { id: orderId },\r\n  });\r\n  const [state, setState] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data) return setState(data?.getDrugOrder);\r\n  }, [data]);\r\n\r\n  const {\r\n    createdAt,\r\n    affliation,\r\n    prescriptions,\r\n    orderId: idOrder,\r\n    doctorData,\r\n    patientData,\r\n    // eslint-disable-next-line\r\n  } = state;\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" style={{ paddingBottom: \"10rem\" }}>\r\n        <Grid item style={{ marginBottom: \"3rem\" }}>\r\n          <PreviousButton path={\"/completed-order\"} />\r\n        </Grid>\r\n        {/* Display photo and profile name grid */}\r\n        <Grid item>\r\n          <DisplayProfile medicalTitle=\"User ID\" patientData={patientData} />\r\n        </Grid>\r\n        {/* PERSONAL INFO SECTION */}\r\n        <Grid\r\n          item\r\n          container\r\n          className={classes.cardContainer}\r\n          ga\r\n          sx={{ paddingTop: \"5rem\" }}\r\n        >\r\n          <Grid item xs={12} md={12} container className={classes.card}>\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Patient Name</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                variant=\"outlined\"\r\n                label={\r\n                  patientData\r\n                    ? `${patientData.firstName} ${patientData.lastName}`\r\n                    : \"no Value\"\r\n                }\r\n                classes={{\r\n                  root: classes.chipRoot,\r\n                  label: classes.chipLabel,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container className={classes.card}>\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Date </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                variant=\"outlined\"\r\n                label={dateMoment(createdAt)}\r\n                classes={{\r\n                  root: classes.chipRoot,\r\n                  label: classes.chipLabel,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container className={classes.card}>\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Order ID</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                label={idOrder}\r\n                variant=\"outlined\"\r\n                classes={{\r\n                  root: classes.chipRoot,\r\n                  label: classes.chipLabel,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container className={classes.card}>\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Doctor Name</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                label={\r\n                  doctorData\r\n                    ? `${doctorData.firstName} ${doctorData.lastName}`\r\n                    : \"No Value\"\r\n                }\r\n                variant=\"outlined\"\r\n                classes={{\r\n                  root: classes.chipRoot,\r\n                  label: classes.chipLabel,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container className={classes.card}>\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Diagnostics</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                variant=\"outlined\"\r\n                label=\"Chisom Sule\"\r\n                classes={{\r\n                  root: classes.chipRoot,\r\n                  label: classes.chipLabel,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container className={classes.card}>\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Affliation</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                variant=\"outlined\"\r\n                label={affliation ? affliation : \"No Value\"}\r\n                classes={{\r\n                  root: classes.chipRoot,\r\n                  label: classes.chipLabel,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {prescriptions &&\r\n            prescriptions.map((i, index) => {\r\n              return (\r\n                <Grid item container className={classes.card}>\r\n                  <Grid item>\r\n                    <Typography variant=\"h4\">\r\n                      {index + 1} Prescription\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item container flexWrap=\"nowrap\" gap={3}>\r\n                    {/* {prescriptions && prescriptions.length > 0 ? ( */}\r\n                    <Grid item container flexWrap=\"nowrap\" gap={3}>\r\n                      <ul style={{ padding: \"2rem\", color: \"#606060\" }}>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                          <li>Drugs : {i.drugName}</li>\r\n                        </Typography>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                          <li>Dosage : {i.drugName}</li>\r\n                        </Typography>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                          <li>Dosage Quantity: {i.dosageQuantity}</li>\r\n                        </Typography>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                          <li>Drug Price : {i.drugPrice}</li>\r\n                        </Typography>\r\n                      </ul>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              );\r\n            })}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nViewCompleted.propTypes = {\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default ViewCompleted;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\PendingOrder.js",["719"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { dateMoment } from \"components/Utilities/Time\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  Chip,\r\n  Avatar,\r\n  TableRow,\r\n  FormLabel,\r\n  Checkbox,\r\n  TableCell,\r\n} from \"@mui/material\";\r\nimport { Modals, Search, FilterList, Loader } from \"components/Utilities\";\r\nimport FormSelect from \"components/Utilities/FormSelect\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { patientsHeadCells } from \"components/Utilities/tableHeaders\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport displayPhoto from \"assets/images/avatar.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport useFormInput from \"components/hooks/useFormInput\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { getDrugOrders } from \"components/graphQL/useQuery\";\r\nimport { NoData, EmptyTable } from \"components/layouts\"; //\r\nimport prettyMoney from \"pretty-money\";\r\n\r\nconst referralOptions = [\"Hello\", \"World\", \"Goodbye\", \"World\"];\r\n\r\nconst plans = [\"Plan 1\", \"Plan 2\", \"Plan 3\", \"Plan 4\"];\r\nconst genderType = [\"Male\", \"Female\", \"Prefer not to say\"];\r\nconst statusType = [\"Active\", \"Blocked\"];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n      textAlign: \"left\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.25rem !important\",\r\n      height: \"2.7rem\",\r\n\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n  chip: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.25rem\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n      background: theme.palette.common.white,\r\n      color: theme.palette.common.grey,\r\n      \"& .MuiChip-deleteIcon\": {\r\n        color: \"inherit\",\r\n        fontSize: \"inherit\",\r\n      },\r\n    },\r\n  },\r\n  searchFilterBtn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      background: theme.palette.common.black,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst PendingOrder = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [state, setState] = useState([]);\r\n  const orderState = \"pending\";\r\n  const { data, loading, error } = useQuery(getDrugOrders, {\r\n    variables: { status: orderState },\r\n  });\r\n  useEffect(() => {\r\n    if (data) return setState(data?.getDrugOrders.data);\r\n  }, [data]);\r\n\r\n  const [inputValue, handleInputValue] = useFormInput({\r\n    date: \"\",\r\n    plan: \"\",\r\n    gender: \"\",\r\n    status: \"\",\r\n  });\r\n\r\n  const { date, plan, gender, status } = inputValue;\r\n\r\n  const { rowsPerPage, selectedRows, page } = useSelector(\r\n    (state) => state.tables\r\n  );\r\n  const { setSelectedRows } = useActions();\r\n\r\n  const [searchPatient, setSearchPatient] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleDialogOpen = () => setIsOpen(true);\r\n  const handleDialogClose = () => setIsOpen(false);\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  const prettyDollarConfig = {\r\n    currency: \"₦\",\r\n    position: \"before\",\r\n    spaced: false,\r\n    thousandsDelimiter: \",\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        gap={2}\r\n        flexWrap=\"nowrap\"\r\n        height=\"100%\"\r\n      >\r\n        <Grid item container>\r\n          <Grid item className={classes.searchGrid}>\r\n            <Search\r\n              value={searchPatient}\r\n              onChange={(e) => setSearchPatient(e.target.value)}\r\n              placeholder=\"Type to search referrals...\"\r\n              height=\"5rem\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <FilterList\r\n              title=\"Filter referrals\"\r\n              width=\"15.2rem\"\r\n              onClick={handleDialogOpen}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* The Search and Filter ends here */}\r\n        {state.length > 0 ? (\r\n          <Grid item container height=\"100%\" direction=\"column\">\r\n            <EnhancedTable\r\n              headCells={patientsHeadCells}\r\n              rows={state}\r\n              page={page}\r\n              paginationLabel=\"orders per page\"\r\n              hasCheckbox={true}\r\n            >\r\n              {state.length > 0 &&\r\n                state\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const {\r\n                      orderId,\r\n                      createdAt,\r\n                      _id,\r\n                      patientData,\r\n                      doctorData,\r\n                      prescriptions,\r\n                    } = row;\r\n                    const isItemSelected = isSelected(_id, selectedRows);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n                    const x = prescriptions.map((i) => i.drugPrice);\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={_id}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            onClick={() =>\r\n                              handleSelectedRows(\r\n                                _id,\r\n                                selectedRows,\r\n                                setSelectedRows\r\n                              )\r\n                            }\r\n                            color=\"primary\"\r\n                            checked={isItemSelected}\r\n                            inputProps={{\r\n                              \"aria-labelledby\": labelId,\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          align=\"left\"\r\n                          className={classes.tableCell}\r\n                          style={{ color: theme.palette.common.grey }}\r\n                        >\r\n                          {dateMoment(createdAt)}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\" className={classes.tableCell}>\r\n                          {orderId}\r\n                        </TableCell>\r\n\r\n                        <TableCell align=\"left\" className={classes.tableCell}>\r\n                          <div\r\n                            style={{\r\n                              height: \"100%\",\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                          >\r\n                            <span style={{ marginRight: \"1rem\" }}>\r\n                              <Avatar\r\n                                alt={`Display Photo of ${doctorData?.firstName}`}\r\n                                src={doctorData?.picture || displayPhoto}\r\n                                sx={{ width: 24, height: 24 }}\r\n                              />\r\n                            </span>\r\n                            <span style={{ fontSize: \"1.25rem\" }}>\r\n                              {doctorData\r\n                                ? `${doctorData?.firstName} ${doctorData?.lastName}`\r\n                                : \"No Value\"}\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\" className={classes.tableCell}>\r\n                          <div\r\n                            style={{\r\n                              height: \"100%\",\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                          >\r\n                            <span style={{ marginRight: \"1rem\" }}>\r\n                              <Avatar\r\n                                alt={`Display Photo of ${patientData?.firstName}`}\r\n                                src={patientData?.image || displayPhoto}\r\n                                sx={{ width: 24, height: 24 }}\r\n                              />\r\n                            </span>\r\n                            <span style={{ fontSize: \"1.25rem\" }}>\r\n                              {patientData\r\n                                ? `${patientData?.firstName} ${patientData?.lastName}`\r\n                                : \"No Value\"}\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\" className={classes.tableCell}>\r\n                          {prettyMoney(\r\n                            prettyDollarConfig,\r\n                            x.reduce(function (accumulator, currentValue) {\r\n                              return accumulator + currentValue;\r\n                            }, 0)\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\" className={classes.tableCell}>\r\n                          {x.length}\r\n                        </TableCell>\r\n\r\n                        <TableCell>\r\n                          <Chip\r\n                            label=\"view request\"\r\n                            variant=\"outlined\"\r\n                            component={Link}\r\n                            to={`pending-order/${_id}/order`}\r\n                            className={classes.chip}\r\n                            type=\"pending\"\r\n                            deleteIcon={<ArrowForwardIosIcon />}\r\n                          />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={patientsHeadCells}\r\n            paginationLabel=\"Orders  per page\"\r\n            text=\"No pending Order\"\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Modals\r\n        isOpen={isOpen}\r\n        title=\"Filter\"\r\n        rowSpacing={5}\r\n        handleClose={handleDialogClose}\r\n      >\r\n        <Grid item container direction=\"column\">\r\n          <Grid item>\r\n            <Grid container spacing={2}>\r\n              <Grid item md>\r\n                <Grid container direction=\"column\">\r\n                  <Grid item>\r\n                    <FormLabel component=\"legend\" className={classes.FormLabel}>\r\n                      Date\r\n                    </FormLabel>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl fullWidth>\r\n                      <FormSelect\r\n                        name=\"date\"\r\n                        options={referralOptions}\r\n                        value={date}\r\n                        onChange={handleInputValue}\r\n                        placeholderText=\"Choose Date\"\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item md>\r\n                <Grid container direction=\"column\">\r\n                  <Grid item>\r\n                    <FormLabel component=\"legend\" className={classes.FormLabel}>\r\n                      Order ID\r\n                    </FormLabel>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl fullWidth>\r\n                      <FormSelect\r\n                        name=\"plan\"\r\n                        options={plans}\r\n                        value={plan}\r\n                        onChange={handleInputValue}\r\n                        placeholderText=\"Enter ID\"\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item style={{ marginBottom: \"18rem\", marginTop: \"3rem\" }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item md>\r\n                <Grid container direction=\"column\">\r\n                  <Grid item>\r\n                    <FormLabel component=\"legend\" className={classes.FormLabel}>\r\n                      List of Drugs\r\n                    </FormLabel>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl fullWidth style={{ height: \"3rem\" }}>\r\n                      <FormSelect\r\n                        name=\"gender\"\r\n                        options={genderType}\r\n                        value={gender}\r\n                        onChange={handleInputValue}\r\n                        placeholderText=\"Select Drugs\"\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item md>\r\n                <Grid container direction=\"column\">\r\n                  <Grid item>\r\n                    <FormLabel component=\"legend\" className={classes.FormLabel}>\r\n                      Affliation\r\n                    </FormLabel>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl fullWidth style={{ height: \"3rem\" }}>\r\n                      <FormSelect\r\n                        name=\"status\"\r\n                        options={statusType}\r\n                        value={status}\r\n                        onChange={handleInputValue}\r\n                        placeholderText=\"Select Affliation\"\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleDialogClose}\r\n              type=\"submit\"\r\n              className={classes.searchFilterBtn}\r\n            >\r\n              Apply Filter\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Modals>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PendingOrder;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\ProcessingOrders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Login.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Chat.js",["720"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Typography, Divider } from \"@mui/material\";\r\nimport Loader from \"components/Utilities/Loader\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\nimport PreviousButton from \"components/Utilities/PreviousButton\";\r\nimport FormikControl from \"components/validation/FormikControl\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { CREATE_MESSAGE } from \"components/graphQL/Mutation\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { getMessage, getProfile } from \"components/graphQL/useQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridWrapper: {\r\n    \"&.MuiGrid-item\": {\r\n      borderRadius: \"1rem\",\r\n      background: \"#fff\",\r\n      padding: \"2rem 4rem\",\r\n      maxWidth: \"60rem !important\",\r\n      boxShadow: \"-1px 0px 10px -2px rgba(0,0,0,0.1)\",\r\n    },\r\n  },\r\n  inputGrid: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n  heading: {\r\n    \"&.MuiTypography-root\": {\r\n      color: theme.palette.common.grey,\r\n      //   fontSize: \"1rem\"\r\n    },\r\n  },\r\n  formInput: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    fontSize: \"1.5rem\",\r\n    padding: \".5rem 1rem\",\r\n    border: \"none\",\r\n    background: \"transparent\",\r\n    color: theme.palette.common.grey,\r\n\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n    },\r\n  },\r\n  textArea: {\r\n    border: \"1px solid rgba(0, 0, 0, 0.03)\",\r\n    resize: \"none\",\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n  divider: {\r\n    \"&.MuiDivider-root\": {\r\n      borderColor: \"rgba(0, 0, 0, 0.03)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Chat = () => {\r\n  const { patientId } = useParams();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  let history = useHistory();\r\n  const [createNewMessage] = useMutation(CREATE_MESSAGE, {\r\n    refetchQueries: [{ query: getMessage }],\r\n  });\r\n  const { data, loading } = useQuery(getProfile, {\r\n    variables: { profileId: patientId },\r\n  });\r\n  const buttonType = {\r\n    background: theme.palette.common.black,\r\n    hover: theme.palette.primary.main,\r\n    active: theme.palette.primary.dark,\r\n    disabled: theme.palette.common.black,\r\n  };\r\n  const [profile, setprofile] = useState(\"\");\r\n  const { firstName, lastName } = profile;\r\n\r\n  const initialValues = {\r\n    subject: \"\",\r\n    recipient: `${firstName} ${lastName} ` || \"\",\r\n    textarea: \"\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setprofile(data.profile);\r\n    }\r\n  }, [data]);\r\n\r\n  const validationSchema = Yup.object({\r\n    subject: Yup.string(\"Enter your subject\")\r\n      .trim()\r\n      .required(\"Subject is required\"),\r\n    textarea: Yup.string(\"Enter your message\")\r\n      .trim()\r\n      .required(\"Message is required\"),\r\n    recipient: Yup.string(\"Enter your recipient\")\r\n      .trim()\r\n      .required(\"recipients is required\"),\r\n  });\r\n  const onSubmit = async (values, onSubmitProps) => {\r\n    const id = localStorage.getItem(\"user_id\");\r\n    const { subject, textarea } = values;\r\n\r\n    try {\r\n      await createNewMessage({\r\n        variables: {\r\n          sender: id,\r\n          recipient: patientId,\r\n          subject,\r\n          body: textarea,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    onSubmitProps.resetForm();\r\n    history.push(`/patients/${patientId}/profile`);\r\n  };\r\n\r\n  if (loading) return <Loader />;\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={onSubmit}\r\n      validateOnBlur={false}\r\n      validationSchema={validationSchema}\r\n      validateOnChange={false}\r\n      validateOnMount={false}\r\n      enableReinitialize\r\n    >\r\n      {({ isValid, isSubmitting, dirty }) => {\r\n        return (\r\n          <Form>\r\n            <Grid container direction=\"column\">\r\n              <Grid item style={{ marginBottom: \"3rem\" }}>\r\n                <PreviousButton path={`/patients/${patientId}/profile`} />\r\n              </Grid>\r\n              <Grid item container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                  <Typography variant=\"h4\" style={{ marginBottom: \"3rem\" }}>\r\n                    Create New Message\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  direction=\"column\"\r\n                  className={classes.gridWrapper}\r\n                >\r\n                  <Grid item>\r\n                    <Grid\r\n                      item\r\n                      container\r\n                      alignItems=\"center\"\r\n                      sx={{ gap: \"0!important\" }}\r\n                    >\r\n                      <Grid item>\r\n                        <Typography variant=\"body2\" className={classes.heading}>\r\n                          Recipient:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item className={classes.inputGrid}>\r\n                        <FormikControl\r\n                          control=\"input\"\r\n                          id=\"message\"\r\n                          name=\"recipient\"\r\n                          disabled\r\n                          variant=\"standard\"\r\n                          className={classes.formInput}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Divider className={classes.divider} />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Grid container alignItems=\"center\">\r\n                      <Grid item>\r\n                        <Typography variant=\"body2\" className={classes.heading}>\r\n                          Subject:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item className={classes.inputGrid}>\r\n                        <FormikControl\r\n                          control=\"input\"\r\n                          id=\"subject\"\r\n                          name=\"subject\"\r\n                          variant=\"standard\"\r\n                          className={classes.formInput}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Divider className={classes.divider} />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Grid container direction=\"column\">\r\n                      <Grid item>\r\n                        <Typography variant=\"body2\" className={classes.heading}>\r\n                          Message:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item style={{ height: \"15rem\" }}>\r\n                        <FormikControl\r\n                          control=\"textarea\"\r\n                          id=\"textarea\"\r\n                          name=\"textarea\"\r\n                          variant=\"standard\"\r\n                          fLabel={true}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                    {/* <Divider className={classes.divider} /> */}\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    style={{ alignSelf: \"flex-end\", marginTop: \"2rem\" }}\r\n                  >\r\n                    <CustomButton\r\n                      title=\"Send Message\"\r\n                      width=\"100%\"\r\n                      type={buttonType}\r\n                      isSubmitting={isSubmitting}\r\n                      disabled={!(dirty || isValid)}\r\n                      // endIcon={<ArrowForwardIosIcon style={{ fontSize: \"1.5rem\" }} />}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Dashboards.js",["721"],"import React, { useLayoutEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { DashCharts } from \"components/layouts\";\r\n\r\nconst Dashboards = () => {\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item>\r\n        <DashCharts />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nDashboards.propTypes = {\r\n  chatMediaActive: PropTypes.bool,\r\n  setChatMediaActive: PropTypes.func,\r\n};\r\n\r\nexport default Dashboards;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\Dashboard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\CompletedOrder.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\CompletedOrders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\CancelledOrder.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\pages\\CancelledOrders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\EmptyTable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\SideMenus.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\SideMenu.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\Notifications.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\NoData.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HeaderProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\LineGraph.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalMenu.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalHeaderProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HeadersProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\Header.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\Headers.js",["722","723","724","725","726","727","728"],"import React, { Fragment } from \"react\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AppBar, IconButton, Grid, Toolbar } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport HeadersContents from \"components/layouts/HeadersContents\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    \"&.MuiToolbar-root\": {\r\n      display: \"flex\",\r\n      justifyContent: \"space-around\",\r\n      padding: \"0px\",\r\n      alignItems: \"center\",\r\n      paddingInline: \"min(2.5rem,4vw)\",\r\n    },\r\n  },\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n  },\r\n}));\r\n\r\nconst Headers = (props) => {\r\n  const {\r\n    selectedMenu,\r\n    selectedSubMenu,\r\n    selectedPatientMenu,\r\n    selectedHcpMenu,\r\n    waitingListMenu,\r\n    selectedAppointmentMenu,\r\n    selectedScopedMenu,\r\n    handleDrawerToggle,\r\n    drawerWidth,\r\n  } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    // <Fragment>\r\n    //   <AppBar\r\n    //     position=\"fixed\"\r\n    //     className={classes.appBar}\r\n    //     classes={{ root: classes.appBar }}\r\n    //   >\r\n    //     <HeadersContents\r\n    //       selectedMenu={selectedMenu}\r\n    //       selectedSubMenu={selectedSubMenu}\r\n    //       selectedPatientMenu={selectedPatientMenu}\r\n    //       selectedHcpMenu={selectedHcpMenu}\r\n    //       waitingListMenu={waitingListMenu}\r\n    //       selectedAppointmentMenu={selectedAppointmentMenu}\r\n    //       selectedScopedMenu={selectedScopedMenu}\r\n    //     />\r\n    //   </AppBar>\r\n    // </Fragment>\r\n    <AppBar\r\n      position=\"fixed\"\r\n      padding=\"1rem\"\r\n      sx={{\r\n        width: { md: `calc(100% - (${drawerWidth}px + 5em))` },\r\n      }}\r\n    >\r\n      <Toolbar className={classes.appBar}>\r\n        <Grid item marginInline={2.5}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{\r\n              color: \"white\",\r\n              fontSize: \"3rem\",\r\n              background: \"black\",\r\n              display: { md: \"none\" },\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <HeadersContents\r\n          selectedMenu={selectedMenu}\r\n          drawerWidth={drawerWidth}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n        />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nHeaders.propTypes = {\r\n  selectedMenu: PropTypes.number,\r\n  selectedSubMenu: PropTypes.number,\r\n  selectedPatientMenu: PropTypes.number,\r\n  selectedHcpMenu: PropTypes.number,\r\n  waitingListMenu: PropTypes.number,\r\n  selectedAppointmentMenu: PropTypes.number,\r\n  selectedScopedMenu: PropTypes.number,\r\n};\r\n\r\nexport default Headers;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalDashboardChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HeadersContents.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HeaderContents.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\Time.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\Card.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\Loader.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\helpers\\filterHelperFunctions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\modals\\DeleteOrDisable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\hooks\\useFormInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\modals\\Success.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\FormikControl.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\CustomButton.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\DashboardChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\helpers\\asideMenus.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\HospitalHeaderContent.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\DashCharts.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\CircularChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\AvailabilityTable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfileHospital.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\TextError.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\SearchInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\Search.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\Modal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\modals\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\LineChart2.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\LineChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\NotistackAlert.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\FormSelect.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\LinearProgress.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\FormInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\FilterList.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfile2.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfile1.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\CircularProgress.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\AvailabilityCard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\Button.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\DisplayProfiles.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\helpers\\func.js",["729"],"export const arrangeItems = (array) => {\r\n  let finalArray = [];\r\n  let n = 0;\r\n  let arrayValues = [];\r\n  let arrayObject = {};\r\n  arrayObject.name = undefined;\r\n\r\n  // array.sort();\r\n  array.forEach((element) => {\r\n    let container = element.split(\":\");\r\n    if (arrayObject.name === container[0]) {\r\n      arrayValues.push(container[1]);\r\n      arrayObject.value = arrayValues;\r\n    } else {\r\n      finalArray[n] = arrayObject;\r\n      arrayValues = [];\r\n      arrayObject = {};\r\n      arrayObject.name = container[0];\r\n      arrayValues.push(container[1]);\r\n      arrayObject.value = arrayValues;\r\n      n += 1;\r\n    }\r\n  });\r\n  finalArray.shift();\r\n  console.log(finalArray);\r\n  return finalArray;\r\n};\r\n\r\nexport const removeEmptyStringValues = (obj) => {\r\n  try {\r\n    let newObj = {};\r\n    for (const key in obj) {\r\n      if (obj[key] !== \"\") {\r\n        newObj[key] = obj[key];\r\n      }\r\n    }\r\n    return newObj;\r\n  } catch (err) {\r\n    console.err(\"error from removeEmptyStringValues FN\", err);\r\n    return obj;\r\n  }\r\n};\r\n\r\nexport const setSideNav = (appNavData, pathname, setNav) => {\r\n  try {\r\n    const pathArr = pathname.split(\"/\");\r\n    if (pathArr.length < 2) {\r\n      setNav(0);\r\n      return;\r\n    }\r\n\r\n    appNavData.map((data) => {\r\n      if (data.path === `/${pathArr[1]}`) {\r\n        setNav(data?.id);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.log(\"Something sent wrong with setSideNav FN\", error);\r\n  }\r\n};\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Copy.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\bMI.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\modals\\RoleModal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\modals\\SubscriptionModal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\modals\\ReferPatient.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\Date.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\Textarea.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\Input.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\LoginInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\File.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\DateTimePicker.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\FormRadio.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\Select.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\validation\\Checkbox.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\hooks\\useCopy.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\layouts\\SideNav.js",["730"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { HiLogout } from \"react-icons/hi\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport {\r\n  ListItemButton,\r\n  List,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@mui/material\";\r\n\r\nimport logo from \"assets/images/logo.svg\";\r\nimport { setSideNav } from \"helpers/func\";\r\nimport useAppType from \"../../hooks/useAppType\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { LOGOUT_USER } from \"components/graphQL/Mutation\";\r\nimport DeleteOrDisable from \"components/modals/DeleteOrDisable\";\r\nimport {\r\n  hospitalMenu,\r\n  pharmacyMenu,\r\n  diagnosticsMenu,\r\n} from \"helpers/asideMenus\";\r\n\r\nconst SideNav = ({ drawerWidth }) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    aside: {\r\n      width: `${drawerWidth}`,\r\n      background: \"#fff\",\r\n      paddingLeft: \"2.5em\",\r\n      paddingRight: \"2.5em\",\r\n      paddingTop: \"1em\",\r\n      minHeight: \"100vh\",\r\n      boxShadow: \"5px -5px 7px #eee\",\r\n      height: \"100%\",\r\n      position: \"fixed\",\r\n      overflowY: \"hidden\",\r\n      zIndex: theme.zIndex.appBar + 1,\r\n\r\n      \"&:hover\": {\r\n        overflowY: \"scroll\",\r\n      },\r\n\r\n      \"& .MuiListItemButton-root\": {\r\n        marginBottom: \"2em\",\r\n\r\n        \"&:hover\": {\r\n          background: theme.palette.common.lightRed,\r\n\r\n          \"& .MuiSvgIcon-root\": {\r\n            color: theme.palette.common.red,\r\n          },\r\n\r\n          \"& .MuiTypography-root\": {\r\n            color: theme.palette.common.red,\r\n          },\r\n\r\n          \"& .message-icon\": {\r\n            color: theme.palette.common.red,\r\n          },\r\n        },\r\n      },\r\n\r\n      \"& .MuiListItemIcon-root\": {\r\n        minWidth: 50,\r\n      },\r\n\r\n      \"& .MuiSvgIcon-root\": {\r\n        fontSize: \"2rem\",\r\n\r\n        \"&:hover\": {\r\n          color: theme.palette.common.red,\r\n        },\r\n      },\r\n\r\n      \"& .MuiTypography-root\": {\r\n        fontSize: \"1.45rem\",\r\n      },\r\n\r\n      \"& .MuiListItemButton-root.Mui-selected\": {\r\n        backgroundColor: theme.palette.common.lightRed,\r\n        color: theme.palette.common.red,\r\n        borderRadius: \".5rem\",\r\n\r\n        \"&:hover\": {\r\n          backgroundColor: theme.palette.common.lightRed,\r\n        },\r\n\r\n        \"& .MuiListItemIcon-root\": {\r\n          color: theme.palette.common.red,\r\n        },\r\n\r\n        \"& .MuiTypography-root\": {\r\n          color: theme.palette.common.red,\r\n        },\r\n      },\r\n\r\n      \"&::-webkit-scrollbar\": {\r\n        width: \".85rem\",\r\n      },\r\n\r\n      \"&::-webkit-scrollbar-track\": {\r\n        boxShadow: \"inset 0 0 1rem rgba(0, 0, 0, 0.2)\",\r\n      },\r\n\r\n      \"&::-webkit-scrollbar-thumb\": {\r\n        borderRadius: \".5rem\",\r\n        background: theme.palette.common.lightGrey,\r\n      },\r\n    },\r\n    logoWrapper: {\r\n      paddingTop: \"3em\",\r\n      paddingBottom: \"2em\",\r\n      paddingLeft: \"1em\",\r\n    },\r\n    logout: {\r\n      \"&.MuiListItemButton-root\": {\r\n        marginTop: \"2.5rem\",\r\n\r\n        \"& .MuiListItemIcon-root\": {\r\n          color: theme.palette.common.red,\r\n        },\r\n\r\n        \"& .MuiTypography-root\": {\r\n          color: theme.palette.common.red,\r\n        },\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const { type } = useAppType();\r\n  const location = useLocation();\r\n  const { logout } = useActions();\r\n  const [logout_user] = useMutation(LOGOUT_USER);\r\n  const [Logout, setLogout] = React.useState(false);\r\n  const [selectedMenu, setSelectedMenu] = React.useState(0);\r\n\r\n  const sideNavData = React.useMemo(() => {\r\n    return type === \"hospital\"\r\n      ? hospitalMenu\r\n      : type === \"pharmacy\"\r\n      ? pharmacyMenu\r\n      : type === \"diagnostics\"\r\n      ? diagnosticsMenu\r\n      : [];\r\n  }, [type]);\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logout_user({\r\n        variables: {\r\n          user: localStorage.getItem(\"AppId\"),\r\n        },\r\n      });\r\n      logout();\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setSideNav(sideNavData, location?.pathname, setSelectedMenu);\r\n  }, [location?.pathname, sideNavData]);\r\n\r\n  return (\r\n    <>\r\n      <aside className={classes.aside}>\r\n        <div className={classes.logoWrapper}>\r\n          <img src={logo} alt=\"logo\" />\r\n        </div>\r\n        <List>\r\n          {sideNavData.map((menu) => (\r\n            <ListItemButton\r\n              disableRipple\r\n              key={menu?.id}\r\n              onClick={() => {\r\n                setSelectedMenu(menu?.id);\r\n              }}\r\n              selected={selectedMenu === menu.id}\r\n              component={Link}\r\n              to={menu.path}\r\n            >\r\n              <ListItemIcon>\r\n                {React.createElement(\r\n                  menu?.icon,\r\n                  menu?.id === 5 ? { size: 20, className: \"message-icon\" } : {}\r\n                )}\r\n              </ListItemIcon>\r\n\r\n              <ListItemText>{menu?.title}</ListItemText>\r\n            </ListItemButton>\r\n          ))}\r\n          <ListItemButton\r\n            disableRipple\r\n            classes={{ root: classes.logout }}\r\n            onClick={() => setLogout(true)}\r\n          >\r\n            <ListItemIcon>\r\n              <HiLogout size={20} />\r\n            </ListItemIcon>\r\n\r\n            <ListItemText>Logout</ListItemText>\r\n          </ListItemButton>\r\n        </List>\r\n      </aside>\r\n      <DeleteOrDisable\r\n        open={Logout}\r\n        setOpen={setLogout}\r\n        title=\"Logout\"\r\n        confirmationMsg=\"logout\"\r\n        btnValue=\"Logout\"\r\n        type=\"logout\"\r\n        onConfirm={handleLogout}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\hooks\\useAppType.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\contexts\\AppTypeContext.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\store\\contexts\\appTypeReducer.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\depreciated\\HospitalHeader.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\helperFunctions\\breadcrumb.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\mocks\\patterns.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\helpers\\mockData.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Utilities\\ProfileCard.js",["731"],"import React from \"react\";\r\nimport { Typography, Grid, Chip } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    background: \"#fff\",\r\n    borderRadius: \"1rem\",\r\n    // padding: \"4rem 5rem\",\r\n    height: \"16.1rem\",\r\n    boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.2)\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    fontSize: \"1.25rem\",\r\n    color: theme.palette.common.green,\r\n    padding: \".75rem\",\r\n    borderRadius: \"1.5rem\",\r\n    textDecoration: \"none\",\r\n  },\r\n  infoBadge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.25rem\",\r\n      borderRadius: \"1.5rem\",\r\n      color: theme.palette.common.green,\r\n    },\r\n  },\r\n}));\r\nconst ProfileCard = ({ value, text, type }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"center\"\r\n      rowGap={{ md: 4, sm: 3, xs: 3 }}\r\n      alignItems=\"center\"\r\n      className={classes.cardGrid}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h4\">{text}</Typography>\r\n      </Grid>\r\n\r\n      {type === \"alergy\"\r\n        ? value?.map((i, key) => (\r\n            <a\r\n              rel=\"noreferrer\"\r\n              key={i._id}\r\n              className={classes.link}\r\n              href={i.url}\r\n              target=\"_blank\"\r\n            ></a>\r\n          ))\r\n        : null}\r\n      <Grid item>\r\n        {Array.isArray(value) ? (\r\n          value.map((i, key) => (\r\n            <Chip variant=\"outlined\" key={key} label={i} className={classes.infoBadge} />\r\n          ))\r\n        ) : (\r\n          <Chip variant=\"outlined\" label={value} className={classes.infoBadge} />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nProfileCard.propTypes = {\r\n  text: PropTypes.string,\r\n  value: PropTypes.string,\r\n  type: PropTypes.string,\r\n};\r\nexport default ProfileCard;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Dproject_Pharmacy\\src\\components\\Forms\\Filters\\index.js",["732"],{"ruleId":"733","replacedBy":"734"},{"ruleId":"735","replacedBy":"736"},{"ruleId":"737","severity":1,"message":"738","line":1,"column":17,"nodeType":"739","messageId":"740","endLine":1,"endColumn":26},{"ruleId":"737","severity":1,"message":"741","line":2,"column":8,"nodeType":"739","messageId":"740","endLine":2,"endColumn":17},{"ruleId":"737","severity":1,"message":"738","line":1,"column":17,"nodeType":"739","messageId":"740","endLine":1,"endColumn":26},{"ruleId":"737","severity":1,"message":"741","line":2,"column":8,"nodeType":"739","messageId":"740","endLine":2,"endColumn":17},{"ruleId":"737","severity":1,"message":"741","line":2,"column":8,"nodeType":"739","messageId":"740","endLine":2,"endColumn":17},{"ruleId":"742","severity":1,"message":"743","line":136,"column":30,"nodeType":"744","messageId":"745","endLine":136,"endColumn":32},{"ruleId":"737","severity":1,"message":"741","line":2,"column":8,"nodeType":"739","messageId":"740","endLine":2,"endColumn":17},{"ruleId":"737","severity":1,"message":"741","line":2,"column":8,"nodeType":"739","messageId":"740","endLine":2,"endColumn":17},{"ruleId":"737","severity":1,"message":"741","line":7,"column":8,"nodeType":"739","messageId":"740","endLine":7,"endColumn":17},{"ruleId":"737","severity":1,"message":"741","line":2,"column":8,"nodeType":"739","messageId":"740","endLine":2,"endColumn":17},{"ruleId":"737","severity":1,"message":"746","line":1,"column":38,"nodeType":"739","messageId":"740","endLine":1,"endColumn":53},{"ruleId":"737","severity":1,"message":"746","line":1,"column":38,"nodeType":"739","messageId":"740","endLine":1,"endColumn":53},{"ruleId":"737","severity":1,"message":"741","line":2,"column":8,"nodeType":"739","messageId":"740","endLine":2,"endColumn":17},{"ruleId":"737","severity":1,"message":"741","line":2,"column":8,"nodeType":"739","messageId":"740","endLine":2,"endColumn":17},{"ruleId":"737","severity":1,"message":"746","line":1,"column":17,"nodeType":"739","messageId":"740","endLine":1,"endColumn":32},{"ruleId":"737","severity":1,"message":"747","line":1,"column":17,"nodeType":"739","messageId":"740","endLine":1,"endColumn":25},{"ruleId":"737","severity":1,"message":"748","line":26,"column":5,"nodeType":"739","messageId":"740","endLine":26,"endColumn":20},{"ruleId":"737","severity":1,"message":"749","line":27,"column":5,"nodeType":"739","messageId":"740","endLine":27,"endColumn":24},{"ruleId":"737","severity":1,"message":"750","line":28,"column":5,"nodeType":"739","messageId":"740","endLine":28,"endColumn":20},{"ruleId":"737","severity":1,"message":"751","line":29,"column":5,"nodeType":"739","messageId":"740","endLine":29,"endColumn":20},{"ruleId":"737","severity":1,"message":"752","line":30,"column":5,"nodeType":"739","messageId":"740","endLine":30,"endColumn":28},{"ruleId":"737","severity":1,"message":"753","line":31,"column":5,"nodeType":"739","messageId":"740","endLine":31,"endColumn":23},{"ruleId":"754","severity":1,"message":"755","line":52,"column":27,"nodeType":"756","messageId":"757","endLine":52,"endColumn":29},{"ruleId":"737","severity":1,"message":"741","line":2,"column":8,"nodeType":"739","messageId":"740","endLine":2,"endColumn":17},{"ruleId":"758","severity":1,"message":"759","line":50,"column":13,"nodeType":"760","endLine":56,"endColumn":14},{"ruleId":"737","severity":1,"message":"761","line":3,"column":10,"nodeType":"739","messageId":"740","endLine":3,"endColumn":14},"no-native-reassign",["762"],"no-negated-in-lhs",["763"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useLayoutEffect' is defined but never used.","'Fragment' is defined but never used.","'selectedSubMenu' is assigned a value but never used.","'selectedPatientMenu' is assigned a value but never used.","'selectedHcpMenu' is assigned a value but never used.","'waitingListMenu' is assigned a value but never used.","'selectedAppointmentMenu' is assigned a value but never used.","'selectedScopedMenu' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation"]